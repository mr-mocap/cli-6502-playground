!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
A	./FTXUI/src/ftxui/component/event.cpp	356;"	kind:member	class:ftxui::Event	file:
ALetter	./FTXUI/src/ftxui/screen/string_internal.hpp	41;"	kind:member	class:ftxui::WordBreakProperty	access:private
Active	./FTXUI/include/ftxui/component/component_base.hpp	82;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
Active	./FTXUI/include/ftxui/component/screen_interactive.hpp	44;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
Active	./FTXUI/src/ftxui/component/component.cpp	207;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
Active	./FTXUI/src/ftxui/component/screen_interactive.cpp	594;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ActiveChild	./FTXUI/include/ftxui/component/component_base.hpp	74;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:()
ActiveChild	./FTXUI/src/ftxui/component/component.cpp	183;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
Adapter	./FTXUI/include/ftxui/util/ref.hpp	119;"	kind:class	class:ftxui::ConstStringListRef	access:public
Adapter	./FTXUI/include/ftxui/util/ref.hpp	121;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:()
Adapter	./FTXUI/include/ftxui/util/ref.hpp	122;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:(const Adapter&)
Adapter	./FTXUI/include/ftxui/util/ref.hpp	124;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:(Adapter&&)
Adapter	./FTXUI/src/ftxui/util/ref_test.cpp	12;"	kind:class	namespace:ftxui::__anon67	file:	inherits:ConstStringListRef::Adapter
Adapter	./FTXUI/src/ftxui/util/ref_test.cpp	14;"	kind:function	class:ftxui::__anon67::Adapter	access:public	signature:(std::vector<std::string>& entries)
Add	./FTXUI/include/ftxui/component/component_base.hpp	48;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(Component children)
Add	./FTXUI/src/ftxui/component/component.cpp	75;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(Component child)
Add	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	108;"	kind:function	class:ftxui::TerminalInputParser	signature:(char c)
Add	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	22;"	kind:prototype	class:ftxui::TerminalInputParser	access:public	signature:(char c)
AddPart	./FTXUI/include/ftxui/dom/selection.hpp	28;"	kind:prototype	class:ftxui::Selection	access:public	signature:(const std::string& part, int y, int left, int right)
AddPart	./FTXUI/src/ftxui/dom/selection.cpp	146;"	kind:function	class:ftxui::Selection	signature:(const std::string& part, int y, int left, int right)
Address	./FTXUI/include/ftxui/util/ref.hpp	38;"	kind:function	class:ftxui::ConstRef	access:private	signature:() const
Address	./FTXUI/include/ftxui/util/ref.hpp	70;"	kind:function	class:ftxui::Ref	access:private	signature:() const
Address	./FTXUI/include/ftxui/util/ref.hpp	74;"	kind:function	class:ftxui::Ref	access:private	signature:()
AlignContent	./FTXUI/include/ftxui/dom/flexbox_config.hpp	82;"	kind:class	struct:ftxui::FlexboxConfig	access:public
AlignItems	./FTXUI/include/ftxui/dom/flexbox_config.hpp	71;"	kind:class	struct:ftxui::FlexboxConfig	access:public
AltA	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
AltA	./FTXUI/src/ftxui/component/event.cpp	410;"	kind:member	class:ftxui::Event	file:
AltB	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
AltB	./FTXUI/src/ftxui/component/event.cpp	411;"	kind:member	class:ftxui::Event	file:
AltC	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
AltC	./FTXUI/src/ftxui/component/event.cpp	412;"	kind:member	class:ftxui::Event	file:
AltD	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
AltD	./FTXUI/src/ftxui/component/event.cpp	413;"	kind:member	class:ftxui::Event	file:
AltE	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
AltE	./FTXUI/src/ftxui/component/event.cpp	414;"	kind:member	class:ftxui::Event	file:
AltF	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
AltF	./FTXUI/src/ftxui/component/event.cpp	415;"	kind:member	class:ftxui::Event	file:
AltG	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
AltG	./FTXUI/src/ftxui/component/event.cpp	416;"	kind:member	class:ftxui::Event	file:
AltH	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
AltH	./FTXUI/src/ftxui/component/event.cpp	417;"	kind:member	class:ftxui::Event	file:
AltI	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
AltI	./FTXUI/src/ftxui/component/event.cpp	418;"	kind:member	class:ftxui::Event	file:
AltJ	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
AltJ	./FTXUI/src/ftxui/component/event.cpp	419;"	kind:member	class:ftxui::Event	file:
AltK	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
AltK	./FTXUI/src/ftxui/component/event.cpp	420;"	kind:member	class:ftxui::Event	file:
AltL	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
AltL	./FTXUI/src/ftxui/component/event.cpp	421;"	kind:member	class:ftxui::Event	file:
AltM	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
AltM	./FTXUI/src/ftxui/component/event.cpp	422;"	kind:member	class:ftxui::Event	file:
AltN	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
AltN	./FTXUI/src/ftxui/component/event.cpp	423;"	kind:member	class:ftxui::Event	file:
AltO	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
AltO	./FTXUI/src/ftxui/component/event.cpp	424;"	kind:member	class:ftxui::Event	file:
AltP	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
AltP	./FTXUI/src/ftxui/component/event.cpp	425;"	kind:member	class:ftxui::Event	file:
AltQ	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
AltQ	./FTXUI/src/ftxui/component/event.cpp	426;"	kind:member	class:ftxui::Event	file:
AltR	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
AltR	./FTXUI/src/ftxui/component/event.cpp	427;"	kind:member	class:ftxui::Event	file:
AltS	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
AltS	./FTXUI/src/ftxui/component/event.cpp	428;"	kind:member	class:ftxui::Event	file:
AltT	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
AltT	./FTXUI/src/ftxui/component/event.cpp	429;"	kind:member	class:ftxui::Event	file:
AltU	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
AltU	./FTXUI/src/ftxui/component/event.cpp	430;"	kind:member	class:ftxui::Event	file:
AltV	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
AltV	./FTXUI/src/ftxui/component/event.cpp	431;"	kind:member	class:ftxui::Event	file:
AltW	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
AltW	./FTXUI/src/ftxui/component/event.cpp	432;"	kind:member	class:ftxui::Event	file:
AltX	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
AltX	./FTXUI/src/ftxui/component/event.cpp	433;"	kind:member	class:ftxui::Event	file:
AltY	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
AltY	./FTXUI/src/ftxui/component/event.cpp	434;"	kind:member	class:ftxui::Event	file:
AltZ	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
AltZ	./FTXUI/src/ftxui/component/event.cpp	435;"	kind:member	class:ftxui::Event	file:
Angle	./FTXUI/include/ftxui/dom/linear_gradient.hpp	44;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(float angle)
Angle	./FTXUI/src/ftxui/dom/linear_gradient.cpp	216;"	kind:function	class:ftxui::LinearGradient	signature:(float a)
Animated	./FTXUI/include/ftxui/component/component_options.hpp	117;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:()
Animated	./FTXUI/include/ftxui/component/component_options.hpp	118;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:(Color color)
Animated	./FTXUI/include/ftxui/component/component_options.hpp	119;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:(Color background, Color foreground)
Animated	./FTXUI/include/ftxui/component/component_options.hpp	120;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:(Color background, Color foreground, Color background_active, Color foreground_active)
Animated	./FTXUI/src/ftxui/component/component_options.cpp	210;"	kind:function	class:ftxui::ButtonOption	signature:()
Animated	./FTXUI/src/ftxui/component/component_options.cpp	218;"	kind:function	class:ftxui::ButtonOption	signature:(Color color)
Animated	./FTXUI/src/ftxui/component/component_options.cpp	229;"	kind:function	class:ftxui::ButtonOption	signature:(Color background, Color foreground)
Animated	./FTXUI/src/ftxui/component/component_options.cpp	242;"	kind:function	class:ftxui::ButtonOption	signature:(Color background, Color foreground, Color background_active, Color foreground_active)
AnimatedColorOption	./FTXUI/include/ftxui/component/component_options.hpp	56;"	kind:struct	namespace:ftxui
AnimatedColorStyle	./FTXUI/src/ftxui/component/button.cpp	62;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:()
AnimatedColorStyle	./FTXUI/src/ftxui/component/menu.cpp	398;"	kind:function	class:ftxui::MenuBase	access:public	signature:(int i)
AnimatedColorsOption	./FTXUI/include/ftxui/component/component_options.hpp	70;"	kind:struct	namespace:ftxui
AnimationListener	./FTXUI/src/ftxui/component/screen_interactive.cpp	338;"	kind:function	namespace:ftxui::__anon48	signature:(std::atomic<bool>* quit, Sender<Task> out)
AnimationTask	./FTXUI/include/ftxui/component/task.hpp	12;"	kind:class	namespace:ftxui
Animator	./FTXUI/include/ftxui/component/animation.hpp	90;"	kind:class	namespace:ftxui::animation
Animator	./FTXUI/include/ftxui/component/animation.hpp	92;"	kind:prototype	class:ftxui::animation::Animator	access:public	signature:(float* from, float to = 0.f, Duration duration = std::chrono::milliseconds(250), easing::Function easing_function = easing::Linear, Duration delay = std::chrono::milliseconds(0))
Animator	./FTXUI/src/ftxui/component/animation.cpp	253;"	kind:function	class:ftxui::animation::Animator	signature:(float* from, float to, Duration duration, easing::Function easing_function, Duration delay)
ApplyShader	./FTXUI/include/ftxui/screen/screen.hpp	46;"	kind:prototype	class:ftxui::Screen	access:public	signature:()
ApplyShader	./FTXUI/src/ftxui/screen/screen.cpp	506;"	kind:function	class:ftxui::Screen	signature:()
ArrowDown	./FTXUI/include/ftxui/component/event.hpp	41;"	kind:member	struct:ftxui::Event	access:public
ArrowDown	./FTXUI/src/ftxui/component/event.cpp	295;"	kind:member	class:ftxui::Event	file:
ArrowDownCtrl	./FTXUI/include/ftxui/component/event.hpp	46;"	kind:member	struct:ftxui::Event	access:public
ArrowDownCtrl	./FTXUI/src/ftxui/component/event.cpp	299;"	kind:member	class:ftxui::Event	file:
ArrowLeft	./FTXUI/include/ftxui/component/event.hpp	38;"	kind:member	struct:ftxui::Event	access:public
ArrowLeft	./FTXUI/src/ftxui/component/event.cpp	292;"	kind:member	class:ftxui::Event	file:
ArrowLeftCtrl	./FTXUI/include/ftxui/component/event.hpp	43;"	kind:member	struct:ftxui::Event	access:public
ArrowLeftCtrl	./FTXUI/src/ftxui/component/event.cpp	296;"	kind:member	class:ftxui::Event	file:
ArrowRight	./FTXUI/include/ftxui/component/event.hpp	39;"	kind:member	struct:ftxui::Event	access:public
ArrowRight	./FTXUI/src/ftxui/component/event.cpp	293;"	kind:member	class:ftxui::Event	file:
ArrowRightCtrl	./FTXUI/include/ftxui/component/event.hpp	44;"	kind:member	struct:ftxui::Event	access:public
ArrowRightCtrl	./FTXUI/src/ftxui/component/event.cpp	297;"	kind:member	class:ftxui::Event	file:
ArrowUp	./FTXUI/include/ftxui/component/event.hpp	40;"	kind:member	struct:ftxui::Event	access:public
ArrowUp	./FTXUI/src/ftxui/component/event.cpp	294;"	kind:member	class:ftxui::Event	file:
ArrowUpCtrl	./FTXUI/include/ftxui/component/event.hpp	45;"	kind:member	struct:ftxui::Event	access:public
ArrowUpCtrl	./FTXUI/src/ftxui/component/event.cpp	298;"	kind:member	class:ftxui::Event	file:
Ascii	./FTXUI/include/ftxui/component/component_options.hpp	114;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:()
Ascii	./FTXUI/src/ftxui/component/component_options.cpp	164;"	kind:function	class:ftxui::ButtonOption	signature:()
AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	13;"	kind:class	namespace:ftxui
AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	15;"	kind:function	class:ftxui::AutoReset	access:public	signature:(T* variable, T new_value)
AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	19;"	kind:prototype	class:ftxui::AutoReset	access:public	signature:(const AutoReset&)
AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	20;"	kind:prototype	class:ftxui::AutoReset	access:public	signature:(AutoReset&&)
B	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
B	./FTXUI/src/ftxui/component/event.cpp	357;"	kind:member	class:ftxui::Event	file:
BackIn	./FTXUI/include/ftxui/component/animation.hpp	80;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
BackIn	./FTXUI/src/ftxui/component/animation.cpp	202;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
BackInOut	./FTXUI/include/ftxui/component/animation.hpp	82;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
BackInOut	./FTXUI/src/ftxui/component/animation.cpp	215;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
BackOut	./FTXUI/include/ftxui/component/animation.hpp	81;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
BackOut	./FTXUI/src/ftxui/component/animation.cpp	207;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
Backspace	./FTXUI/include/ftxui/component/event.hpp	49;"	kind:member	struct:ftxui::Event	access:public
Backspace	./FTXUI/src/ftxui/component/event.cpp	300;"	kind:member	class:ftxui::Event	file:
Bar	./FTXUI/include/ftxui/screen/screen.hpp	59;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
BarBlinking	./FTXUI/include/ftxui/screen/screen.hpp	58;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
BasicComponent	./FTXUI/src/ftxui/component/hoverable_test.cpp	31;"	kind:function	namespace:ftxui::__anon44	signature:()
BasicComponent	./FTXUI/src/ftxui/component/resizable_split_test.cpp	20;"	kind:function	namespace:ftxui::__anon41	signature:()
BencharkBasic	./FTXUI/src/ftxui/dom/benchmark_test.cpp	13;"	kind:function	namespace:ftxui	signature:(benchmark::State& state)
BencharkText	./FTXUI/src/ftxui/dom/benchmark_test.cpp	37;"	kind:function	namespace:ftxui	signature:(benchmark::State& state)
BenchmarkStyle	./FTXUI/src/ftxui/dom/benchmark_test.cpp	51;"	kind:function	namespace:ftxui	signature:(benchmark::State& state)
BgColor	./FTXUI/src/ftxui/dom/color.cpp	16;"	kind:class	namespace:ftxui::__anon12	file:	inherits:NodeDecorator
BgColor	./FTXUI/src/ftxui/dom/color.cpp	18;"	kind:function	class:ftxui::__anon12::BgColor	access:public	signature:(Element child, Color color)
Bisearch	./FTXUI/src/ftxui/screen/string.cpp	1105;"	kind:function	namespace:__anon64	signature:(uint32_t ucs, const std::array<Interval, N>& table)
Bisearch	./FTXUI/src/ftxui/screen/string.cpp	1128;"	kind:function	namespace:__anon64	signature:(uint32_t ucs, const std::array<C, N>& table, C* out)
Blend	./FTXUI/include/ftxui/screen/color.hpp	41;"	kind:prototype	class:ftxui::Color	access:public	signature:(const Color& lhs, const Color& rhs)
Blend	./FTXUI/src/ftxui/screen/color.cpp	281;"	kind:function	class:ftxui::Color	signature:(const Color& lhs, const Color& rhs)
Blink	./FTXUI/src/ftxui/dom/blink.cpp	16;"	kind:class	namespace:ftxui::__anon18	file:	inherits:NodeDecorator
Block	./FTXUI/include/ftxui/screen/screen.hpp	55;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
Block	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	13;"	kind:struct	namespace:ftxui::flexbox_helper
BlockBlinking	./FTXUI/include/ftxui/screen/screen.hpp	54;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
Bold	./FTXUI/src/ftxui/dom/bold.cpp	16;"	kind:class	namespace:ftxui::__anon2	file:	inherits:NodeDecorator
Border	./FTXUI/include/ftxui/component/component_options.hpp	116;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:()
Border	./FTXUI/include/ftxui/dom/table.hpp	74;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
Border	./FTXUI/src/ftxui/component/component_options.cpp	192;"	kind:function	class:ftxui::ButtonOption	signature:()
Border	./FTXUI/src/ftxui/dom/border.cpp	35;"	kind:class	namespace:ftxui::__anon38	file:	inherits:Node
Border	./FTXUI/src/ftxui/dom/border.cpp	37;"	kind:function	class:ftxui::__anon38::Border	access:public	signature:(Elements children, BorderStyle style, std::optional<Color> foreground_color = std::nullopt)
Border	./FTXUI/src/ftxui/dom/table.cpp	363;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
BorderBottom	./FTXUI/include/ftxui/dom/table.hpp	78;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
BorderBottom	./FTXUI/src/ftxui/dom/table.cpp	456;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
BorderLeft	./FTXUI/include/ftxui/dom/table.hpp	75;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
BorderLeft	./FTXUI/src/ftxui/dom/table.cpp	426;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
BorderPixel	./FTXUI/src/ftxui/dom/border.cpp	132;"	kind:class	namespace:ftxui::__anon38	file:	inherits:Node
BorderPixel	./FTXUI/src/ftxui/dom/border.cpp	134;"	kind:function	class:ftxui::__anon38::BorderPixel	access:public	signature:(Elements children, Pixel pixel)
BorderRight	./FTXUI/include/ftxui/dom/table.hpp	76;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
BorderRight	./FTXUI/src/ftxui/dom/table.cpp	436;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
BorderStyle	./FTXUI/include/ftxui/dom/elements.hpp	27;"	kind:enum	namespace:ftxui
BorderTop	./FTXUI/include/ftxui/dom/table.hpp	77;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
BorderTop	./FTXUI/src/ftxui/dom/table.cpp	446;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
BounceIn	./FTXUI/include/ftxui/component/animation.hpp	85;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
BounceIn	./FTXUI/src/ftxui/component/animation.cpp	224;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
BounceInOut	./FTXUI/include/ftxui/component/animation.hpp	87;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
BounceInOut	./FTXUI/src/ftxui/component/animation.cpp	244;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
BounceOut	./FTXUI/include/ftxui/component/animation.hpp	86;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
BounceOut	./FTXUI/src/ftxui/component/animation.cpp	228;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
Box	./FTXUI/include/ftxui/screen/box.hpp	15;"	kind:member	struct:ftxui::Box	access:public
Box	./FTXUI/include/ftxui/screen/box.hpp	16;"	kind:member	struct:ftxui::Box	access:public
Box	./FTXUI/include/ftxui/screen/box.hpp	9;"	kind:struct	namespace:ftxui
Button	./FTXUI/include/ftxui/component/component.hpp	48;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, std::function<void()> on_click, ButtonOption options = ButtonOption::Simple())
Button	./FTXUI/include/ftxui/component/mouse.hpp	12;"	kind:enum	struct:ftxui::Mouse	access:public
Button	./FTXUI/src/ftxui/component/button.cpp	176;"	kind:function	namespace:ftxui	signature:(ButtonOption option)
Button	./FTXUI/src/ftxui/component/button.cpp	204;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, std::function<void()> on_click, ButtonOption option)
ButtonBase	./FTXUI/src/ftxui/component/button.cpp	35;"	kind:class	namespace:ftxui::__anon61	file:	inherits:ComponentBase,ButtonOption
ButtonBase	./FTXUI/src/ftxui/component/button.cpp	37;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:(ButtonOption option)
ButtonOption	./FTXUI/include/ftxui/component/component_options.hpp	112;"	kind:struct	namespace:ftxui
C	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
C	./FTXUI/src/ftxui/component/event.cpp	358;"	kind:member	class:ftxui::Event	file:
CHARACTER	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	31;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
CR	./FTXUI/src/ftxui/screen/string_internal.hpp	42;"	kind:member	class:ftxui::WordBreakProperty	access:private
CSI	./FTXUI/src/ftxui/component/screen_interactive.cpp	261;"	kind:member	namespace:ftxui::__anon48	file:
CURSOR_POSITION	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	33;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
CURSOR_SHAPE	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	34;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
Canvas	./FTXUI/include/ftxui/dom/canvas.hpp	23;"	kind:struct	namespace:ftxui
Canvas	./FTXUI/include/ftxui/dom/canvas.hpp	25;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:()
Canvas	./FTXUI/include/ftxui/dom/canvas.hpp	26;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int width, int height)
Canvas	./FTXUI/src/ftxui/dom/canvas.cpp	90;"	kind:function	class:ftxui::Canvas	signature:(int width, int height)
CanvasNodeBase	./FTXUI/src/ftxui/dom/canvas.cpp	869;"	kind:class	namespace:ftxui::__anon35	file:	inherits:Node
CanvasNodeBase	./FTXUI/src/ftxui/dom/canvas.cpp	871;"	kind:prototype	class:ftxui::__anon35::CanvasNodeBase	file:	access:public	signature:()
CaptureMouse	./FTXUI/include/ftxui/component/component_base.hpp	94;"	kind:prototype	class:ftxui::ComponentBase	access:protected	signature:(const Event& event)
CaptureMouse	./FTXUI/include/ftxui/component/screen_interactive.hpp	56;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
CaptureMouse	./FTXUI/src/ftxui/component/component.cpp	250;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(const Event& event)
CaptureMouse	./FTXUI/src/ftxui/component/screen_interactive.cpp	483;"	kind:function	class:ftxui::ScreenInteractive	signature:()
CaptureMouseImpl	./FTXUI/src/ftxui/component/component.cpp	28;"	kind:class	namespace:ftxui::ftxui::__anon47	file:	inherits:CapturedMouseInterface
CapturedMouseImpl	./FTXUI/src/ftxui/component/screen_interactive.cpp	324;"	kind:class	namespace:ftxui::__anon48	file:	inherits:CapturedMouseInterface
CapturedMouseImpl	./FTXUI/src/ftxui/component/screen_interactive.cpp	326;"	kind:function	class:ftxui::__anon48::CapturedMouseImpl	access:public	signature:(std::function<void(void)> callback)
CapturedMouseImpl	./FTXUI/src/ftxui/component/screen_interactive.cpp	329;"	kind:prototype	class:ftxui::__anon48::CapturedMouseImpl	file:	access:public	signature:(const CapturedMouseImpl&)
CapturedMouseImpl	./FTXUI/src/ftxui/component/screen_interactive.cpp	330;"	kind:prototype	class:ftxui::__anon48::CapturedMouseImpl	file:	access:public	signature:(CapturedMouseImpl&&)
CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	10;"	kind:class	namespace:ftxui
CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	12;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:()
CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	13;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:(const CapturedMouseInterface&)
CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	14;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:(CapturedMouseInterface&&)
CatchEvent	./FTXUI/include/ftxui/component/component.hpp	112;"	kind:prototype	namespace:ftxui	signature:(Component child, std::function<bool(Event)>)
CatchEvent	./FTXUI/include/ftxui/component/component.hpp	113;"	kind:prototype	namespace:ftxui	signature:(std::function<bool(Event)> on_event)
CatchEvent	./FTXUI/src/ftxui/component/catch_event.cpp	54;"	kind:function	namespace:ftxui	signature:(Component child, std::function<bool(Event event)> on_event)
CatchEvent	./FTXUI/src/ftxui/component/catch_event.cpp	80;"	kind:function	namespace:ftxui	signature:(std::function<bool(Event)> on_event)
CatchEventBase	./FTXUI/src/ftxui/component/catch_event.cpp	13;"	kind:class	namespace:ftxui	file:	inherits:ComponentBase
CatchEventBase	./FTXUI/src/ftxui/component/catch_event.cpp	16;"	kind:function	class:ftxui::CatchEventBase	access:public	signature:(std::function<bool(Event)> on_event)
Cell	./FTXUI/include/ftxui/dom/canvas.hpp	120;"	kind:struct	struct:ftxui::Canvas	access:private
CellToGlyphIndex	./FTXUI/include/ftxui/screen/string.hpp	27;"	kind:prototype	namespace:ftxui	signature:(const std::string& input)
CellToGlyphIndex	./FTXUI/src/ftxui/screen/string.cpp	1464;"	kind:function	namespace:ftxui	signature:(const std::string& input)
CellType	./FTXUI/include/ftxui/dom/canvas.hpp	114;"	kind:enum	struct:ftxui::Canvas	access:private
Center	./FTXUI/include/ftxui/dom/flexbox_config.hpp	50;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
Center	./FTXUI/include/ftxui/dom/flexbox_config.hpp	74;"	kind:member	class:ftxui::FlexboxConfig::AlignItems	access:private
Center	./FTXUI/include/ftxui/dom/flexbox_config.hpp	85;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
Character	./FTXUI/include/ftxui/component/event.hpp	129;"	kind:member	class:ftxui::Event::Type	access:private
Character	./FTXUI/include/ftxui/component/event.hpp	29;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string)
Character	./FTXUI/include/ftxui/component/event.hpp	30;"	kind:prototype	struct:ftxui::Event	access:public	signature:(char)
Character	./FTXUI/include/ftxui/component/event.hpp	31;"	kind:prototype	struct:ftxui::Event	access:public	signature:(wchar_t)
Character	./FTXUI/src/ftxui/component/event.cpp	29;"	kind:function	class:ftxui::Event	signature:(std::string input)
Character	./FTXUI/src/ftxui/component/event.cpp	40;"	kind:function	class:ftxui::Event	signature:(char c)
Character	./FTXUI/src/ftxui/component/event.cpp	48;"	kind:function	class:ftxui::Event	signature:(wchar_t c)
Check	./FTXUI/include/ftxui/dom/node.hpp	60;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Status* status)
Check	./FTXUI/src/ftxui/dom/node.cpp	69;"	kind:function	class:ftxui::Node	signature:(Status* status)
CheckStdinReady	./FTXUI/src/ftxui/component/screen_interactive.cpp	165;"	kind:function	namespace:ftxui::__anon48	signature:(int usec_timeout)
Checkbox	./FTXUI/include/ftxui/component/component.hpp	52;"	kind:prototype	namespace:ftxui	signature:(CheckboxOption options)
Checkbox	./FTXUI/include/ftxui/component/component.hpp	53;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, bool* checked, CheckboxOption options = CheckboxOption::Simple())
Checkbox	./FTXUI/src/ftxui/component/checkbox.cpp	108;"	kind:function	namespace:ftxui	signature:(CheckboxOption option)
Checkbox	./FTXUI/src/ftxui/component/checkbox.cpp	135;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, bool* checked, CheckboxOption option)
CheckboxBase	./FTXUI/src/ftxui/component/checkbox.cpp	19;"	kind:class	namespace:ftxui::__anon57	file:	inherits:ComponentBase,CheckboxOption
CheckboxBase	./FTXUI/src/ftxui/component/checkbox.cpp	21;"	kind:function	class:ftxui::__anon57::CheckboxBase	access:public	signature:(CheckboxOption option)
CheckboxOption	./FTXUI/include/ftxui/component/component_options.hpp	135;"	kind:struct	namespace:ftxui
ChildAt	./FTXUI/include/ftxui/component/component_base.hpp	45;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(size_t i)
ChildAt	./FTXUI/src/ftxui/component/component.cpp	45;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(size_t i)
ChildCount	./FTXUI/include/ftxui/component/component_base.hpp	46;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
ChildCount	./FTXUI/src/ftxui/component/component.cpp	52;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
CircularIn	./FTXUI/include/ftxui/component/animation.hpp	65;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
CircularIn	./FTXUI/src/ftxui/component/animation.cpp	132;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
CircularInOut	./FTXUI/include/ftxui/component/animation.hpp	67;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
CircularInOut	./FTXUI/src/ftxui/component/animation.cpp	144;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
CircularOut	./FTXUI/include/ftxui/component/animation.hpp	66;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
CircularOut	./FTXUI/src/ftxui/component/animation.cpp	137;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
Clamp	./FTXUI/src/ftxui/component/menu.cpp	86;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
Clamp	./FTXUI/src/ftxui/component/radiobox.cpp	157;"	kind:function	class:ftxui::__anon55::RadioboxBase	file:	access:private	signature:()
Clear	./FTXUI/include/ftxui/screen/image.hpp	36;"	kind:prototype	class:ftxui::Image	access:public	signature:()
Clear	./FTXUI/include/ftxui/screen/screen.hpp	41;"	kind:prototype	class:ftxui::Screen	access:public	signature:()
Clear	./FTXUI/src/ftxui/screen/image.cpp	55;"	kind:function	class:ftxui::Image	signature:()
Clear	./FTXUI/src/ftxui/screen/screen.cpp	494;"	kind:function	class:ftxui::Screen	signature:()
ClearUnder	./FTXUI/src/ftxui/dom/clear_under.cpp	18;"	kind:class	namespace:ftxui::__anon37	file:	inherits:NodeDecorator
Clone	./FTXUI/include/ftxui/component/receiver.hpp	62;"	kind:function	class:ftxui::SenderImpl	access:public	signature:()
CodepointToWordBreakProperty	./FTXUI/src/ftxui/screen/string.cpp	1307;"	kind:function	namespace:ftxui	signature:(uint32_t codepoint)
CodepointToWordBreakProperty	./FTXUI/src/ftxui/screen/string_internal.hpp	60;"	kind:prototype	namespace:ftxui	signature:(uint32_t codepoint)
Collapsible	./FTXUI/include/ftxui/component/component.hpp	123;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, Component child, Ref<bool> show = false)
Collapsible	./FTXUI/src/ftxui/component/collapsible.cpp	33;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, Component child, Ref<bool> show)
Color	./FTXUI/include/ftxui/screen/color.hpp	20;"	kind:class	namespace:ftxui
Color	./FTXUI/include/ftxui/screen/color.hpp	27;"	kind:prototype	class:ftxui::Color	access:public	signature:()
Color	./FTXUI/include/ftxui/screen/color.hpp	28;"	kind:prototype	class:ftxui::Color	access:public	signature:(Palette1 index)
Color	./FTXUI/include/ftxui/screen/color.hpp	29;"	kind:prototype	class:ftxui::Color	access:public	signature:(Palette16 index)
Color	./FTXUI/include/ftxui/screen/color.hpp	30;"	kind:prototype	class:ftxui::Color	access:public	signature:(Palette256 index)
Color	./FTXUI/include/ftxui/screen/color.hpp	32;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha = 255)
Color	./FTXUI/include/ftxui/screen/terminal.hpp	17;"	kind:enum	namespace:ftxui::Terminal
Color	./FTXUI/src/ftxui/screen/color.cpp	108;"	kind:function	class:ftxui::Color	signature:(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)
Color	./FTXUI/src/ftxui/screen/color.cpp	78;"	kind:prototype	class:ftxui::Color	file:	signature:()
Color	./FTXUI/src/ftxui/screen/color.cpp	82;"	kind:function	class:ftxui::Color	signature:(Palette1 )
Color	./FTXUI/src/ftxui/screen/color.cpp	86;"	kind:function	class:ftxui::Color	signature:(Palette16 index)
Color	./FTXUI/src/ftxui/screen/color.cpp	91;"	kind:function	class:ftxui::Color	signature:(Palette256 index)
ColorInfo	./FTXUI/include/ftxui/screen/color_info.hpp	12;"	kind:struct	namespace:ftxui
ColorSupport	./FTXUI/include/ftxui/screen/terminal.hpp	23;"	kind:prototype	namespace:ftxui::Terminal	signature:()
ColorSupport	./FTXUI/src/ftxui/screen/terminal.cpp	130;"	kind:function	namespace:ftxui::Terminal	signature:()
ColorType	./FTXUI/include/ftxui/screen/color.hpp	322;"	kind:class	class:ftxui::Color	inherits:uint8_t	access:private
Column	./FTXUI/include/ftxui/dom/flexbox_config.hpp	23;"	kind:member	class:ftxui::FlexboxConfig::Direction	access:private
Component	./FTXUI/include/ftxui/component/component_base.hpp	24;"	kind:class	namespace:ftxui
Components	./FTXUI/include/ftxui/component/component_base.hpp	25;"	kind:class	namespace:ftxui
ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	30;"	kind:class	namespace:ftxui
ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	32;"	kind:function	class:ftxui::ComponentBase	access:public	signature:(Components children)
ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	35;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	38;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(const ComponentBase&)
ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	39;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(ComponentBase&&)
Compute	./FTXUI/src/ftxui/dom/box_helper.cpp	65;"	kind:function	namespace:ftxui::box_helper	signature:(std::vector<Element>* elements, int target_size)
Compute	./FTXUI/src/ftxui/dom/box_helper.hpp	22;"	kind:prototype	namespace:ftxui::box_helper	signature:(std::vector<Element>* elements, int target_size)
Compute	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	369;"	kind:function	namespace:ftxui::flexbox_helper	signature:(Global& global)
Compute	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	49;"	kind:prototype	namespace:ftxui::flexbox_helper	signature:(Global& global)
Compute1	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	309;"	kind:prototype	namespace:ftxui::flexbox_helper::__anon14	file:	signature:(Global& global)
Compute1	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	313;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& global)
Compute2	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	310;"	kind:prototype	namespace:ftxui::flexbox_helper::__anon14	file:	signature:(Global& global)
Compute2	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	323;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& global)
Compute3	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	311;"	kind:prototype	namespace:ftxui::flexbox_helper::__anon14	file:	signature:(Global& global)
Compute3	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	333;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& global)
ComputeColorSupport	./FTXUI/src/ftxui/screen/terminal.cpp	59;"	kind:function	namespace:ftxui::__anon66	signature:()
ComputeGrow	./FTXUI/src/ftxui/dom/box_helper.cpp	15;"	kind:function	namespace:ftxui::box_helper::__anon28	signature:(std::vector<Element>* elements, int extra_space, int flex_grow_sum)
ComputeRequirement	./FTXUI/include/ftxui/dom/node.hpp	37;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:()
ComputeRequirement	./FTXUI/src/ftxui/dom/node.cpp	21;"	kind:function	class:ftxui::Node	signature:()
ComputeRequirement	./FTXUI/src/ftxui/dom/node_decorator.cpp	12;"	kind:function	class:ftxui::NodeDecorator	signature:()
ComputeShrinkEasy	./FTXUI/src/ftxui/dom/box_helper.cpp	30;"	kind:function	namespace:ftxui::box_helper::__anon28	signature:(std::vector<Element>* elements, int extra_space, int flex_shrink_sum)
ComputeShrinkHard	./FTXUI/src/ftxui/dom/box_helper.cpp	46;"	kind:function	namespace:ftxui::box_helper::__anon28	signature:(std::vector<Element>* elements, int extra_space, int size)
ConstRef	./FTXUI/include/ftxui/util/ref.hpp	17;"	kind:class	namespace:ftxui
ConstRef	./FTXUI/include/ftxui/util/ref.hpp	19;"	kind:prototype	class:ftxui::ConstRef	access:public	signature:()
ConstRef	./FTXUI/include/ftxui/util/ref.hpp	20;"	kind:function	class:ftxui::ConstRef	access:public	signature:(T t)
ConstRef	./FTXUI/include/ftxui/util/ref.hpp	21;"	kind:function	class:ftxui::ConstRef	access:public	signature:(const T* t)
ConstRef	./FTXUI/include/ftxui/util/ref.hpp	23;"	kind:prototype	class:ftxui::ConstRef	access:public	signature:(const ConstRef<T>&)
ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	116;"	kind:class	namespace:ftxui
ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	141;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:(ConstStringListRef&&)
ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	142;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:(const ConstStringListRef&)
ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	144;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(std::vector<std::string> value)
ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	148;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(const std::vector<std::string>* value)
ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	152;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(const std::vector<std::wstring>* value)
ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	156;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(Adapter* adapter)
ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	161;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(std::unique_ptr<AdapterType> adapter)
ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	100;"	kind:function	class:ftxui::ConstStringRef	access:public	signature:(const std::wstring ref)
ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	102;"	kind:function	class:ftxui::ConstStringRef	access:public	signature:(const wchar_t* ref)
ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	104;"	kind:function	class:ftxui::ConstStringRef	access:public	signature:(const char* ref)
ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	94;"	kind:class	namespace:ftxui	inherits:ConstRef
ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	98;"	kind:function	class:ftxui::ConstStringRef	access:public	signature:(const std::wstring* ref)
Constraint	./FTXUI/include/ftxui/dom/elements.hpp	154;"	kind:enum	namespace:ftxui
Contain	./FTXUI/include/ftxui/screen/box.hpp	18;"	kind:prototype	struct:ftxui::Box	access:public	signature:(int x, int y) const
Contain	./FTXUI/src/ftxui/screen/box.cpp	46;"	kind:function	class:ftxui::Box	signature:(int x, int y) const
ContainerBase	./FTXUI/src/ftxui/component/container.cpp	18;"	kind:class	namespace:ftxui	file:	inherits:ComponentBase
ContainerBase	./FTXUI/src/ftxui/component/container.cpp	20;"	kind:function	class:ftxui::ContainerBase	access:public	signature:(Components children, int* selector)
Contains	./FTXUI/src/ftxui/screen/terminal.cpp	55;"	kind:function	namespace:ftxui::__anon66	signature:(const std::string& s, const char* key)
Create	./FTXUI/include/ftxui/screen/screen.hpp	31;"	kind:prototype	class:ftxui::Screen	access:public	signature:(Dimensions dimension)
Create	./FTXUI/include/ftxui/screen/screen.hpp	32;"	kind:prototype	class:ftxui::Screen	access:public	signature:(Dimensions width, Dimensions height)
Create	./FTXUI/src/ftxui/screen/screen.cpp	388;"	kind:function	class:ftxui::Screen	signature:(Dimensions width, Dimensions height)
Create	./FTXUI/src/ftxui/screen/screen.cpp	394;"	kind:function	class:ftxui::Screen	signature:(Dimensions dimension)
CtrlA	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
CtrlA	./FTXUI/src/ftxui/component/event.cpp	383;"	kind:member	class:ftxui::Event	file:
CtrlAltA	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
CtrlAltA	./FTXUI/src/ftxui/component/event.cpp	437;"	kind:member	class:ftxui::Event	file:
CtrlAltB	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
CtrlAltB	./FTXUI/src/ftxui/component/event.cpp	438;"	kind:member	class:ftxui::Event	file:
CtrlAltC	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
CtrlAltC	./FTXUI/src/ftxui/component/event.cpp	439;"	kind:member	class:ftxui::Event	file:
CtrlAltD	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
CtrlAltD	./FTXUI/src/ftxui/component/event.cpp	440;"	kind:member	class:ftxui::Event	file:
CtrlAltE	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
CtrlAltE	./FTXUI/src/ftxui/component/event.cpp	441;"	kind:member	class:ftxui::Event	file:
CtrlAltF	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
CtrlAltF	./FTXUI/src/ftxui/component/event.cpp	442;"	kind:member	class:ftxui::Event	file:
CtrlAltG	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
CtrlAltG	./FTXUI/src/ftxui/component/event.cpp	443;"	kind:member	class:ftxui::Event	file:
CtrlAltH	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
CtrlAltH	./FTXUI/src/ftxui/component/event.cpp	444;"	kind:member	class:ftxui::Event	file:
CtrlAltI	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
CtrlAltI	./FTXUI/src/ftxui/component/event.cpp	445;"	kind:member	class:ftxui::Event	file:
CtrlAltJ	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
CtrlAltJ	./FTXUI/src/ftxui/component/event.cpp	446;"	kind:member	class:ftxui::Event	file:
CtrlAltK	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
CtrlAltK	./FTXUI/src/ftxui/component/event.cpp	447;"	kind:member	class:ftxui::Event	file:
CtrlAltL	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
CtrlAltL	./FTXUI/src/ftxui/component/event.cpp	448;"	kind:member	class:ftxui::Event	file:
CtrlAltM	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
CtrlAltM	./FTXUI/src/ftxui/component/event.cpp	449;"	kind:member	class:ftxui::Event	file:
CtrlAltN	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
CtrlAltN	./FTXUI/src/ftxui/component/event.cpp	450;"	kind:member	class:ftxui::Event	file:
CtrlAltO	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
CtrlAltO	./FTXUI/src/ftxui/component/event.cpp	451;"	kind:member	class:ftxui::Event	file:
CtrlAltP	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
CtrlAltP	./FTXUI/src/ftxui/component/event.cpp	452;"	kind:member	class:ftxui::Event	file:
CtrlAltQ	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
CtrlAltQ	./FTXUI/src/ftxui/component/event.cpp	453;"	kind:member	class:ftxui::Event	file:
CtrlAltR	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
CtrlAltR	./FTXUI/src/ftxui/component/event.cpp	454;"	kind:member	class:ftxui::Event	file:
CtrlAltS	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
CtrlAltS	./FTXUI/src/ftxui/component/event.cpp	455;"	kind:member	class:ftxui::Event	file:
CtrlAltT	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
CtrlAltT	./FTXUI/src/ftxui/component/event.cpp	456;"	kind:member	class:ftxui::Event	file:
CtrlAltU	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
CtrlAltU	./FTXUI/src/ftxui/component/event.cpp	457;"	kind:member	class:ftxui::Event	file:
CtrlAltV	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
CtrlAltV	./FTXUI/src/ftxui/component/event.cpp	458;"	kind:member	class:ftxui::Event	file:
CtrlAltW	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
CtrlAltW	./FTXUI/src/ftxui/component/event.cpp	459;"	kind:member	class:ftxui::Event	file:
CtrlAltX	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
CtrlAltX	./FTXUI/src/ftxui/component/event.cpp	460;"	kind:member	class:ftxui::Event	file:
CtrlAltY	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
CtrlAltY	./FTXUI/src/ftxui/component/event.cpp	461;"	kind:member	class:ftxui::Event	file:
CtrlAltZ	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
CtrlAltZ	./FTXUI/src/ftxui/component/event.cpp	462;"	kind:member	class:ftxui::Event	file:
CtrlB	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
CtrlB	./FTXUI/src/ftxui/component/event.cpp	384;"	kind:member	class:ftxui::Event	file:
CtrlC	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
CtrlC	./FTXUI/src/ftxui/component/event.cpp	385;"	kind:member	class:ftxui::Event	file:
CtrlD	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
CtrlD	./FTXUI/src/ftxui/component/event.cpp	386;"	kind:member	class:ftxui::Event	file:
CtrlE	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
CtrlE	./FTXUI/src/ftxui/component/event.cpp	387;"	kind:member	class:ftxui::Event	file:
CtrlF	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
CtrlF	./FTXUI/src/ftxui/component/event.cpp	388;"	kind:member	class:ftxui::Event	file:
CtrlG	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
CtrlG	./FTXUI/src/ftxui/component/event.cpp	389;"	kind:member	class:ftxui::Event	file:
CtrlH	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
CtrlH	./FTXUI/src/ftxui/component/event.cpp	390;"	kind:member	class:ftxui::Event	file:
CtrlI	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
CtrlI	./FTXUI/src/ftxui/component/event.cpp	391;"	kind:member	class:ftxui::Event	file:
CtrlJ	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
CtrlJ	./FTXUI/src/ftxui/component/event.cpp	392;"	kind:member	class:ftxui::Event	file:
CtrlK	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
CtrlK	./FTXUI/src/ftxui/component/event.cpp	393;"	kind:member	class:ftxui::Event	file:
CtrlL	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
CtrlL	./FTXUI/src/ftxui/component/event.cpp	394;"	kind:member	class:ftxui::Event	file:
CtrlM	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
CtrlM	./FTXUI/src/ftxui/component/event.cpp	395;"	kind:member	class:ftxui::Event	file:
CtrlN	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
CtrlN	./FTXUI/src/ftxui/component/event.cpp	396;"	kind:member	class:ftxui::Event	file:
CtrlO	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
CtrlO	./FTXUI/src/ftxui/component/event.cpp	397;"	kind:member	class:ftxui::Event	file:
CtrlP	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
CtrlP	./FTXUI/src/ftxui/component/event.cpp	398;"	kind:member	class:ftxui::Event	file:
CtrlQ	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
CtrlQ	./FTXUI/src/ftxui/component/event.cpp	399;"	kind:member	class:ftxui::Event	file:
CtrlR	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
CtrlR	./FTXUI/src/ftxui/component/event.cpp	400;"	kind:member	class:ftxui::Event	file:
CtrlS	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
CtrlS	./FTXUI/src/ftxui/component/event.cpp	401;"	kind:member	class:ftxui::Event	file:
CtrlT	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
CtrlT	./FTXUI/src/ftxui/component/event.cpp	402;"	kind:member	class:ftxui::Event	file:
CtrlU	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
CtrlU	./FTXUI/src/ftxui/component/event.cpp	403;"	kind:member	class:ftxui::Event	file:
CtrlV	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
CtrlV	./FTXUI/src/ftxui/component/event.cpp	404;"	kind:member	class:ftxui::Event	file:
CtrlW	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
CtrlW	./FTXUI/src/ftxui/component/event.cpp	405;"	kind:member	class:ftxui::Event	file:
CtrlX	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
CtrlX	./FTXUI/src/ftxui/component/event.cpp	406;"	kind:member	class:ftxui::Event	file:
CtrlY	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
CtrlY	./FTXUI/src/ftxui/component/event.cpp	407;"	kind:member	class:ftxui::Event	file:
CtrlZ	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
CtrlZ	./FTXUI/src/ftxui/component/event.cpp	408;"	kind:member	class:ftxui::Event	file:
CubicIn	./FTXUI/include/ftxui/component/animation.hpp	45;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
CubicIn	./FTXUI/src/ftxui/component/animation.cpp	51;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
CubicInOut	./FTXUI/include/ftxui/component/animation.hpp	47;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
CubicInOut	./FTXUI/src/ftxui/component/animation.cpp	64;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
CubicOut	./FTXUI/include/ftxui/component/animation.hpp	46;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
CubicOut	./FTXUI/src/ftxui/component/animation.cpp	56;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
Current	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	115;"	kind:function	class:ftxui::TerminalInputParser	signature:()
Current	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	25;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
Cursor	./FTXUI/include/ftxui/component/event.hpp	136;"	kind:struct	struct:ftxui::Event	access:private
Cursor	./FTXUI/include/ftxui/screen/screen.hpp	48;"	kind:struct	class:ftxui::Screen	access:public
CursorColumn	./FTXUI/src/ftxui/component/input.cpp	247;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
CursorPosition	./FTXUI/include/ftxui/component/event.hpp	131;"	kind:member	class:ftxui::Event::Type	access:private
CursorPosition	./FTXUI/include/ftxui/component/event.hpp	34;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string, int x, int y)
CursorPosition	./FTXUI/src/ftxui/component/event.cpp	87;"	kind:function	class:ftxui::Event	signature:(std::string input, int x, int y)
CursorPosition	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	38;"	kind:struct	class:ftxui::TerminalInputParser	access:private
CursorShape	./FTXUI/include/ftxui/component/event.hpp	132;"	kind:member	class:ftxui::Event::Type	access:private
CursorShape	./FTXUI/include/ftxui/component/event.hpp	35;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string, int shape)
CursorShape	./FTXUI/src/ftxui/component/event.cpp	67;"	kind:function	class:ftxui::Event	signature:(std::string input, int shape)
Custom	./FTXUI/include/ftxui/component/event.hpp	95;"	kind:member	struct:ftxui::Event	access:public
Custom	./FTXUI/src/ftxui/component/event.cpp	327;"	kind:member	class:ftxui::Event	file:
D	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
D	./FTXUI/src/ftxui/component/event.cpp	359;"	kind:member	class:ftxui::Event	file:
DASHED	./FTXUI/include/ftxui/dom/elements.hpp	29;"	kind:enumerator	enum:ftxui::BorderStyle
DBox	./FTXUI/src/ftxui/dom/dbox.cpp	19;"	kind:class	namespace:ftxui::__anon19	file:	inherits:Node
DBox	./FTXUI/src/ftxui/dom/dbox.cpp	21;"	kind:function	class:ftxui::__anon19::DBox	access:public	signature:(Elements children)
DCS	./FTXUI/src/ftxui/component/screen_interactive.cpp	264;"	kind:member	namespace:ftxui::__anon48	file:
DECMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	273;"	kind:class	namespace:ftxui::__anon48	file:	inherits:std::uint16_t
DECRQSS_DECSCUSR	./FTXUI/src/ftxui/component/screen_interactive.cpp	270;"	kind:member	namespace:ftxui::__anon48	file:
DEFINE_CONSOLEV2_PROPERTIES	./FTXUI/src/ftxui/component/screen_interactive.cpp	40;"	kind:macro	file:
DOUBLE	./FTXUI/include/ftxui/dom/elements.hpp	31;"	kind:enumerator	enum:ftxui::BorderStyle
DROP	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	30;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
DSRMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	292;"	kind:class	namespace:ftxui::__anon48	file:	inherits:std::uint8_t
DebugString	./FTXUI/include/ftxui/component/event.hpp	119;"	kind:prototype	struct:ftxui::Event	access:public	signature:() const
DebugString	./FTXUI/src/ftxui/component/event.cpp	96;"	kind:function	class:ftxui::Event	signature:() const
Decorate	./FTXUI/include/ftxui/dom/table.hpp	66;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator)
Decorate	./FTXUI/src/ftxui/dom/table.cpp	255;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator)
DecorateAlternateColumn	./FTXUI/include/ftxui/dom/table.hpp	68;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator, int modulo = 2, int shift = 0)
DecorateAlternateColumn	./FTXUI/src/ftxui/dom/table.cpp	287;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator, int modulo, int shift)
DecorateAlternateRow	./FTXUI/include/ftxui/dom/table.hpp	67;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator, int modulo = 2, int shift = 0)
DecorateAlternateRow	./FTXUI/src/ftxui/dom/table.cpp	307;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator, int modulo, int shift)
DecorateCells	./FTXUI/include/ftxui/dom/table.hpp	70;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator)
DecorateCells	./FTXUI/src/ftxui/dom/table.cpp	269;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator)
DecorateCellsAlternateColumn	./FTXUI/include/ftxui/dom/table.hpp	71;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator, int modulo = 2, int shift = 0)
DecorateCellsAlternateColumn	./FTXUI/src/ftxui/dom/table.cpp	327;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator, int modulo, int shift)
DecorateCellsAlternateRow	./FTXUI/include/ftxui/dom/table.hpp	72;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator, int modulo = 2, int shift = 0)
DecorateCellsAlternateRow	./FTXUI/src/ftxui/dom/table.cpp	347;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator, int modulo, int shift)
Default	./FTXUI/include/ftxui/component/component_options.hpp	166;"	kind:prototype	struct:ftxui::InputOption	access:public	signature:()
Default	./FTXUI/src/ftxui/component/component_options.cpp	312;"	kind:function	class:ftxui::InputOption	signature:()
DefaultOptionTransform	./FTXUI/src/ftxui/component/menu.cpp	29;"	kind:function	namespace:ftxui::__anon46	signature:(const EntryState& state)
DefaultRenderState	./FTXUI/src/ftxui/component/window.cpp	94;"	kind:function	namespace:ftxui::__anon54	signature:(const WindowRenderState& state)
DefaultTransform	./FTXUI/src/ftxui/component/button.cpp	24;"	kind:function	namespace:ftxui::__anon61	signature:(EntryState params)
Delete	./FTXUI/include/ftxui/component/event.hpp	50;"	kind:member	struct:ftxui::Event	access:public
Delete	./FTXUI/src/ftxui/component/event.cpp	301;"	kind:member	class:ftxui::Event	file:
DeleteImpl	./FTXUI/src/ftxui/component/input.cpp	209;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
Detach	./FTXUI/include/ftxui/component/component_base.hpp	49;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
Detach	./FTXUI/src/ftxui/component/component.cpp	85;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
DetachAllChildren	./FTXUI/include/ftxui/component/component_base.hpp	50;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
DetachAllChildren	./FTXUI/src/ftxui/component/component.cpp	101;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
DeviceStatusReport	./FTXUI/src/ftxui/component/screen_interactive.cpp	320;"	kind:function	namespace:ftxui::__anon48	signature:(DSRMode ps)
Dim	./FTXUI/src/ftxui/dom/dim.cpp	16;"	kind:class	namespace:ftxui::__anon39	file:	inherits:NodeDecorator
Dimension	./FTXUI/include/ftxui/component/screen_interactive.hpp	98;"	kind:class	class:ftxui::ScreenInteractive	access:private
Dimensions	./FTXUI/include/ftxui/screen/terminal.hpp	8;"	kind:struct	namespace:ftxui
Direction	./FTXUI/include/ftxui/dom/direction.hpp	8;"	kind:class	namespace:ftxui
Direction	./FTXUI/include/ftxui/dom/flexbox_config.hpp	20;"	kind:class	struct:ftxui::FlexboxConfig	access:public
Double_Quote	./FTXUI/src/ftxui/screen/string_internal.hpp	43;"	kind:member	class:ftxui::WordBreakProperty	access:private
Down	./FTXUI/include/ftxui/dom/direction.hpp	10;"	kind:member	class:ftxui::Direction	access:private
Draw	./FTXUI/include/ftxui/component/screen_interactive.hpp	92;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(Component component)
Draw	./FTXUI/src/ftxui/component/screen_interactive.cpp	905;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component)
DrawBlock	./FTXUI/include/ftxui/dom/canvas.hpp	63;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value)
DrawBlock	./FTXUI/include/ftxui/dom/canvas.hpp	64;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value, const Stylizer& s)
DrawBlock	./FTXUI/include/ftxui/dom/canvas.hpp	65;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value, const Color& color)
DrawBlock	./FTXUI/src/ftxui/dom/canvas.cpp	438;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value)
DrawBlock	./FTXUI/src/ftxui/dom/canvas.cpp	447;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value, const Color& color)
DrawBlock	./FTXUI/src/ftxui/dom/canvas.cpp	456;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value, const Stylizer& style)
DrawBlockCircle	./FTXUI/include/ftxui/dom/canvas.hpp	69;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius)
DrawBlockCircle	./FTXUI/include/ftxui/dom/canvas.hpp	70;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius, const Stylizer& s)
DrawBlockCircle	./FTXUI/include/ftxui/dom/canvas.hpp	71;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius, const Color& color)
DrawBlockCircle	./FTXUI/src/ftxui/dom/canvas.cpp	592;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius)
DrawBlockCircle	./FTXUI/src/ftxui/dom/canvas.cpp	601;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Color& color)
DrawBlockCircle	./FTXUI/src/ftxui/dom/canvas.cpp	611;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Stylizer& style)
DrawBlockCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	72;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius)
DrawBlockCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	73;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius, const Stylizer& s)
DrawBlockCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	74;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius, const Color& color)
DrawBlockCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	619;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius)
DrawBlockCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	628;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Color& color)
DrawBlockCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	641;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Stylizer& s)
DrawBlockEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	75;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2)
DrawBlockEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	76;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
DrawBlockEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	77;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2, const Color& color)
DrawBlockEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	653;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2)
DrawBlockEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	663;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2, const Color& color)
DrawBlockEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	678;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
DrawBlockEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	78;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2)
DrawBlockEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	79;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
DrawBlockEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	84;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2, const Color& color)
DrawBlockEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	719;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2)
DrawBlockEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	729;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2, const Color& color)
DrawBlockEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	744;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
DrawBlockLine	./FTXUI/include/ftxui/dom/canvas.hpp	66;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2)
DrawBlockLine	./FTXUI/include/ftxui/dom/canvas.hpp	67;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2, const Stylizer& s)
DrawBlockLine	./FTXUI/include/ftxui/dom/canvas.hpp	68;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2, const Color& color)
DrawBlockLine	./FTXUI/src/ftxui/dom/canvas.cpp	531;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2)
DrawBlockLine	./FTXUI/src/ftxui/dom/canvas.cpp	541;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2, const Color& color)
DrawBlockLine	./FTXUI/src/ftxui/dom/canvas.cpp	552;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2, const Stylizer& style)
DrawBlockOff	./FTXUI/include/ftxui/dom/canvas.hpp	61;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
DrawBlockOff	./FTXUI/src/ftxui/dom/canvas.cpp	488;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
DrawBlockOn	./FTXUI/include/ftxui/dom/canvas.hpp	60;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
DrawBlockOn	./FTXUI/src/ftxui/dom/canvas.cpp	468;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
DrawBlockToggle	./FTXUI/include/ftxui/dom/canvas.hpp	62;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
DrawBlockToggle	./FTXUI/src/ftxui/dom/canvas.cpp	509;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
DrawImage	./FTXUI/include/ftxui/dom/canvas.hpp	102;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const Image&)
DrawImage	./FTXUI/src/ftxui/dom/canvas.cpp	839;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const Image& image)
DrawPixel	./FTXUI/include/ftxui/dom/canvas.hpp	101;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const Pixel&)
DrawPixel	./FTXUI/src/ftxui/dom/canvas.cpp	827;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const Pixel& p)
DrawPoint	./FTXUI/include/ftxui/dom/canvas.hpp	39;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value)
DrawPoint	./FTXUI/include/ftxui/dom/canvas.hpp	40;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value, const Stylizer& s)
DrawPoint	./FTXUI/include/ftxui/dom/canvas.hpp	41;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value, const Color& color)
DrawPoint	./FTXUI/src/ftxui/dom/canvas.cpp	107;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value)
DrawPoint	./FTXUI/src/ftxui/dom/canvas.cpp	116;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value, const Color& color)
DrawPoint	./FTXUI/src/ftxui/dom/canvas.cpp	125;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value, const Stylizer& style)
DrawPointCircle	./FTXUI/include/ftxui/dom/canvas.hpp	45;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius)
DrawPointCircle	./FTXUI/include/ftxui/dom/canvas.hpp	46;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius, const Stylizer& s)
DrawPointCircle	./FTXUI/include/ftxui/dom/canvas.hpp	47;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius, const Color& color)
DrawPointCircle	./FTXUI/src/ftxui/dom/canvas.cpp	249;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius)
DrawPointCircle	./FTXUI/src/ftxui/dom/canvas.cpp	258;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Color& color)
DrawPointCircle	./FTXUI/src/ftxui/dom/canvas.cpp	268;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Stylizer& style)
DrawPointCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	48;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius)
DrawPointCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	49;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius, const Stylizer& s)
DrawPointCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	50;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius, const Color& color)
DrawPointCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	276;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius)
DrawPointCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	285;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Color& color)
DrawPointCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	298;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Stylizer& style)
DrawPointEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	51;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2)
DrawPointEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	52;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2, const Color& color)
DrawPointEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	53;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2, const Stylizer& s)
DrawPointEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	310;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2)
DrawPointEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	320;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2, const Color& color)
DrawPointEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	335;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
DrawPointEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	54;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2)
DrawPointEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	55;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2, const Color& color)
DrawPointEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	56;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2, const Stylizer& s)
DrawPointEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	374;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2)
DrawPointEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	384;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Color& color)
DrawPointEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	399;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
DrawPointLine	./FTXUI/include/ftxui/dom/canvas.hpp	42;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2)
DrawPointLine	./FTXUI/include/ftxui/dom/canvas.hpp	43;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2, const Stylizer& s)
DrawPointLine	./FTXUI/include/ftxui/dom/canvas.hpp	44;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2, const Color& color)
DrawPointLine	./FTXUI/src/ftxui/dom/canvas.cpp	191;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2)
DrawPointLine	./FTXUI/src/ftxui/dom/canvas.cpp	201;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2, const Color& color)
DrawPointLine	./FTXUI/src/ftxui/dom/canvas.cpp	212;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2, const Stylizer& style)
DrawPointOff	./FTXUI/include/ftxui/dom/canvas.hpp	37;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
DrawPointOff	./FTXUI/src/ftxui/dom/canvas.cpp	154;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
DrawPointOn	./FTXUI/include/ftxui/dom/canvas.hpp	36;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
DrawPointOn	./FTXUI/src/ftxui/dom/canvas.cpp	137;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
DrawPointToggle	./FTXUI/include/ftxui/dom/canvas.hpp	38;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
DrawPointToggle	./FTXUI/src/ftxui/dom/canvas.cpp	172;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
DrawText	./FTXUI/include/ftxui/dom/canvas.hpp	18;"	kind:macro
DrawText	./FTXUI/include/ftxui/dom/canvas.hpp	94;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const std::string& value)
DrawText	./FTXUI/include/ftxui/dom/canvas.hpp	95;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const std::string& value, const Color& color)
DrawText	./FTXUI/include/ftxui/dom/canvas.hpp	96;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const std::string& value, const Stylizer& style)
DrawText	./FTXUI/src/ftxui/dom/canvas.cpp	785;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const std::string& value)
DrawText	./FTXUI/src/ftxui/dom/canvas.cpp	794;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const std::string& value, const Color& color)
DrawText	./FTXUI/src/ftxui/dom/canvas.cpp	806;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const std::string& value, const Stylizer& style)
Dropdown	./FTXUI/include/ftxui/component/component.hpp	75;"	kind:prototype	namespace:ftxui	signature:(ConstStringListRef entries, int* selected)
Dropdown	./FTXUI/include/ftxui/component/component.hpp	76;"	kind:prototype	namespace:ftxui	signature:(DropdownOption options)
Dropdown	./FTXUI/src/ftxui/component/dropdown.cpp	22;"	kind:function	namespace:ftxui	signature:(ConstStringListRef entries, int* selected)
Dropdown	./FTXUI/src/ftxui/component/dropdown.cpp	33;"	kind:function	namespace:ftxui	signature:(DropdownOption option)
DropdownOption	./FTXUI/include/ftxui/component/component_options.hpp	270;"	kind:struct	namespace:ftxui
E	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
E	./FTXUI/src/ftxui/component/event.cpp	360;"	kind:member	class:ftxui::Event	file:
EMPTY	./FTXUI/include/ftxui/dom/elements.hpp	33;"	kind:enumerator	enum:ftxui::BorderStyle
EQUAL	./FTXUI/include/ftxui/dom/elements.hpp	154;"	kind:enumerator	enum:ftxui::Constraint
Eat	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	119;"	kind:function	class:ftxui::TerminalInputParser	signature:()
Eat	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	26;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
EatCodePoint	./FTXUI/src/ftxui/screen/string.cpp	1174;"	kind:function	namespace:ftxui	signature:(const std::string& input, size_t start, size_t* end, uint32_t* ucs)
EatCodePoint	./FTXUI/src/ftxui/screen/string.cpp	1244;"	kind:function	namespace:ftxui	signature:(const std::wstring& input, size_t start, size_t* end, uint32_t* ucs)
EatCodePoint	./FTXUI/src/ftxui/screen/string_internal.hpp	13;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, size_t start, size_t* end, uint32_t* ucs)
EatCodePoint	./FTXUI/src/ftxui/screen/string_internal.hpp	17;"	kind:prototype	namespace:ftxui	signature:(const std::wstring& input, size_t start, size_t* end, uint32_t* ucs)
ElasticIn	./FTXUI/include/ftxui/component/animation.hpp	75;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ElasticIn	./FTXUI/src/ftxui/component/animation.cpp	177;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ElasticInOut	./FTXUI/include/ftxui/component/animation.hpp	77;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ElasticInOut	./FTXUI/src/ftxui/component/animation.cpp	191;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ElasticOut	./FTXUI/include/ftxui/component/animation.hpp	76;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ElasticOut	./FTXUI/src/ftxui/component/animation.cpp	184;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
Element	./FTXUI/src/ftxui/dom/box_helper.hpp	12;"	kind:struct	namespace:ftxui::box_helper
End	./FTXUI/include/ftxui/component/event.hpp	59;"	kind:member	struct:ftxui::Event	access:public
End	./FTXUI/src/ftxui/component/event.cpp	324;"	kind:member	class:ftxui::Event	file:
EntryState	./FTXUI/include/ftxui/component/component_options.hpp	23;"	kind:struct	namespace:ftxui
Escape	./FTXUI/include/ftxui/component/event.hpp	52;"	kind:member	struct:ftxui::Event	access:public
Escape	./FTXUI/src/ftxui/component/event.cpp	302;"	kind:member	class:ftxui::Event	file:
Event	./FTXUI/include/ftxui/component/event.hpp	27;"	kind:struct	namespace:ftxui
EventHandler	./FTXUI/src/ftxui/component/container.cpp	63;"	kind:function	class:ftxui::ContainerBase	access:protected	implementation:virtual	signature:(Event )
EventListener	./FTXUI/src/ftxui/component/screen_interactive.cpp	139;"	kind:function	namespace:ftxui::__anon48	signature:(std::atomic<bool>* quit, Sender<Task> out)
EventListener	./FTXUI/src/ftxui/component/screen_interactive.cpp	175;"	kind:function	namespace:ftxui::__anon48	signature:(std::atomic<bool>* quit, Sender<Task> out)
EventListener	./FTXUI/src/ftxui/component/screen_interactive.cpp	85;"	kind:function	namespace:ftxui::__anon48	signature:(std::atomic<bool>* quit, Sender<Task> out)
ExecuteSignalHandlers	./FTXUI/src/ftxui/component/screen_interactive.cpp	235;"	kind:function	namespace:ftxui::__anon48	signature:()
Exit	./FTXUI/include/ftxui/component/screen_interactive.hpp	48;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
Exit	./FTXUI/src/ftxui/component/screen_interactive.cpp	1032;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ExitLoopClosure	./FTXUI/include/ftxui/component/screen_interactive.hpp	49;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ExitLoopClosure	./FTXUI/src/ftxui/component/screen_interactive.cpp	1026;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ExitNow	./FTXUI/include/ftxui/component/screen_interactive.hpp	77;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ExitNow	./FTXUI/src/ftxui/component/screen_interactive.cpp	1037;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ExponentialIn	./FTXUI/include/ftxui/component/animation.hpp	70;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ExponentialIn	./FTXUI/src/ftxui/component/animation.cpp	152;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ExponentialInOut	./FTXUI/include/ftxui/component/animation.hpp	72;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ExponentialInOut	./FTXUI/src/ftxui/component/animation.cpp	164;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ExponentialOut	./FTXUI/include/ftxui/component/animation.hpp	71;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ExponentialOut	./FTXUI/src/ftxui/component/animation.cpp	157;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
Extend	./FTXUI/src/ftxui/screen/string_internal.hpp	44;"	kind:member	class:ftxui::WordBreakProperty	access:private
ExtendNumLet	./FTXUI/src/ftxui/screen/string_internal.hpp	45;"	kind:member	class:ftxui::WordBreakProperty	access:private
F	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
F	./FTXUI/src/ftxui/component/event.cpp	361;"	kind:member	class:ftxui::Event	file:
F1	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F1	./FTXUI/src/ftxui/component/event.cpp	309;"	kind:member	class:ftxui::Event	file:
F10	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F10	./FTXUI/src/ftxui/component/event.cpp	318;"	kind:member	class:ftxui::Event	file:
F11	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F11	./FTXUI/src/ftxui/component/event.cpp	319;"	kind:member	class:ftxui::Event	file:
F12	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F12	./FTXUI/src/ftxui/component/event.cpp	320;"	kind:member	class:ftxui::Event	file:
F2	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F2	./FTXUI/src/ftxui/component/event.cpp	310;"	kind:member	class:ftxui::Event	file:
F3	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F3	./FTXUI/src/ftxui/component/event.cpp	311;"	kind:member	class:ftxui::Event	file:
F4	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F4	./FTXUI/src/ftxui/component/event.cpp	312;"	kind:member	class:ftxui::Event	file:
F5	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F5	./FTXUI/src/ftxui/component/event.cpp	313;"	kind:member	class:ftxui::Event	file:
F6	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F6	./FTXUI/src/ftxui/component/event.cpp	314;"	kind:member	class:ftxui::Event	file:
F7	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F7	./FTXUI/src/ftxui/component/event.cpp	315;"	kind:member	class:ftxui::Event	file:
F8	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F8	./FTXUI/src/ftxui/component/event.cpp	316;"	kind:member	class:ftxui::Event	file:
F9	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
F9	./FTXUI/src/ftxui/component/event.cpp	317;"	kind:member	class:ftxui::Event	file:
FTXUI_ANIMATION_HPP	./FTXUI/include/ftxui/component/animation.hpp	5;"	kind:macro
FTXUI_CAPTURED_MOUSE_HPP	./FTXUI/include/ftxui/component/captured_mouse.hpp	5;"	kind:macro
FTXUI_COMPONENT_ANIMATION_HPP	./FTXUI/include/ftxui/component/task.hpp	5;"	kind:macro
FTXUI_COMPONENT_BASE_HPP	./FTXUI/include/ftxui/component/component_base.hpp	5;"	kind:macro
FTXUI_COMPONENT_COMPONENT_OPTIONS_HPP	./FTXUI/include/ftxui/component/component_options.hpp	5;"	kind:macro
FTXUI_COMPONENT_EVENT_HPP	./FTXUI/include/ftxui/component/event.hpp	5;"	kind:macro
FTXUI_COMPONENT_HPP	./FTXUI/include/ftxui/component/component.hpp	5;"	kind:macro
FTXUI_COMPONENT_LOOP_HPP	./FTXUI/include/ftxui/component/loop.hpp	5;"	kind:macro
FTXUI_COMPONENT_MOUSE_HPP	./FTXUI/include/ftxui/component/mouse.hpp	5;"	kind:macro
FTXUI_COMPONENT_RECEIVER_HPP_	./FTXUI/include/ftxui/component/receiver.hpp	5;"	kind:macro
FTXUI_COMPONENT_SCREEN_INTERACTIVE_HPP	./FTXUI/include/ftxui/component/screen_interactive.hpp	5;"	kind:macro
FTXUI_COMPONENT_TERMINAL_INPUT_PARSER	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	5;"	kind:macro
FTXUI_DOM_BOX_HELPER_HPP	./FTXUI/src/ftxui/dom/box_helper.hpp	5;"	kind:macro
FTXUI_DOM_CANVAS_HPP	./FTXUI/include/ftxui/dom/canvas.hpp	5;"	kind:macro
FTXUI_DOM_DEPRECATED_HPP	./FTXUI/include/ftxui/dom/deprecated.hpp	5;"	kind:macro
FTXUI_DOM_DIRECTION_HPP	./FTXUI/include/ftxui/dom/direction.hpp	5;"	kind:macro
FTXUI_DOM_ELEMENTS_HPP	./FTXUI/include/ftxui/dom/elements.hpp	5;"	kind:macro
FTXUI_DOM_FLEXBOX_CONFIG_HPP	./FTXUI/include/ftxui/dom/flexbox_config.hpp	5;"	kind:macro
FTXUI_DOM_FLEXBOX_HELPER_HPP	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	5;"	kind:macro
FTXUI_DOM_LINEAR_GRADIENT_HPP	./FTXUI/include/ftxui/dom/linear_gradient.hpp	5;"	kind:macro
FTXUI_DOM_NODE_DECORATOR_H_	./FTXUI/src/ftxui/dom/node_decorator.hpp	5;"	kind:macro
FTXUI_DOM_NODE_HPP	./FTXUI/include/ftxui/dom/node.hpp	5;"	kind:macro
FTXUI_DOM_REQUIREMENT_HPP	./FTXUI/include/ftxui/dom/requirement.hpp	5;"	kind:macro
FTXUI_DOM_SELECTION_HPP	./FTXUI/include/ftxui/dom/selection.hpp	6;"	kind:macro
FTXUI_DOM_TABLE	./FTXUI/include/ftxui/dom/table.hpp	5;"	kind:macro
FTXUI_DOM_TAKE_ANY_ARGS_HPP	./FTXUI/include/ftxui/dom/take_any_args.hpp	5;"	kind:macro
FTXUI_LIKELY	./FTXUI/src/ftxui/screen/screen.cpp	37;"	kind:macro	file:
FTXUI_LIKELY	./FTXUI/src/ftxui/screen/screen.cpp	39;"	kind:macro	file:
FTXUI_SCREEN_BOX_HPP	./FTXUI/include/ftxui/screen/box.hpp	5;"	kind:macro
FTXUI_SCREEN_COLOR_HPP	./FTXUI/include/ftxui/screen/color.hpp	5;"	kind:macro
FTXUI_SCREEN_COLOR_INFO_HPP	./FTXUI/include/ftxui/screen/color_info.hpp	5;"	kind:macro
FTXUI_SCREEN_DEPRECATED_HPP	./FTXUI/include/ftxui/screen/deprecated.hpp	5;"	kind:macro
FTXUI_SCREEN_IMAGE_HPP	./FTXUI/include/ftxui/screen/image.hpp	5;"	kind:macro
FTXUI_SCREEN_PIXEL_HPP	./FTXUI/include/ftxui/screen/pixel.hpp	5;"	kind:macro
FTXUI_SCREEN_SCREEN_HPP	./FTXUI/include/ftxui/screen/screen.hpp	5;"	kind:macro
FTXUI_SCREEN_STRING_HPP	./FTXUI/include/ftxui/screen/string.hpp	5;"	kind:macro
FTXUI_SCREEN_STRING_INTERNAL_HPP	./FTXUI/src/ftxui/screen/string_internal.hpp	5;"	kind:macro
FTXUI_SCREEN_TERMINAL_HPP	./FTXUI/include/ftxui/screen/terminal.hpp	5;"	kind:macro
FTXUI_SCREEN_UTIL_HPP	./FTXUI/src/ftxui/screen/util.hpp	5;"	kind:macro
FTXUI_UNLIKELY	./FTXUI/src/ftxui/screen/screen.cpp	29;"	kind:macro	file:
FTXUI_UNLIKELY	./FTXUI/src/ftxui/screen/screen.cpp	31;"	kind:macro	file:
FTXUI_UTIL_AUTORESET_HPP	./FTXUI/include/ftxui/util/autoreset.hpp	5;"	kind:macro
FTXUI_UTIL_REF_HPP	./FTXUI/include/ftxui/util/ref.hpp	5;"	kind:macro
FallbackSize	./FTXUI/src/ftxui/screen/terminal.cpp	29;"	kind:function	namespace:ftxui::__anon66	signature:()
FgColor	./FTXUI/src/ftxui/dom/color.cpp	42;"	kind:class	namespace:ftxui::__anon12	file:	inherits:NodeDecorator
FgColor	./FTXUI/src/ftxui/dom/color.cpp	44;"	kind:function	class:ftxui::__anon12::FgColor	access:public	signature:(Element child, Color color)
FirstTarget	./FTXUI/src/ftxui/component/menu.cpp	447;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
Fit	./FTXUI/include/ftxui/dom/elements.hpp	192;"	kind:prototype	namespace:ftxui::Dimension	signature:(Element&, bool extend_beyond_screen = false)
Fit	./FTXUI/src/ftxui/dom/util.cpp	93;"	kind:function	class:ftxui::Dimension	signature:(Element& e, bool extend_beyond_screen)
FitComponent	./FTXUI/include/ftxui/component/screen_interactive.hpp	37;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
FitComponent	./FTXUI/include/ftxui/component/screen_interactive.hpp	99;"	kind:member	class:ftxui::ScreenInteractive::Dimension	access:private
FitComponent	./FTXUI/src/ftxui/component/screen_interactive.cpp	416;"	kind:function	class:ftxui::ScreenInteractive	signature:()
Fixed	./FTXUI/include/ftxui/component/screen_interactive.hpp	100;"	kind:member	class:ftxui::ScreenInteractive::Dimension	access:private
Fixed	./FTXUI/include/ftxui/screen/screen.hpp	21;"	kind:prototype	namespace:ftxui::Dimension	signature:(int)
Fixed	./FTXUI/src/ftxui/screen/screen.cpp	375;"	kind:function	class:ftxui::Dimension	signature:(int v)
FixedSize	./FTXUI/include/ftxui/component/screen_interactive.hpp	33;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(int dimx, int dimy)
FixedSize	./FTXUI/src/ftxui/component/screen_interactive.cpp	360;"	kind:function	class:ftxui::ScreenInteractive	signature:(int dimx, int dimy)
Flex	./FTXUI/src/ftxui/dom/flex.cpp	68;"	kind:class	namespace:ftxui::__anon13	file:	inherits:Node
Flex	./FTXUI/src/ftxui/dom/flex.cpp	70;"	kind:function	class:ftxui::__anon13::Flex	access:public	signature:(FlexFunction f)
Flex	./FTXUI/src/ftxui/dom/flex.cpp	71;"	kind:function	class:ftxui::__anon13::Flex	access:public	signature:(FlexFunction f, Element child)
FlexEnd	./FTXUI/include/ftxui/dom/flexbox_config.hpp	48;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
FlexEnd	./FTXUI/include/ftxui/dom/flexbox_config.hpp	73;"	kind:member	class:ftxui::FlexboxConfig::AlignItems	access:private
FlexEnd	./FTXUI/include/ftxui/dom/flexbox_config.hpp	84;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
FlexStart	./FTXUI/include/ftxui/dom/flexbox_config.hpp	46;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
FlexStart	./FTXUI/include/ftxui/dom/flexbox_config.hpp	72;"	kind:member	class:ftxui::FlexboxConfig::AlignItems	access:private
FlexStart	./FTXUI/include/ftxui/dom/flexbox_config.hpp	83;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
Flexbox	./FTXUI/src/ftxui/dom/flexbox.cpp	55;"	kind:class	namespace:ftxui::__anon20	file:	inherits:Node
Flexbox	./FTXUI/src/ftxui/dom/flexbox.cpp	57;"	kind:function	class:ftxui::__anon20::Flexbox	access:public	signature:(Elements children, FlexboxConfig config)
FlexboxConfig	./FTXUI/include/ftxui/dom/flexbox_config.hpp	15;"	kind:struct	namespace:ftxui
Flush	./FTXUI/src/ftxui/component/screen_interactive.cpp	75;"	kind:function	namespace:ftxui::__anon48	signature:()
Focus	./FTXUI/src/ftxui/dom/frame.cpp	18;"	kind:class	namespace:ftxui::__anon33	file:	inherits:Node
Focus	./FTXUI/src/ftxui/dom/frame.cpp	20;"	kind:function	class:ftxui::__anon33::Focus	access:public	signature:(Elements children)
FocusCursor	./FTXUI/src/ftxui/dom/frame.cpp	83;"	kind:class	namespace:ftxui::__anon33	file:	inherits:Focus
FocusCursor	./FTXUI/src/ftxui/dom/frame.cpp	85;"	kind:function	class:ftxui::__anon33::FocusCursor	access:public	signature:(Elements children, Screen::Cursor::Shape shape)
Focusable	./FTXUI/include/ftxui/component/component_base.hpp	79;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:() const
Focusable	./FTXUI/src/ftxui/component/component.cpp	196;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
Focusable	./FTXUI/src/ftxui/component/container_test.cpp	13;"	kind:function	namespace:ftxui::__anon52	signature:()
Focused	./FTXUI/include/ftxui/component/component_base.hpp	84;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
Focused	./FTXUI/include/ftxui/dom/requirement.hpp	25;"	kind:struct	struct:ftxui::Requirement	access:public
Focused	./FTXUI/src/ftxui/component/component.cpp	216;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
ForceHandleCtrlC	./FTXUI/include/ftxui/component/screen_interactive.hpp	69;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(bool force)
ForceHandleCtrlC	./FTXUI/src/ftxui/component/screen_interactive.cpp	570;"	kind:function	class:ftxui::ScreenInteractive	signature:(bool force)
ForceHandleCtrlZ	./FTXUI/include/ftxui/component/screen_interactive.hpp	70;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(bool force)
ForceHandleCtrlZ	./FTXUI/src/ftxui/component/screen_interactive.cpp	576;"	kind:function	class:ftxui::ScreenInteractive	signature:(bool force)
Format	./FTXUI/src/ftxui/screen/string_internal.hpp	46;"	kind:member	class:ftxui::WordBreakProperty	access:private
Frame	./FTXUI/src/ftxui/dom/frame.cpp	39;"	kind:class	namespace:ftxui::__anon33	file:	inherits:Node
Frame	./FTXUI/src/ftxui/dom/frame.cpp	41;"	kind:function	class:ftxui::__anon33::Frame	access:public	signature:(Elements children, bool x_frame, bool y_frame)
Full	./FTXUI/include/ftxui/screen/screen.hpp	22;"	kind:prototype	namespace:ftxui::Dimension	signature:()
Full	./FTXUI/src/ftxui/screen/screen.cpp	382;"	kind:function	class:ftxui::Dimension	signature:()
Fullscreen	./FTXUI/include/ftxui/component/screen_interactive.hpp	101;"	kind:member	class:ftxui::ScreenInteractive::Dimension	access:private
Fullscreen	./FTXUI/include/ftxui/component/screen_interactive.hpp	34;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
Fullscreen	./FTXUI/src/ftxui/component/screen_interactive.cpp	374;"	kind:function	class:ftxui::ScreenInteractive	signature:()
FullscreenAlternateScreen	./FTXUI/include/ftxui/component/screen_interactive.hpp	36;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
FullscreenAlternateScreen	./FTXUI/src/ftxui/component/screen_interactive.cpp	396;"	kind:function	class:ftxui::ScreenInteractive	signature:()
FullscreenPrimaryScreen	./FTXUI/include/ftxui/component/screen_interactive.hpp	35;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
FullscreenPrimaryScreen	./FTXUI/src/ftxui/component/screen_interactive.cpp	383;"	kind:function	class:ftxui::ScreenInteractive	signature:()
G	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
G	./FTXUI/src/ftxui/component/event.cpp	362;"	kind:member	class:ftxui::Event	file:
GREATER_THAN	./FTXUI/include/ftxui/dom/elements.hpp	154;"	kind:enumerator	enum:ftxui::Constraint
Gauge	./FTXUI/src/ftxui/dom/gauge.cpp	46;"	kind:class	namespace:ftxui::__anon24	file:	inherits:Node
Gauge	./FTXUI/src/ftxui/dom/gauge.cpp	48;"	kind:function	class:ftxui::__anon24::Gauge	access:public	signature:(float progress, Direction direction)
GeneratorAnimatedColorOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	55;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
GeneratorAnimatedColorsOptions	./FTXUI/src/ftxui/component/component_fuzzer.cpp	65;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
GeneratorBool	./FTXUI/src/ftxui/component/component_fuzzer.cpp	12;"	kind:function	namespace:__anon56	signature:(const char*& data, size_t& size)
GeneratorButtonOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	73;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
GeneratorColor	./FTXUI/src/ftxui/component/component_fuzzer.cpp	50;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
GeneratorComponent	./FTXUI/src/ftxui/component/component_fuzzer.cpp	112;"	kind:function	namespace:__anon56	signature:(const char*& data, size_t& size, int depth)
GeneratorComponents	./FTXUI/src/ftxui/component/component_fuzzer.cpp	110;"	kind:prototype	namespace:__anon56	file:	signature:(const char*& data, size_t& size, int depth)
GeneratorComponents	./FTXUI/src/ftxui/component/component_fuzzer.cpp	182;"	kind:function	namespace:__anon56	signature:(const char*& data, size_t& size, int depth)
GeneratorInt	./FTXUI/src/ftxui/component/component_fuzzer.cpp	41;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
GeneratorMenuEntryOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	92;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
GeneratorMenuOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	98;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
GeneratorString	./FTXUI/src/ftxui/component/component_fuzzer.cpp	23;"	kind:function	namespace:__anon56	signature:(const char*& data, size_t& size)
GeneratorUnderlineOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	79;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
GetBox	./FTXUI/include/ftxui/dom/selection.hpp	22;"	kind:prototype	class:ftxui::Selection	access:public	signature:() const
GetBox	./FTXUI/src/ftxui/dom/selection.cpp	67;"	kind:function	class:ftxui::Selection	signature:() const
GetColorInfo	./FTXUI/include/ftxui/screen/color_info.hpp	24;"	kind:prototype	namespace:ftxui	signature:(Color::Palette256 index)
GetColorInfo	./FTXUI/include/ftxui/screen/color_info.hpp	25;"	kind:prototype	namespace:ftxui	signature:(Color::Palette16 index)
GetColorInfo	./FTXUI/src/ftxui/screen/color_info.cpp	272;"	kind:function	namespace:ftxui	signature:(Color::Palette256 index)
GetColorInfo	./FTXUI/src/ftxui/screen/color_info.cpp	276;"	kind:function	namespace:ftxui	signature:(Color::Palette16 index)
GetNodeSelectedContent	./FTXUI/include/ftxui/dom/node.hpp	73;"	kind:prototype	namespace:ftxui	signature:(Screen& screen, Node* node, Selection& selection)
GetNodeSelectedContent	./FTXUI/src/ftxui/dom/node.cpp	172;"	kind:function	namespace:ftxui	signature:(Screen& screen, Node* node, Selection& selection)
GetParts	./FTXUI/include/ftxui/dom/selection.hpp	29;"	kind:function	class:ftxui::Selection	access:public	signature:()
GetPixel	./FTXUI/include/ftxui/dom/canvas.hpp	31;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y) const
GetPixel	./FTXUI/src/ftxui/dom/canvas.cpp	98;"	kind:function	class:ftxui::Canvas	signature:(int x, int y) const
GetSelectedContent	./FTXUI/include/ftxui/dom/node.hpp	51;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Selection& selection)
GetSelectedContent	./FTXUI/src/ftxui/dom/node.cpp	76;"	kind:function	class:ftxui::Node	signature:(Selection& selection)
GetSelection	./FTXUI/include/ftxui/component/screen_interactive.hpp	73;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
GetSelection	./FTXUI/src/ftxui/component/screen_interactive.cpp	581;"	kind:function	class:ftxui::ScreenInteractive	signature:()
GetSelectionStyle	./FTXUI/include/ftxui/screen/screen.hpp	73;"	kind:prototype	class:ftxui::Screen	access:public	signature:() const
GetSelectionStyle	./FTXUI/src/ftxui/screen/screen.cpp	555;"	kind:function	class:ftxui::Screen	signature:() const
Global	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	41;"	kind:struct	namespace:ftxui::flexbox_helper
GlyphCount	./FTXUI/src/ftxui/screen/string.cpp	1505;"	kind:function	namespace:ftxui	signature:(const std::string& input)
GlyphCount	./FTXUI/src/ftxui/screen/string_internal.hpp	36;"	kind:prototype	namespace:ftxui	signature:(const std::string& input)
GlyphIterate	./FTXUI/src/ftxui/screen/string.cpp	1450;"	kind:function	namespace:ftxui	signature:(const std::string& input, int glyph_offset, size_t start)
GlyphIterate	./FTXUI/src/ftxui/screen/string_internal.hpp	31;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, int glyph_offset, size_t start = 0)
GlyphNext	./FTXUI/src/ftxui/screen/string.cpp	1424;"	kind:function	namespace:ftxui	signature:(const std::string& input, size_t start)
GlyphNext	./FTXUI/src/ftxui/screen/string_internal.hpp	27;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, size_t start)
GlyphPrevious	./FTXUI/src/ftxui/screen/string.cpp	1399;"	kind:function	namespace:ftxui	signature:(const std::string& input, size_t start)
GlyphPrevious	./FTXUI/src/ftxui/screen/string_internal.hpp	26;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, size_t start)
GlyphWidth	./FTXUI/src/ftxui/component/input.cpp	43;"	kind:function	namespace:ftxui::__anon58	signature:(const std::string& input, size_t iter)
Graph	./FTXUI/src/ftxui/dom/graph.cpp	29;"	kind:class	namespace:ftxui::__anon25	file:	inherits:Node
Graph	./FTXUI/src/ftxui/dom/graph.cpp	31;"	kind:function	class:ftxui::__anon25::Graph	access:public	signature:(GraphFunction graph_function)
GridBox	./FTXUI/src/ftxui/dom/gridbox.cpp	35;"	kind:class	namespace:ftxui::__anon16	file:	inherits:Node
GridBox	./FTXUI/src/ftxui/dom/gridbox.cpp	37;"	kind:function	class:ftxui::__anon16::GridBox	access:public	signature:(std::vector<Elements> lines)
H	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
H	./FTXUI/src/ftxui/component/event.cpp	363;"	kind:member	class:ftxui::Event	file:
HBox	./FTXUI/src/ftxui/dom/hbox.cpp	19;"	kind:class	namespace:ftxui::__anon11	file:	inherits:Node
HBox	./FTXUI/src/ftxui/dom/hbox.cpp	21;"	kind:function	class:ftxui::__anon11::HBox	access:public	signature:(Elements children)
HEAVY	./FTXUI/include/ftxui/dom/elements.hpp	30;"	kind:enumerator	enum:ftxui::BorderStyle
HEIGHT	./FTXUI/include/ftxui/dom/elements.hpp	153;"	kind:enumerator	enum:ftxui::WidthOrHeight
HSV	./FTXUI/include/ftxui/screen/color.hpp	34;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t hue, uint8_t saturation, uint8_t value)
HSV	./FTXUI/src/ftxui/screen/color.cpp	207;"	kind:function	class:ftxui::Color	signature:(uint8_t h, uint8_t s, uint8_t v)
HSVA	./FTXUI/include/ftxui/screen/color.hpp	36;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t hue, uint8_t saturation, uint8_t value, uint8_t alpha)
HSVA	./FTXUI/src/ftxui/screen/color.cpp	179;"	kind:function	class:ftxui::Color	signature:(uint8_t h, uint8_t s, uint8_t v, uint8_t alpha)
HandleArrowDown	./FTXUI/src/ftxui/component/input.cpp	312;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleArrowLeft	./FTXUI/src/ftxui/component/input.cpp	227;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleArrowRight	./FTXUI/src/ftxui/component/input.cpp	237;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleArrowUp	./FTXUI/src/ftxui/component/input.cpp	277;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleBackspace	./FTXUI/src/ftxui/component/input.cpp	197;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleCharacter	./FTXUI/src/ftxui/component/input.cpp	355;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:(const std::string& character)
HandleDelete	./FTXUI/src/ftxui/component/input.cpp	219;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleEnd	./FTXUI/src/ftxui/component/input.cpp	342;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleHome	./FTXUI/src/ftxui/component/input.cpp	337;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleInsert	./FTXUI/src/ftxui/component/input.cpp	533;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleLeftCtrl	./FTXUI/src/ftxui/component/input.cpp	414;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleMouse	./FTXUI/src/ftxui/component/input.cpp	463;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:(Event event)
HandleReturn	./FTXUI/src/ftxui/component/input.cpp	347;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleRightCtrl	./FTXUI/src/ftxui/component/input.cpp	438;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
HandleSelection	./FTXUI/include/ftxui/component/screen_interactive.hpp	90;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(bool handled, Event event)
HandleSelection	./FTXUI/src/ftxui/component/screen_interactive.cpp	851;"	kind:function	class:ftxui::ScreenInteractive	signature:(bool handled, Event event)
HandleTask	./FTXUI/include/ftxui/component/screen_interactive.hpp	89;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(Component component, Task& task)
HandleTask	./FTXUI/src/ftxui/component/screen_interactive.cpp	779;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component, Task& task)
HasPending	./FTXUI/include/ftxui/component/receiver.hpp	106;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:()
HasQuitted	./FTXUI/include/ftxui/component/loop.hpp	22;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
HasQuitted	./FTXUI/include/ftxui/component/receiver.hpp	111;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:()
HasQuitted	./FTXUI/include/ftxui/component/screen_interactive.hpp	85;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
HasQuitted	./FTXUI/src/ftxui/component/loop.cpp	32;"	kind:function	class:ftxui::Loop	signature:()
HasQuitted	./FTXUI/src/ftxui/component/screen_interactive.cpp	502;"	kind:function	class:ftxui::ScreenInteractive	signature:()
Hash	./FTXUI/src/ftxui/dom/canvas_test.cpp	19;"	kind:function	namespace:ftxui::__anon5	signature:(const std::string s)
Hebrew_Letter	./FTXUI/src/ftxui/screen/string_internal.hpp	47;"	kind:member	class:ftxui::WordBreakProperty	access:private
Hidden	./FTXUI/include/ftxui/screen/screen.hpp	53;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
Home	./FTXUI/include/ftxui/component/event.hpp	58;"	kind:member	struct:ftxui::Event	access:public
Home	./FTXUI/src/ftxui/component/event.cpp	323;"	kind:member	class:ftxui::Event	file:
Horizontal	./FTXUI/include/ftxui/component/component.hpp	41;"	kind:prototype	namespace:ftxui::Container	signature:(Components children)
Horizontal	./FTXUI/include/ftxui/component/component.hpp	42;"	kind:prototype	namespace:ftxui::Container	signature:(Components children, int* selector)
Horizontal	./FTXUI/include/ftxui/component/component_options.hpp	87;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
Horizontal	./FTXUI/src/ftxui/component/component_options.cpp	75;"	kind:function	class:ftxui::MenuOption	signature:()
Horizontal	./FTXUI/src/ftxui/component/container.cpp	360;"	kind:function	namespace:ftxui::Container	signature:(Components children)
Horizontal	./FTXUI/src/ftxui/component/container.cpp	382;"	kind:function	namespace:ftxui::Container	signature:(Components children, int* selector)
HorizontalAnimated	./FTXUI/include/ftxui/component/component_options.hpp	88;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
HorizontalAnimated	./FTXUI/src/ftxui/component/component_options.cpp	100;"	kind:function	class:ftxui::MenuOption	signature:()
HorizontalContainer	./FTXUI/src/ftxui/component/container.cpp	181;"	kind:class	namespace:ftxui	file:	inherits:ContainerBase
HoverEvent	./FTXUI/src/ftxui/component/hoverable_test.cpp	19;"	kind:function	namespace:ftxui::__anon44	signature:(int x, int y)
Hoverable	./FTXUI/include/ftxui/component/component.hpp	127;"	kind:prototype	namespace:ftxui	signature:(Component component, bool* hover)
Hoverable	./FTXUI/include/ftxui/component/component.hpp	128;"	kind:prototype	namespace:ftxui	signature:(Component component, std::function<void()> on_enter, std::function<void()> on_leave)
Hoverable	./FTXUI/include/ftxui/component/component.hpp	131;"	kind:prototype	namespace:ftxui	signature:(Component component, std::function<void(bool)> on_change)
Hoverable	./FTXUI/include/ftxui/component/component.hpp	133;"	kind:prototype	namespace:ftxui	signature:(bool* hover)
Hoverable	./FTXUI/include/ftxui/component/component.hpp	134;"	kind:prototype	namespace:ftxui	signature:(std::function<void()> on_enter, std::function<void()> on_leave)
Hoverable	./FTXUI/include/ftxui/component/component.hpp	136;"	kind:prototype	namespace:ftxui	signature:(std::function<void(bool)> on_change)
Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	141;"	kind:function	namespace:ftxui	signature:(bool* hover)
Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	165;"	kind:function	namespace:ftxui	signature:(std::function<void()> on_enter, std::function<void()> on_leave)
Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	188;"	kind:function	namespace:ftxui	signature:(Component component, std::function<void(bool)> on_change)
Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	209;"	kind:function	namespace:ftxui	signature:(std::function<void(bool)> on_change)
Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	43;"	kind:function	namespace:ftxui	signature:(Component component, bool* hover)
Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	86;"	kind:function	namespace:ftxui	signature:(Component component, std::function<void()> on_enter, std::function<void()> on_leave)
Hyperlink	./FTXUI/include/ftxui/screen/screen.hpp	70;"	kind:prototype	class:ftxui::Screen	access:public	signature:(uint8_t id) const
Hyperlink	./FTXUI/src/ftxui/dom/hyperlink.cpp	17;"	kind:class	namespace:ftxui::__anon32	file:	inherits:NodeDecorator
Hyperlink	./FTXUI/src/ftxui/dom/hyperlink.cpp	19;"	kind:function	class:ftxui::__anon32::Hyperlink	access:public	signature:(Element child, std::string link)
Hyperlink	./FTXUI/src/ftxui/screen/screen.cpp	546;"	kind:function	class:ftxui::Screen	signature:(std::uint8_t id) const
I	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
I	./FTXUI/src/ftxui/component/event.cpp	364;"	kind:member	class:ftxui::Event	file:
Image	./FTXUI/include/ftxui/screen/image.hpp	17;"	kind:class	namespace:ftxui
Image	./FTXUI/include/ftxui/screen/image.hpp	20;"	kind:prototype	class:ftxui::Image	access:public	signature:()
Image	./FTXUI/include/ftxui/screen/image.hpp	21;"	kind:prototype	class:ftxui::Image	access:public	signature:(int dimx, int dimy)
Image	./FTXUI/src/ftxui/screen/image.cpp	20;"	kind:function	class:ftxui::Image	signature:(int dimx, int dimy)
Index	./FTXUI/include/ftxui/component/component_base.hpp	47;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
Index	./FTXUI/src/ftxui/component/component.cpp	58;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
IndexedGetter	./FTXUI/include/ftxui/util/ref.hpp	192;"	kind:struct	class:ftxui::ConstStringListRef	access:private
IndexedGetter	./FTXUI/include/ftxui/util/ref.hpp	193;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(size_t index)
Initialize	./FTXUI/include/ftxui/dom/table.hpp	55;"	kind:prototype	class:ftxui::Table	access:private	signature:(std::vector<std::vector<Element>>)
Initialize	./FTXUI/src/ftxui/dom/table.cpp	93;"	kind:function	class:ftxui::Table	signature:(std::vector<std::vector<Element>> input)
Input	./FTXUI/include/ftxui/component/component.hpp	57;"	kind:prototype	namespace:ftxui	signature:(InputOption options = {})
Input	./FTXUI/include/ftxui/component/component.hpp	58;"	kind:prototype	namespace:ftxui	signature:(StringRef content, InputOption options = {})
Input	./FTXUI/include/ftxui/component/component.hpp	59;"	kind:prototype	namespace:ftxui	signature:(StringRef content, StringRef placeholder, InputOption options = {})
Input	./FTXUI/src/ftxui/component/input.cpp	571;"	kind:function	namespace:ftxui	signature:(InputOption option)
Input	./FTXUI/src/ftxui/component/input.cpp	599;"	kind:function	namespace:ftxui	signature:(StringRef content, InputOption option)
Input	./FTXUI/src/ftxui/component/input.cpp	625;"	kind:function	namespace:ftxui	signature:(StringRef content, StringRef placeholder, InputOption option)
InputBase	./FTXUI/src/ftxui/component/input.cpp	92;"	kind:class	namespace:ftxui::__anon58	file:	inherits:ComponentBase,InputOption
InputBase	./FTXUI/src/ftxui/component/input.cpp	95;"	kind:function	class:ftxui::__anon58::InputBase	access:public	signature:(InputOption option)
InputOption	./FTXUI/include/ftxui/component/component_options.hpp	162;"	kind:struct	namespace:ftxui
InputState	./FTXUI/include/ftxui/component/component_options.hpp	152;"	kind:struct	namespace:ftxui
Insert	./FTXUI/include/ftxui/component/event.hpp	57;"	kind:member	struct:ftxui::Event	access:public
Insert	./FTXUI/src/ftxui/component/event.cpp	322;"	kind:member	class:ftxui::Event	file:
Install	./FTXUI/include/ftxui/component/screen_interactive.hpp	79;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
Install	./FTXUI/src/ftxui/component/screen_interactive.cpp	599;"	kind:function	class:ftxui::ScreenInteractive	signature:()
InstallSignalHandler	./FTXUI/src/ftxui/component/screen_interactive.cpp	254;"	kind:function	namespace:ftxui::__anon48	signature:(int sig)
Integrate	./FTXUI/src/ftxui/dom/gridbox.cpp	25;"	kind:function	namespace:ftxui::__anon16	signature:(std::vector<int>& elements)
Interpolate	./FTXUI/include/ftxui/screen/color.hpp	40;"	kind:prototype	class:ftxui::Color	access:public	signature:(float t, const Color& a, const Color& b)
Interpolate	./FTXUI/src/ftxui/dom/linear_gradient.cpp	96;"	kind:function	namespace:ftxui::__anon17	signature:(const LinearGradientNormalized& gradient, float t)
Interpolate	./FTXUI/src/ftxui/screen/color.cpp	212;"	kind:function	class:ftxui::Color	signature:(float t, const Color& a, const Color& b)
Intersection	./FTXUI/src/ftxui/screen/box.cpp	12;"	kind:function	class:ftxui::Box	signature:(Box a, Box b)
Interval	./FTXUI/src/ftxui/screen/string.cpp	26;"	kind:struct	namespace:__anon64	file:
InvertMap	./FTXUI/src/ftxui/screen/screen.cpp	297;"	kind:function	namespace:ftxui::__anon65	signature:(const std::map<A, B> input)
Inverted	./FTXUI/src/ftxui/dom/inverted.cpp	16;"	kind:class	namespace:ftxui::__anon7	file:	inherits:NodeDecorator
IsCell	./FTXUI/src/ftxui/dom/table.cpp	17;"	kind:function	namespace:ftxui::__anon29	signature:(int x, int y)
IsColumnOriented	./FTXUI/src/ftxui/dom/flexbox.cpp	69;"	kind:function	class:ftxui::__anon20::Flexbox	access:public	signature:() const
IsCombining	./FTXUI/src/ftxui/screen/string.cpp	1282;"	kind:function	namespace:ftxui	signature:(uint32_t ucs)
IsCombining	./FTXUI/src/ftxui/screen/string_internal.hpp	22;"	kind:prototype	namespace:ftxui	signature:(uint32_t ucs)
IsControl	./FTXUI/src/ftxui/screen/string.cpp	1293;"	kind:function	namespace:ftxui	signature:(uint32_t ucs)
IsControl	./FTXUI/src/ftxui/screen/string_internal.hpp	24;"	kind:prototype	namespace:ftxui	signature:(uint32_t ucs)
IsEmpty	./FTXUI/include/ftxui/dom/selection.hpp	26;"	kind:function	class:ftxui::Selection	access:public	signature:() const
IsEmpty	./FTXUI/include/ftxui/screen/box.hpp	19;"	kind:prototype	struct:ftxui::Box	access:public	signature:() const
IsEmpty	./FTXUI/src/ftxui/screen/box.cpp	55;"	kind:function	class:ftxui::Box	signature:() const
IsFullWidth	./FTXUI/src/ftxui/screen/string.cpp	1286;"	kind:function	namespace:ftxui	signature:(uint32_t ucs)
IsFullWidth	./FTXUI/src/ftxui/screen/string_internal.hpp	23;"	kind:prototype	namespace:ftxui	signature:(uint32_t ucs)
IsHorizontal	./FTXUI/src/ftxui/component/menu.cpp	53;"	kind:function	namespace:ftxui::__anon46	signature:(Direction direction)
IsHorizontal	./FTXUI/src/ftxui/component/menu.cpp	73;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
IsIn	./FTXUI/include/ftxui/dom/canvas.hpp	110;"	kind:function	struct:ftxui::Canvas	access:private	signature:(int x, int y) const
IsInverted	./FTXUI/src/ftxui/component/menu.cpp	41;"	kind:function	namespace:ftxui::__anon46	signature:(Direction direction)
IsOpaque	./FTXUI/include/ftxui/screen/color.hpp	319;"	kind:function	class:ftxui::Color	access:public	signature:() const
IsWordBreakingCharacter	./FTXUI/src/ftxui/screen/string_internal.hpp	64;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, size_t glyph_index)
IsWordCharacter	./FTXUI/src/ftxui/component/input.cpp	82;"	kind:function	namespace:ftxui::__anon58	signature:(const std::string& input, size_t iter)
IsWordCodePoint	./FTXUI/src/ftxui/component/input.cpp	54;"	kind:function	namespace:ftxui::__anon58	signature:(uint32_t codepoint)
J	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
J	./FTXUI/src/ftxui/component/event.cpp	365;"	kind:member	class:ftxui::Event	file:
JustifyContent	./FTXUI/include/ftxui/dom/flexbox_config.hpp	44;"	kind:class	struct:ftxui::FlexboxConfig	access:public
JustifyContent	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	259;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
K	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
K	./FTXUI/src/ftxui/component/event.cpp	366;"	kind:member	class:ftxui::Event	file:
Katakana	./FTXUI/src/ftxui/screen/string_internal.hpp	48;"	kind:member	class:ftxui::WordBreakProperty	access:private
L	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
L	./FTXUI/src/ftxui/component/event.cpp	367;"	kind:member	class:ftxui::Event	file:
LESS_THAN	./FTXUI/include/ftxui/dom/elements.hpp	154;"	kind:enumerator	enum:ftxui::Constraint
LF	./FTXUI/src/ftxui/screen/string_internal.hpp	49;"	kind:member	class:ftxui::WordBreakProperty	access:private
LIGHT	./FTXUI/include/ftxui/dom/elements.hpp	28;"	kind:enumerator	enum:ftxui::BorderStyle
LLVMFuzzerTestOneInput	./FTXUI/src/ftxui/component/component_fuzzer.cpp	193;"	kind:function	signature:(const char* data, size_t size)
LLVMFuzzerTestOneInput	./FTXUI/src/ftxui/component/terminal_input_parser_test_fuzzer.cpp	6;"	kind:function	signature:(const char* data, size_t size)
Layout	./FTXUI/src/ftxui/dom/flexbox.cpp	74;"	kind:function	class:ftxui::__anon20::Flexbox	access:public	signature:(flexbox_helper::Global& global, bool compute_requirement = false)
Left	./FTXUI/include/ftxui/component/mouse.hpp	13;"	kind:enumerator	enum:ftxui::Mouse::Button
Left	./FTXUI/include/ftxui/dom/direction.hpp	11;"	kind:member	class:ftxui::Direction	access:private
Line	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	33;"	kind:struct	namespace:ftxui::flexbox_helper
Linear	./FTXUI/include/ftxui/component/animation.hpp	37;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
Linear	./FTXUI/src/ftxui/component/animation.cpp	29;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
LinearGradient	./FTXUI/include/ftxui/dom/linear_gradient.hpp	30;"	kind:struct	namespace:ftxui
LinearGradient	./FTXUI/include/ftxui/dom/linear_gradient.hpp	39;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:()
LinearGradient	./FTXUI/include/ftxui/dom/linear_gradient.hpp	40;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(Color begin, Color end)
LinearGradient	./FTXUI/include/ftxui/dom/linear_gradient.hpp	41;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(float angle, Color begin, Color end)
LinearGradient	./FTXUI/src/ftxui/dom/linear_gradient.cpp	199;"	kind:function	class:ftxui::LinearGradient	signature:(Color begin, Color end)
LinearGradient	./FTXUI/src/ftxui/dom/linear_gradient.cpp	207;"	kind:function	class:ftxui::LinearGradient	signature:(float a, Color begin, Color end)
LinearGradientColor	./FTXUI/src/ftxui/dom/linear_gradient.cpp	126;"	kind:class	namespace:ftxui::__anon17	file:	inherits:NodeDecorator
LinearGradientColor	./FTXUI/src/ftxui/dom/linear_gradient.cpp	128;"	kind:function	class:ftxui::__anon17::LinearGradientColor	access:public	signature:(Element child, const LinearGradient& gradient, bool background_color)
LinearGradientNormalized	./FTXUI/src/ftxui/dom/linear_gradient.cpp	22;"	kind:struct	namespace:ftxui::__anon17	file:
Loop	./FTXUI/include/ftxui/component/loop.hpp	17;"	kind:class	namespace:ftxui
Loop	./FTXUI/include/ftxui/component/loop.hpp	19;"	kind:prototype	class:ftxui::Loop	access:public	signature:(ScreenInteractive* screen, Component component)
Loop	./FTXUI/include/ftxui/component/loop.hpp	28;"	kind:prototype	class:ftxui::Loop	access:public	signature:(const Loop&)
Loop	./FTXUI/include/ftxui/component/loop.hpp	29;"	kind:prototype	class:ftxui::Loop	access:public	signature:(Loop&&)
Loop	./FTXUI/include/ftxui/component/loop.hpp	31;"	kind:prototype	class:ftxui::Loop	access:public	signature:(const ScreenInteractive&)
Loop	./FTXUI/include/ftxui/component/screen_interactive.hpp	47;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(Component)
Loop	./FTXUI/src/ftxui/component/loop.cpp	21;"	kind:function	class:ftxui::Loop	signature:(ScreenInteractive* screen, Component component)
Loop	./FTXUI/src/ftxui/component/screen_interactive.cpp	495;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component)
M	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
M	./FTXUI/src/ftxui/component/event.cpp	368;"	kind:member	class:ftxui::Event	file:
MOUSE	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	32;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
Make	./FTXUI/include/ftxui/component/component.hpp	26;"	kind:function	namespace:ftxui	signature:(Args&&.... args)
Make	./FTXUI/src/ftxui/component/component_test.cpp	13;"	kind:function	namespace:ftxui::__anon45	signature:()
MakeHorizontalFlexboxList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	280;"	kind:function	namespace:ftxui::__anon4	signature:(int n)
MakeHorizontalList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	29;"	kind:function	namespace:ftxui::__anon3	signature:(int focused_index, int n)
MakeReceiver	./FTXUI/include/ftxui/component/receiver.hpp	139;"	kind:function	namespace:ftxui	signature:()
MakeSender	./FTXUI/include/ftxui/component/receiver.hpp	73;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:()
MakeVerticalList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	17;"	kind:function	namespace:ftxui::__anon3	signature:(int focused_index, int n)
Maybe	./FTXUI/include/ftxui/component/component.hpp	115;"	kind:prototype	namespace:ftxui	signature:(Component, const bool* show)
Maybe	./FTXUI/include/ftxui/component/component.hpp	116;"	kind:prototype	namespace:ftxui	signature:(Component, std::function<bool()>)
Maybe	./FTXUI/include/ftxui/component/component.hpp	117;"	kind:prototype	namespace:ftxui	signature:(const bool* show)
Maybe	./FTXUI/include/ftxui/component/component.hpp	118;"	kind:prototype	namespace:ftxui	signature:(std::function<bool()>)
Maybe	./FTXUI/src/ftxui/component/maybe.cpp	21;"	kind:function	namespace:ftxui	signature:(Component child, std::function<bool()> show)
Maybe	./FTXUI/src/ftxui/component/maybe.cpp	57;"	kind:function	namespace:ftxui	signature:(std::function<bool()> show)
Maybe	./FTXUI/src/ftxui/component/maybe.cpp	74;"	kind:function	namespace:ftxui	signature:(Component child, const bool* show)
Maybe	./FTXUI/src/ftxui/component/maybe.cpp	88;"	kind:function	namespace:ftxui	signature:(const bool* show)
Menu	./FTXUI/include/ftxui/component/component.hpp	63;"	kind:prototype	namespace:ftxui	signature:(MenuOption options)
Menu	./FTXUI/include/ftxui/component/component.hpp	64;"	kind:prototype	namespace:ftxui	signature:(ConstStringListRef entries, int* selected_, MenuOption options = MenuOption::Vertical())
Menu	./FTXUI/src/ftxui/component/menu.cpp	512;"	kind:function	namespace:ftxui	signature:(MenuOption option)
Menu	./FTXUI/src/ftxui/component/menu.cpp	543;"	kind:function	namespace:ftxui	signature:(ConstStringListRef entries, int* selected, MenuOption option)
MenuBase	./FTXUI/src/ftxui/component/menu.cpp	69;"	kind:class	namespace:ftxui	file:	inherits:ComponentBase,MenuOption
MenuBase	./FTXUI/src/ftxui/component/menu.cpp	71;"	kind:function	class:ftxui::MenuBase	access:public	signature:(const MenuOption& option)
MenuEntry	./FTXUI/include/ftxui/component/component.hpp	67;"	kind:prototype	namespace:ftxui	signature:(MenuEntryOption options)
MenuEntry	./FTXUI/include/ftxui/component/component.hpp	68;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, MenuEntryOption options = {})
MenuEntry	./FTXUI/src/ftxui/component/menu.cpp	584;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, MenuEntryOption option)
MenuEntry	./FTXUI/src/ftxui/component/menu.cpp	614;"	kind:function	namespace:ftxui	signature:(MenuEntryOption option)
MenuEntryOption	./FTXUI/include/ftxui/component/component_options.hpp	77;"	kind:struct	namespace:ftxui
MenuOption	./FTXUI/include/ftxui/component/component_options.hpp	85;"	kind:struct	namespace:ftxui
Merge	./FTXUI/include/ftxui/dom/take_any_args.hpp	13;"	kind:function	namespace:ftxui	signature:(Elements& , T )
Merge	./FTXUI/include/ftxui/dom/take_any_args.hpp	16;"	kind:function	namespace:ftxui	signature:(Elements& container, Element element)
Merge	./FTXUI/include/ftxui/dom/take_any_args.hpp	21;"	kind:function	namespace:ftxui	signature:(Elements& container, Elements elements)
MidLetter	./FTXUI/src/ftxui/screen/string_internal.hpp	50;"	kind:member	class:ftxui::WordBreakProperty	access:private
MidNum	./FTXUI/src/ftxui/screen/string_internal.hpp	51;"	kind:member	class:ftxui::WordBreakProperty	access:private
MidNumLet	./FTXUI/src/ftxui/screen/string_internal.hpp	52;"	kind:member	class:ftxui::WordBreakProperty	access:private
Middle	./FTXUI/include/ftxui/component/mouse.hpp	14;"	kind:enumerator	enum:ftxui::Mouse::Button
Modal	./FTXUI/include/ftxui/component/component.hpp	120;"	kind:prototype	namespace:ftxui	signature:(Component main, Component modal, const bool* show_modal)
Modal	./FTXUI/include/ftxui/component/component.hpp	121;"	kind:prototype	namespace:ftxui	signature:(Component modal, const bool* show_modal)
Modal	./FTXUI/src/ftxui/component/modal.cpp	18;"	kind:function	namespace:ftxui	signature:(Component main, Component modal, const bool* show_modal)
Modal	./FTXUI/src/ftxui/component/modal.cpp	58;"	kind:function	namespace:ftxui	signature:(Component modal, const bool* show_modal)
Motion	./FTXUI/include/ftxui/component/mouse.hpp	23;"	kind:enum	struct:ftxui::Mouse	access:public
Mouse	./FTXUI/include/ftxui/component/event.hpp	130;"	kind:member	class:ftxui::Event::Type	access:private
Mouse	./FTXUI/include/ftxui/component/event.hpp	33;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string, Mouse mouse)
Mouse	./FTXUI/include/ftxui/component/mouse.hpp	11;"	kind:struct	namespace:ftxui
Mouse	./FTXUI/src/ftxui/component/event.cpp	57;"	kind:function	class:ftxui::Event	signature:(std::string input, struct Mouse mouse)
MouseMove	./FTXUI/src/ftxui/dom/selection_test.cpp	44;"	kind:function	namespace:ftxui::__anon36	signature:(int x, int y)
MousePressed	./FTXUI/src/ftxui/component/button_test.cpp	22;"	kind:function	namespace:ftxui::__anon53	signature:(int x, int y)
MousePressed	./FTXUI/src/ftxui/component/resizable_split_test.cpp	24;"	kind:function	namespace:ftxui::__anon41	signature:(int x, int y)
MousePressed	./FTXUI/src/ftxui/component/slider_test.cpp	22;"	kind:function	namespace:ftxui::__anon51	signature:(int x, int y)
MousePressed	./FTXUI/src/ftxui/dom/selection_test.cpp	20;"	kind:function	namespace:ftxui::__anon36	signature:(int x, int y)
MouseReleased	./FTXUI/src/ftxui/component/resizable_split_test.cpp	36;"	kind:function	namespace:ftxui::__anon41	signature:(int x, int y)
MouseReleased	./FTXUI/src/ftxui/component/slider_test.cpp	34;"	kind:function	namespace:ftxui::__anon51	signature:(int x, int y)
MouseReleased	./FTXUI/src/ftxui/dom/selection_test.cpp	32;"	kind:function	namespace:ftxui::__anon36	signature:(int x, int y)
MoveCursorColumn	./FTXUI/src/ftxui/component/input.cpp	264;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:(int columns)
MoveSelector	./FTXUI/src/ftxui/component/container.cpp	72;"	kind:function	class:ftxui::ContainerBase	access:protected	signature:(int dir)
MoveSelectorWrap	./FTXUI/src/ftxui/component/container.cpp	82;"	kind:function	class:ftxui::ContainerBase	access:protected	signature:(int dir)
Moved	./FTXUI/include/ftxui/component/mouse.hpp	26;"	kind:enumerator	enum:ftxui::Mouse::Motion
N	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
N	./FTXUI/src/ftxui/component/event.cpp	369;"	kind:member	class:ftxui::Event	file:
NOMINMAX	./FTXUI/src/ftxui/component/screen_interactive.cpp	43;"	kind:macro	file:
NOMINMAX	./FTXUI/src/ftxui/component/window.cpp	4;"	kind:macro	file:
NOMINMAX	./FTXUI/src/ftxui/screen/screen.cpp	21;"	kind:macro	file:
NOMINMAX	./FTXUI/src/ftxui/screen/terminal.cpp	13;"	kind:macro	file:
Newline	./FTXUI/src/ftxui/screen/string_internal.hpp	53;"	kind:member	class:ftxui::WordBreakProperty	access:private
NoWrap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	32;"	kind:member	class:ftxui::FlexboxConfig::Wrap	access:private
Node	./FTXUI/include/ftxui/dom/node.hpp	23;"	kind:class	namespace:ftxui
Node	./FTXUI/include/ftxui/dom/node.hpp	25;"	kind:prototype	class:ftxui::Node	access:public	signature:()
Node	./FTXUI/include/ftxui/dom/node.hpp	26;"	kind:prototype	class:ftxui::Node	access:public	signature:(Elements children)
Node	./FTXUI/include/ftxui/dom/node.hpp	27;"	kind:prototype	class:ftxui::Node	access:public	signature:(const Node&)
Node	./FTXUI/include/ftxui/dom/node.hpp	28;"	kind:prototype	class:ftxui::Node	access:public	signature:(const Node&&)
Node	./FTXUI/src/ftxui/dom/node.cpp	15;"	kind:prototype	class:ftxui::Node	file:	signature:()
Node	./FTXUI/src/ftxui/dom/node.cpp	16;"	kind:function	class:ftxui::Node	signature:(Elements children)
NodeDecorator	./FTXUI/src/ftxui/dom/node_decorator.hpp	16;"	kind:class	namespace:ftxui	inherits:Node
NodeDecorator	./FTXUI/src/ftxui/dom/node_decorator.hpp	18;"	kind:function	class:ftxui::NodeDecorator	access:public	signature:(Element child)
NonFocusable	./FTXUI/src/ftxui/component/container_test.cpp	16;"	kind:function	namespace:ftxui::__anon52	signature:()
None	./FTXUI/include/ftxui/component/mouse.hpp	16;"	kind:enumerator	enum:ftxui::Mouse::Button
Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	22;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig::Direction& direction)
Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	35;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig::AlignContent& align_content)
Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	39;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig::JustifyContent& justify_content)
Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	43;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig::Wrap& wrap)
Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	47;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig config)
Normalize	./FTXUI/src/ftxui/dom/linear_gradient.cpp	29;"	kind:function	namespace:ftxui::__anon17	signature:(LinearGradient gradient)
Numeric	./FTXUI/src/ftxui/screen/string_internal.hpp	54;"	kind:member	class:ftxui::WordBreakProperty	access:private
O	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
O	./FTXUI/src/ftxui/component/event.cpp	370;"	kind:member	class:ftxui::Event	file:
OnAnimation	./FTXUI/include/ftxui/component/animation.hpp	98;"	kind:prototype	class:ftxui::animation::Animator	access:public	signature:(Params&)
OnAnimation	./FTXUI/include/ftxui/component/component_base.hpp	65;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:(animation::Params& params)
OnAnimation	./FTXUI/src/ftxui/component/animation.cpp	267;"	kind:function	class:ftxui::animation::Animator	signature:(Params& params)
OnAnimation	./FTXUI/src/ftxui/component/component.cpp	174;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(animation::Params& params)
OnCapturedMouseEvent	./FTXUI/src/ftxui/component/slider.cpp	136;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:(Event event)
OnChange	./FTXUI/src/ftxui/component/menu.cpp	74;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
OnClick	./FTXUI/src/ftxui/component/button.cpp	97;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:()
OnDown	./FTXUI/src/ftxui/component/menu.cpp	193;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
OnDown	./FTXUI/src/ftxui/component/slider.cpp	92;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:()
OnEnter	./FTXUI/src/ftxui/component/menu.cpp	80;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
OnEvent	./FTXUI/include/ftxui/component/component_base.hpp	62;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:(Event)
OnEvent	./FTXUI/src/ftxui/component/component.cpp	161;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(Event event)
OnExit	./FTXUI/src/ftxui/component/screen_interactive.cpp	195;"	kind:function	namespace:ftxui::__anon48	signature:()
OnLeft	./FTXUI/src/ftxui/component/menu.cpp	207;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
OnLeft	./FTXUI/src/ftxui/component/slider.cpp	50;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:()
OnMouseEvent	./FTXUI/src/ftxui/component/button.cpp	119;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:(Event event)
OnMouseEvent	./FTXUI/src/ftxui/component/checkbox.cpp	58;"	kind:function	class:ftxui::__anon57::CheckboxBase	file:	access:private	signature:(Event event)
OnMouseEvent	./FTXUI/src/ftxui/component/container.cpp	65;"	kind:function	class:ftxui::ContainerBase	access:protected	implementation:virtual	signature:(Event event)
OnMouseEvent	./FTXUI/src/ftxui/component/menu.cpp	297;"	kind:function	class:ftxui::MenuBase	access:public	signature:(Event event)
OnMouseEvent	./FTXUI/src/ftxui/component/radiobox.cpp	108;"	kind:function	class:ftxui::__anon55::RadioboxBase	file:	access:private	signature:(Event event)
OnMouseEvent	./FTXUI/src/ftxui/component/resizable_split.cpp	60;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:(Event event)
OnMouseEvent	./FTXUI/src/ftxui/component/slider.cpp	179;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:(Event event)
OnMouseWheel	./FTXUI/src/ftxui/component/menu.cpp	331;"	kind:function	class:ftxui::MenuBase	access:public	signature:(Event event)
OnMouseWheel	./FTXUI/src/ftxui/component/radiobox.cpp	134;"	kind:function	class:ftxui::__anon55::RadioboxBase	file:	access:private	signature:(Event event)
OnRender	./FTXUI/include/ftxui/component/component_base.hpp	56;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:()
OnRender	./FTXUI/src/ftxui/component/component.cpp	147;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
OnRight	./FTXUI/src/ftxui/component/menu.cpp	221;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
OnRight	./FTXUI/src/ftxui/component/slider.cpp	64;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:()
OnUp	./FTXUI/src/ftxui/component/menu.cpp	179;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
OnUp	./FTXUI/src/ftxui/component/slider.cpp	78;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:()
Order	./FTXUI/src/ftxui/dom/table.cpp	38;"	kind:function	namespace:ftxui::__anon29	signature:(int& a, int& b)
Output	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	43;"	kind:struct	class:ftxui::TerminalInputParser	access:private
Output	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	51;"	kind:function	struct:ftxui::TerminalInputParser::Output	access:public	signature:(Type t)
P	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
P	./FTXUI/src/ftxui/component/event.cpp	371;"	kind:member	class:ftxui::Event	file:
PageDown	./FTXUI/include/ftxui/component/event.hpp	61;"	kind:member	struct:ftxui::Event	access:public
PageDown	./FTXUI/src/ftxui/component/event.cpp	326;"	kind:member	class:ftxui::Event	file:
PageUp	./FTXUI/include/ftxui/component/event.hpp	60;"	kind:member	struct:ftxui::Event	access:public
PageUp	./FTXUI/src/ftxui/component/event.cpp	325;"	kind:member	class:ftxui::Event	file:
Palette1	./FTXUI/include/ftxui/screen/color.hpp	323;"	kind:member	class:ftxui::Color::ColorType	access:private
Palette1	./FTXUI/include/ftxui/screen/terminal.hpp	18;"	kind:enumerator	enum:ftxui::Terminal::Color
Palette16	./FTXUI/include/ftxui/screen/color.hpp	324;"	kind:member	class:ftxui::Color::ColorType	access:private
Palette16	./FTXUI/include/ftxui/screen/terminal.hpp	19;"	kind:enumerator	enum:ftxui::Terminal::Color
Palette256	./FTXUI/include/ftxui/screen/color.hpp	325;"	kind:member	class:ftxui::Color::ColorType	access:private
Palette256	./FTXUI/include/ftxui/screen/terminal.hpp	20;"	kind:enumerator	enum:ftxui::Terminal::Color
Params	./FTXUI/include/ftxui/component/animation.hpp	23;"	kind:class	namespace:ftxui::animation
Params	./FTXUI/include/ftxui/component/animation.hpp	25;"	kind:function	class:ftxui::animation::Params	access:public	signature:(Duration duration)
Parent	./FTXUI/include/ftxui/component/component_base.hpp	44;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
Parent	./FTXUI/src/ftxui/component/component.cpp	39;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
Parse	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	168;"	kind:function	class:ftxui::TerminalInputParser	signature:()
Parse	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	56;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ParseCSI	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	60;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ParseCursorPosition	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	63;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:(std::vector<int> arguments)
ParseDCS	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	59;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ParseESC	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	58;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ParseMouse	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	62;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:(bool altered, bool pressed, std::vector<int> arguments)
ParseOSC	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	61;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ParseUTF8	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	204;"	kind:function	class:ftxui::TerminalInputParser	signature:()
ParseUTF8	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	57;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
Pixel	./FTXUI/include/ftxui/screen/pixel.hpp	15;"	kind:struct	namespace:ftxui
Pixel	./FTXUI/include/ftxui/screen/pixel.hpp	16;"	kind:function	struct:ftxui::Pixel	access:public	signature:()
PixelAt	./FTXUI/include/ftxui/screen/image.hpp	28;"	kind:prototype	class:ftxui::Image	access:public	signature:(int x, int y)
PixelAt	./FTXUI/include/ftxui/screen/image.hpp	29;"	kind:prototype	class:ftxui::Image	access:public	signature:(int x, int y) const
PixelAt	./FTXUI/src/ftxui/screen/image.cpp	43;"	kind:function	class:ftxui::Image	signature:(int x, int y)
PixelAt	./FTXUI/src/ftxui/screen/image.cpp	50;"	kind:function	class:ftxui::Image	signature:(int x, int y) const
PositionAndSize	./FTXUI/src/ftxui/component/window.cpp	21;"	kind:function	namespace:ftxui::__anon54	signature:(int left, int top, int width, int height)
Post	./FTXUI/include/ftxui/component/screen_interactive.hpp	52;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(Task task)
Post	./FTXUI/src/ftxui/component/hoverable.cpp	19;"	kind:function	namespace:ftxui::__anon43	signature:(std::function<void()> f)
Post	./FTXUI/src/ftxui/component/screen_interactive.cpp	448;"	kind:function	class:ftxui::ScreenInteractive	signature:(Task task)
PostEvent	./FTXUI/include/ftxui/component/screen_interactive.hpp	53;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(Event event)
PostEvent	./FTXUI/src/ftxui/component/screen_interactive.cpp	461;"	kind:function	class:ftxui::ScreenInteractive	signature:(Event event)
PostMain	./FTXUI/include/ftxui/component/screen_interactive.hpp	83;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
PostMain	./FTXUI/src/ftxui/component/screen_interactive.cpp	529;"	kind:function	class:ftxui::ScreenInteractive	signature:()
PreMain	./FTXUI/include/ftxui/component/screen_interactive.hpp	82;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
PreMain	./FTXUI/src/ftxui/component/screen_interactive.cpp	507;"	kind:function	class:ftxui::ScreenInteractive	signature:()
Prefer	./FTXUI/include/ftxui/dom/requirement.hpp	35;"	kind:function	struct:ftxui::Requirement::Focused	access:public	signature:(const Focused& other) const
Pressed	./FTXUI/include/ftxui/component/mouse.hpp	25;"	kind:enumerator	enum:ftxui::Mouse::Motion
Print	./FTXUI/include/ftxui/screen/color.hpp	318;"	kind:prototype	class:ftxui::Color	access:public	signature:(bool is_background_color) const
Print	./FTXUI/include/ftxui/screen/screen.hpp	37;"	kind:prototype	class:ftxui::Screen	access:public	signature:() const
Print	./FTXUI/src/ftxui/screen/color.cpp	46;"	kind:function	class:ftxui::Color	signature:(bool is_background_color) const
Print	./FTXUI/src/ftxui/screen/screen.cpp	452;"	kind:function	class:ftxui::Screen	signature:() const
PrintHorizontalFlexboxList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	288;"	kind:function	namespace:ftxui::__anon4	signature:(int n)
PrintHorizontalList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	48;"	kind:function	namespace:ftxui::__anon3	signature:(int focused_index, int n)
PrintVerticalList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	41;"	kind:function	namespace:ftxui::__anon3	signature:(int focused_index, int n)
Private	./FTXUI/include/ftxui/component/screen_interactive.hpp	158;"	kind:class	class:ftxui::ScreenInteractive	access:public
Q	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
Q	./FTXUI/src/ftxui/component/event.cpp	372;"	kind:member	class:ftxui::Event	file:
QuadraticIn	./FTXUI/include/ftxui/component/animation.hpp	40;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
QuadraticIn	./FTXUI/src/ftxui/component/animation.cpp	34;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
QuadraticInOut	./FTXUI/include/ftxui/component/animation.hpp	42;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
QuadraticInOut	./FTXUI/src/ftxui/component/animation.cpp	46;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
QuadraticOut	./FTXUI/include/ftxui/component/animation.hpp	41;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
QuadraticOut	./FTXUI/src/ftxui/component/animation.cpp	39;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
QuarticIn	./FTXUI/include/ftxui/component/animation.hpp	50;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
QuarticIn	./FTXUI/src/ftxui/component/animation.cpp	73;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
QuarticInOut	./FTXUI/include/ftxui/component/animation.hpp	52;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
QuarticInOut	./FTXUI/src/ftxui/component/animation.cpp	86;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
QuarticOut	./FTXUI/include/ftxui/component/animation.hpp	51;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
QuarticOut	./FTXUI/src/ftxui/component/animation.cpp	78;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
QuinticIn	./FTXUI/include/ftxui/component/animation.hpp	55;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
QuinticIn	./FTXUI/src/ftxui/component/animation.cpp	95;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
QuinticInOut	./FTXUI/include/ftxui/component/animation.hpp	57;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
QuinticInOut	./FTXUI/src/ftxui/component/animation.cpp	108;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
QuinticOut	./FTXUI/include/ftxui/component/animation.hpp	56;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
QuinticOut	./FTXUI/src/ftxui/component/animation.cpp	100;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
R	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
R	./FTXUI/src/ftxui/component/event.cpp	373;"	kind:member	class:ftxui::Event	file:
RGB	./FTXUI/include/ftxui/screen/color.hpp	13;"	kind:macro
RGB	./FTXUI/include/ftxui/screen/color.hpp	33;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t red, uint8_t green, uint8_t blue)
RGB	./FTXUI/src/ftxui/screen/color.cpp	153;"	kind:function	class:ftxui::Color	signature:(uint8_t red, uint8_t green, uint8_t blue)
RGBA	./FTXUI/include/ftxui/screen/color.hpp	35;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)
RGBA	./FTXUI/src/ftxui/screen/color.cpp	166;"	kind:function	class:ftxui::Color	signature:(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)
ROUNDED	./FTXUI/include/ftxui/dom/elements.hpp	32;"	kind:enumerator	enum:ftxui::BorderStyle
Radiobox	./FTXUI/include/ftxui/component/component.hpp	70;"	kind:prototype	namespace:ftxui	signature:(RadioboxOption options)
Radiobox	./FTXUI/include/ftxui/component/component.hpp	71;"	kind:prototype	namespace:ftxui	signature:(ConstStringListRef entries, int* selected_, RadioboxOption options = {})
Radiobox	./FTXUI/src/ftxui/component/radiobox.cpp	204;"	kind:function	namespace:ftxui	signature:(RadioboxOption option)
Radiobox	./FTXUI/src/ftxui/component/radiobox.cpp	236;"	kind:function	namespace:ftxui	signature:(ConstStringListRef entries, int* selected, RadioboxOption option)
RadioboxBase	./FTXUI/src/ftxui/component/radiobox.cpp	25;"	kind:class	namespace:ftxui::__anon55	file:	inherits:ComponentBase,RadioboxOption
RadioboxBase	./FTXUI/src/ftxui/component/radiobox.cpp	27;"	kind:function	class:ftxui::__anon55::RadioboxBase	access:public	signature:(const RadioboxOption& option)
RadioboxOption	./FTXUI/include/ftxui/component/component_options.hpp	193;"	kind:struct	namespace:ftxui
Receive	./FTXUI/include/ftxui/component/receiver.hpp	119;"	kind:function	class:ftxui::ReceiverImpl	access:private	signature:(T t)
Receive	./FTXUI/include/ftxui/component/receiver.hpp	80;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:(T* t)
ReceiveNonBlocking	./FTXUI/include/ftxui/component/receiver.hpp	96;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:(T* t)
ReceiverImpl	./FTXUI/include/ftxui/component/receiver.hpp	71;"	kind:class	namespace:ftxui
ReceiverImpl	./FTXUI/include/ftxui/component/receiver.hpp	78;"	kind:prototype	class:ftxui::ReceiverImpl	access:public	signature:()
RecordSignal	./FTXUI/src/ftxui/component/screen_interactive.cpp	209;"	kind:function	namespace:ftxui::__anon48	signature:(int signal)
Ref	./FTXUI/include/ftxui/util/ref.hpp	46;"	kind:class	namespace:ftxui
Ref	./FTXUI/include/ftxui/util/ref.hpp	48;"	kind:prototype	class:ftxui::Ref	access:public	signature:()
Ref	./FTXUI/include/ftxui/util/ref.hpp	49;"	kind:function	class:ftxui::Ref	access:public	signature:(T t)
Ref	./FTXUI/include/ftxui/util/ref.hpp	50;"	kind:function	class:ftxui::Ref	access:public	signature:(T* t)
Ref	./FTXUI/include/ftxui/util/ref.hpp	53;"	kind:prototype	class:ftxui::Ref	access:public	signature:(const Ref<T>&)
Reflect	./FTXUI/src/ftxui/dom/reflect.cpp	17;"	kind:class	namespace:ftxui::__anon6	file:	inherits:Node
Reflect	./FTXUI/src/ftxui/dom/reflect.cpp	19;"	kind:function	class:ftxui::__anon6::Reflect	access:public	signature:(Element child, Box& box)
RefreshSelection	./FTXUI/include/ftxui/component/screen_interactive.hpp	91;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
Regional_Indicator	./FTXUI/src/ftxui/screen/string_internal.hpp	55;"	kind:member	class:ftxui::WordBreakProperty	access:private
RegisterHyperlink	./FTXUI/include/ftxui/screen/screen.hpp	69;"	kind:prototype	class:ftxui::Screen	access:public	signature:(const std::string& link)
RegisterHyperlink	./FTXUI/src/ftxui/screen/screen.cpp	533;"	kind:function	class:ftxui::Screen	signature:(const std::string& link)
ReleaseSender	./FTXUI/include/ftxui/component/receiver.hpp	127;"	kind:function	class:ftxui::ReceiverImpl	access:private	signature:()
Released	./FTXUI/include/ftxui/component/mouse.hpp	24;"	kind:enumerator	enum:ftxui::Mouse::Motion
Render	./FTXUI/include/ftxui/component/component_base.hpp	53;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
Render	./FTXUI/include/ftxui/dom/node.hpp	49;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Screen& screen)
Render	./FTXUI/include/ftxui/dom/node.hpp	62;"	kind:prototype	class:ftxui::Node	access:friend	signature:(Screen& screen, Node* node, Selection& selection)
Render	./FTXUI/include/ftxui/dom/node.hpp	70;"	kind:prototype	namespace:ftxui	signature:(Screen& screen, const Element& element)
Render	./FTXUI/include/ftxui/dom/node.hpp	71;"	kind:prototype	namespace:ftxui	signature:(Screen& screen, Node* node)
Render	./FTXUI/include/ftxui/dom/node.hpp	72;"	kind:prototype	namespace:ftxui	signature:(Screen& screen, Node* node, Selection& selection)
Render	./FTXUI/include/ftxui/dom/table.hpp	52;"	kind:prototype	class:ftxui::Table	access:public	signature:()
Render	./FTXUI/src/ftxui/component/component.cpp	111;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
Render	./FTXUI/src/ftxui/dom/node.cpp	100;"	kind:function	namespace:ftxui	signature:(Screen& screen, Node* node, Selection& selection)
Render	./FTXUI/src/ftxui/dom/node.cpp	63;"	kind:function	class:ftxui::Node	signature:(Screen& screen)
Render	./FTXUI/src/ftxui/dom/node.cpp	88;"	kind:function	namespace:ftxui	signature:(Screen& screen, const Element& element)
Render	./FTXUI/src/ftxui/dom/node.cpp	95;"	kind:function	namespace:ftxui	signature:(Screen& screen, Node* node)
Render	./FTXUI/src/ftxui/dom/table.cpp	224;"	kind:function	class:ftxui::Table	signature:()
RenderBottom	./FTXUI/src/ftxui/component/resizable_split.cpp	142;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:()
RenderHorizontal	./FTXUI/src/ftxui/dom/gauge.cpp	97;"	kind:function	class:ftxui::__anon24::Gauge	access:public	signature:(Screen& screen, bool invert)
RenderLeft	./FTXUI/src/ftxui/component/resizable_split.cpp	112;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:()
RenderRight	./FTXUI/src/ftxui/component/resizable_split.cpp	122;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:()
RenderTop	./FTXUI/src/ftxui/component/resizable_split.cpp	132;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:()
RenderVertical	./FTXUI/src/ftxui/dom/gauge.cpp	127;"	kind:function	class:ftxui::__anon24::Gauge	access:public	signature:(Screen& screen, bool invert)
Renderer	./FTXUI/include/ftxui/component/component.hpp	107;"	kind:prototype	namespace:ftxui	signature:(Component child, std::function<Element()>)
Renderer	./FTXUI/include/ftxui/component/component.hpp	108;"	kind:prototype	namespace:ftxui	signature:(std::function<Element()>)
Renderer	./FTXUI/include/ftxui/component/component.hpp	109;"	kind:prototype	namespace:ftxui	signature:(std::function<Element(bool )>)
Renderer	./FTXUI/include/ftxui/component/component.hpp	110;"	kind:prototype	namespace:ftxui	signature:(ElementDecorator)
Renderer	./FTXUI/src/ftxui/component/renderer.cpp	125;"	kind:function	namespace:ftxui	signature:(ElementDecorator decorator)
Renderer	./FTXUI/src/ftxui/component/renderer.cpp	29;"	kind:function	namespace:ftxui	signature:(std::function<Element()> render)
Renderer	./FTXUI/src/ftxui/component/renderer.cpp	61;"	kind:function	namespace:ftxui	signature:(Component child, std::function<Element()> render)
Renderer	./FTXUI/src/ftxui/component/renderer.cpp	84;"	kind:function	namespace:ftxui	signature:(std::function<Element(bool)> render)
RequestAnimationFrame	./FTXUI/include/ftxui/component/animation.hpp	16;"	kind:prototype	namespace:ftxui::animation	signature:()
RequestAnimationFrame	./FTXUI/include/ftxui/component/screen_interactive.hpp	54;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
RequestAnimationFrame	./FTXUI/src/ftxui/component/screen_interactive.cpp	467;"	kind:function	class:ftxui::ScreenInteractive	signature:()
RequestAnimationFrame	./FTXUI/src/ftxui/component/screen_interactive.cpp	63;"	kind:function	namespace:ftxui::animation	signature:()
Requirement	./FTXUI/include/ftxui/dom/requirement.hpp	13;"	kind:struct	namespace:ftxui
Reset	./FTXUI/src/ftxui/component/screen_interactive.cpp	315;"	kind:function	namespace:ftxui::__anon48	signature:(const std::vector<DECMode>& parameters)
ResetCursorPosition	./FTXUI/include/ftxui/component/screen_interactive.hpp	93;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ResetCursorPosition	./FTXUI/src/ftxui/component/screen_interactive.cpp	1019;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ResetPosition	./FTXUI/include/ftxui/screen/screen.hpp	44;"	kind:prototype	class:ftxui::Screen	access:public	signature:(bool clear = false) const
ResetPosition	./FTXUI/src/ftxui/screen/screen.cpp	475;"	kind:function	class:ftxui::Screen	signature:(bool clear) const
ResizableSplit	./FTXUI/include/ftxui/component/component.hpp	101;"	kind:prototype	namespace:ftxui	signature:(ResizableSplitOption options)
ResizableSplit	./FTXUI/src/ftxui/component/resizable_split.cpp	186;"	kind:function	namespace:ftxui	signature:(ResizableSplitOption options)
ResizableSplitBase	./FTXUI/src/ftxui/component/resizable_split.cpp	21;"	kind:class	namespace:ftxui::__anon49	file:	inherits:ComponentBase
ResizableSplitBase	./FTXUI/src/ftxui/component/resizable_split.cpp	23;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:(ResizableSplitOption options)
ResizableSplitBottom	./FTXUI/include/ftxui/component/component.hpp	105;"	kind:prototype	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ResizableSplitBottom	./FTXUI/src/ftxui/component/resizable_split.cpp	317;"	kind:function	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ResizableSplitLeft	./FTXUI/include/ftxui/component/component.hpp	102;"	kind:prototype	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ResizableSplitLeft	./FTXUI/src/ftxui/component/resizable_split.cpp	215;"	kind:function	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ResizableSplitOption	./FTXUI/include/ftxui/component/component_options.hpp	210;"	kind:struct	namespace:ftxui
ResizableSplitRight	./FTXUI/include/ftxui/component/component.hpp	103;"	kind:prototype	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ResizableSplitRight	./FTXUI/src/ftxui/component/resizable_split.cpp	249;"	kind:function	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ResizableSplitTop	./FTXUI/include/ftxui/component/component.hpp	104;"	kind:prototype	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ResizableSplitTop	./FTXUI/src/ftxui/component/resizable_split.cpp	283;"	kind:function	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ResizeDecorator	./FTXUI/src/ftxui/component/window.cpp	39;"	kind:class	namespace:ftxui::__anon54	file:	inherits:NodeDecorator
ResizeDecorator	./FTXUI/src/ftxui/component/window.cpp	41;"	kind:function	class:ftxui::__anon54::ResizeDecorator	access:public	signature:(Element child, bool resize_left, bool resize_right, bool resize_top, bool resize_down, Color color)
Return	./FTXUI/include/ftxui/component/event.hpp	51;"	kind:member	struct:ftxui::Event	access:public
Return	./FTXUI/src/ftxui/component/event.cpp	303;"	kind:member	class:ftxui::Event	file:
Right	./FTXUI/include/ftxui/component/mouse.hpp	15;"	kind:enumerator	enum:ftxui::Mouse::Button
Right	./FTXUI/include/ftxui/dom/direction.hpp	12;"	kind:member	class:ftxui::Direction	access:private
Row	./FTXUI/include/ftxui/dom/flexbox_config.hpp	21;"	kind:member	class:ftxui::FlexboxConfig::Direction	access:private
RowInversed	./FTXUI/include/ftxui/dom/flexbox_config.hpp	22;"	kind:member	class:ftxui::FlexboxConfig::Direction	access:private
Run	./FTXUI/include/ftxui/component/loop.hpp	25;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
Run	./FTXUI/src/ftxui/component/loop.cpp	51;"	kind:function	class:ftxui::Loop	signature:()
RunOnce	./FTXUI/include/ftxui/component/loop.hpp	23;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
RunOnce	./FTXUI/include/ftxui/component/screen_interactive.hpp	86;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(Component component)
RunOnce	./FTXUI/src/ftxui/component/loop.cpp	39;"	kind:function	class:ftxui::Loop	signature:()
RunOnce	./FTXUI/src/ftxui/component/screen_interactive.cpp	760;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component)
RunOnceBlocking	./FTXUI/include/ftxui/component/loop.hpp	24;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
RunOnceBlocking	./FTXUI/include/ftxui/component/screen_interactive.hpp	87;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(Component component)
RunOnceBlocking	./FTXUI/src/ftxui/component/loop.cpp	45;"	kind:function	class:ftxui::Loop	signature:()
RunOnceBlocking	./FTXUI/src/ftxui/component/screen_interactive.cpp	750;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component)
S	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
S	./FTXUI/src/ftxui/component/event.cpp	374;"	kind:member	class:ftxui::Event	file:
SPECIAL	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	35;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
ST	./FTXUI/src/ftxui/component/screen_interactive.cpp	266;"	kind:member	namespace:ftxui::__anon48	file:
Safe	./FTXUI/src/ftxui/screen/terminal.cpp	51;"	kind:function	namespace:ftxui::__anon66	signature:(const char* c)
SaturateHorizontal	./FTXUI/include/ftxui/dom/selection.hpp	24;"	kind:prototype	class:ftxui::Selection	access:public	signature:(Box box)
SaturateHorizontal	./FTXUI/src/ftxui/dom/selection.cpp	75;"	kind:function	class:ftxui::Selection	signature:(Box box)
SaturateVertical	./FTXUI/include/ftxui/dom/selection.hpp	25;"	kind:prototype	class:ftxui::Selection	access:public	signature:(Box box)
SaturateVertical	./FTXUI/src/ftxui/dom/selection.cpp	113;"	kind:function	class:ftxui::Selection	signature:(Box box)
Screen	./FTXUI/include/ftxui/screen/screen.hpp	27;"	kind:class	namespace:ftxui	inherits:Image
Screen	./FTXUI/include/ftxui/screen/screen.hpp	30;"	kind:prototype	class:ftxui::Screen	access:public	signature:(int dimx, int dimy)
Screen	./FTXUI/src/ftxui/screen/screen.cpp	398;"	kind:function	class:ftxui::Screen	signature:(int dimx, int dimy)
ScreenInteractive	./FTXUI/include/ftxui/component/screen_interactive.hpp	106;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(int dimx, int dimy, Dimension dimension, bool use_alternative_screen)
ScreenInteractive	./FTXUI/include/ftxui/component/screen_interactive.hpp	30;"	kind:class	namespace:ftxui	inherits:Screen
ScreenInteractive	./FTXUI/src/ftxui/component/screen_interactive.cpp	349;"	kind:function	class:ftxui::ScreenInteractive	signature:(int dimx, int dimy, Dimension dimension, bool use_alternative_screen)
SecondTarget	./FTXUI/src/ftxui/component/menu.cpp	455;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
Select	./FTXUI/include/ftxui/dom/node.hpp	46;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Selection& selection)
Select	./FTXUI/src/ftxui/dom/node.cpp	49;"	kind:function	class:ftxui::Node	signature:(Selection& selection)
SelectAll	./FTXUI/include/ftxui/dom/table.hpp	42;"	kind:prototype	class:ftxui::Table	access:public	signature:()
SelectAll	./FTXUI/src/ftxui/dom/table.cpp	211;"	kind:function	class:ftxui::Table	signature:()
SelectCell	./FTXUI/include/ftxui/dom/table.hpp	43;"	kind:prototype	class:ftxui::Table	access:public	signature:(int column, int row)
SelectCell	./FTXUI/src/ftxui/dom/table.cpp	178;"	kind:function	class:ftxui::Table	signature:(int column, int row)
SelectColumn	./FTXUI/include/ftxui/dom/table.hpp	46;"	kind:prototype	class:ftxui::Table	access:public	signature:(int column_index)
SelectColumn	./FTXUI/src/ftxui/dom/table.cpp	160;"	kind:function	class:ftxui::Table	signature:(int index)
SelectColumns	./FTXUI/include/ftxui/dom/table.hpp	47;"	kind:prototype	class:ftxui::Table	access:public	signature:(int column_min, int column_max)
SelectColumns	./FTXUI/src/ftxui/dom/table.cpp	169;"	kind:function	class:ftxui::Table	signature:(int column_min, int column_max)
SelectRectangle	./FTXUI/include/ftxui/dom/table.hpp	48;"	kind:prototype	class:ftxui::Table	access:public	signature:(int column_min, int column_max, int row_min, int row_max)
SelectRectangle	./FTXUI/src/ftxui/dom/table.cpp	189;"	kind:function	class:ftxui::Table	signature:(int column_min, int column_max, int row_min, int row_max)
SelectRow	./FTXUI/include/ftxui/dom/table.hpp	44;"	kind:prototype	class:ftxui::Table	access:public	signature:(int row_index)
SelectRow	./FTXUI/src/ftxui/dom/table.cpp	143;"	kind:function	class:ftxui::Table	signature:(int index)
SelectRows	./FTXUI/include/ftxui/dom/table.hpp	45;"	kind:prototype	class:ftxui::Table	access:public	signature:(int row_min, int row_max)
SelectRows	./FTXUI/src/ftxui/dom/table.cpp	152;"	kind:function	class:ftxui::Table	signature:(int row_min, int row_max)
SelectedTakeFocus	./FTXUI/src/ftxui/component/menu.cpp	174;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
Selection	./FTXUI/include/ftxui/dom/selection.hpp	17;"	kind:class	namespace:ftxui
Selection	./FTXUI/include/ftxui/dom/selection.hpp	19;"	kind:prototype	class:ftxui::Selection	access:public	signature:()
Selection	./FTXUI/include/ftxui/dom/selection.hpp	20;"	kind:prototype	class:ftxui::Selection	access:public	signature:(int start_x, int start_y, int end_x, int end_y)
Selection	./FTXUI/include/ftxui/dom/selection.hpp	32;"	kind:prototype	class:ftxui::Selection	access:private	signature:(int start_x, int start_y, int end_x, int end_y, Selection* parent)
Selection	./FTXUI/src/ftxui/dom/selection.cpp	34;"	kind:function	class:ftxui::Selection	signature:(int start_x, int start_y, int end_x, int end_y)
Selection	./FTXUI/src/ftxui/dom/selection.cpp	47;"	kind:function	class:ftxui::Selection	signature:(int start_x, int start_y, int end_x, int end_y, Selection* parent)
SelectionChange	./FTXUI/include/ftxui/component/screen_interactive.hpp	74;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(std::function<void()> callback)
SelectionChange	./FTXUI/src/ftxui/component/screen_interactive.cpp	588;"	kind:function	class:ftxui::ScreenInteractive	signature:(std::function<void()> callback)
SelectionData	./FTXUI/include/ftxui/component/screen_interactive.hpp	141;"	kind:struct	class:ftxui::ScreenInteractive	access:private
SelectionStyle	./FTXUI/src/ftxui/dom/selection_style.cpp	31;"	kind:class	namespace:ftxui::__anon15	file:	inherits:NodeDecorator
SelectionStyle	./FTXUI/src/ftxui/dom/selection_style.cpp	33;"	kind:function	class:ftxui::__anon15::SelectionStyle	access:public	signature:(Element child, const std::function<void(Pixel&)>& style)
SelectionStyleReset	./FTXUI/src/ftxui/dom/selection_style.cpp	18;"	kind:class	namespace:ftxui::__anon15	file:	inherits:NodeDecorator
SelectionStyleReset	./FTXUI/src/ftxui/dom/selection_style.cpp	20;"	kind:function	class:ftxui::__anon15::SelectionStyleReset	access:public	signature:(Element child)
Send	./FTXUI/include/ftxui/component/receiver.hpp	59;"	kind:function	class:ftxui::SenderImpl	access:public	signature:(T t)
Send	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	124;"	kind:function	class:ftxui::TerminalInputParser	signature:(TerminalInputParser::Output output)
Send	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	55;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:(Output output)
SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	53;"	kind:class	namespace:ftxui
SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	55;"	kind:prototype	class:ftxui::SenderImpl	access:public	signature:(const SenderImpl&)
SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	56;"	kind:prototype	class:ftxui::SenderImpl	access:public	signature:(SenderImpl&&)
SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	66;"	kind:function	class:ftxui::SenderImpl	access:private	signature:(ReceiverImpl<T>* consumer)
Separator	./FTXUI/include/ftxui/dom/table.hpp	80;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
Separator	./FTXUI/src/ftxui/dom/separator.cpp	32;"	kind:class	namespace:ftxui::__anon8	file:	inherits:Node
Separator	./FTXUI/src/ftxui/dom/separator.cpp	34;"	kind:function	class:ftxui::__anon8::Separator	access:public	signature:(std::string value)
Separator	./FTXUI/src/ftxui/dom/table.cpp	382;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
SeparatorAuto	./FTXUI/src/ftxui/dom/separator.cpp	54;"	kind:class	namespace:ftxui::__anon8	file:	inherits:Node
SeparatorAuto	./FTXUI/src/ftxui/dom/separator.cpp	56;"	kind:function	class:ftxui::__anon8::SeparatorAuto	access:public	signature:(BorderStyle style)
SeparatorHorizontal	./FTXUI/include/ftxui/dom/table.hpp	82;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
SeparatorHorizontal	./FTXUI/src/ftxui/dom/table.cpp	412;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
SeparatorVertical	./FTXUI/include/ftxui/dom/table.hpp	81;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
SeparatorVertical	./FTXUI/src/ftxui/dom/table.cpp	398;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
SeparatorWithPixel	./FTXUI/src/ftxui/dom/separator.cpp	82;"	kind:class	namespace:ftxui::__anon8	file:	inherits:SeparatorAuto
SeparatorWithPixel	./FTXUI/src/ftxui/dom/separator.cpp	84;"	kind:function	class:ftxui::__anon8::SeparatorWithPixel	access:public	signature:(Pixel pixel)
Serialize	./FTXUI/src/ftxui/component/screen_interactive.cpp	296;"	kind:function	namespace:ftxui::__anon48	signature:(const std::vector<DECMode>& parameters)
Set	./FTXUI/include/ftxui/component/component_options.hpp	57;"	kind:prototype	struct:ftxui::AnimatedColorOption	access:public	signature:( Color inactive, Color active, animation::Duration duration = std::chrono::milliseconds(250), animation::easing::Function function = animation::easing::QuadraticInOut)
Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	104;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::Direction)
Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	105;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::Wrap)
Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	106;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::JustifyContent)
Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	107;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::AlignItems)
Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	108;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::AlignContent)
Set	./FTXUI/src/ftxui/component/component_options.cpp	21;"	kind:function	class:ftxui::AnimatedColorOption	signature:(Color _inactive, Color _active, animation::Duration _duration, animation::easing::Function _function)
Set	./FTXUI/src/ftxui/component/screen_interactive.cpp	310;"	kind:function	namespace:ftxui::__anon48	signature:(const std::vector<DECMode>& parameters)
Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	10;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::Direction d)
Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	17;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::Wrap w)
Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	24;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::JustifyContent j)
Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	31;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::AlignItems a)
Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	38;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::AlignContent a)
SetActiveChild	./FTXUI/include/ftxui/component/component_base.hpp	87;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:(ComponentBase* child)
SetActiveChild	./FTXUI/include/ftxui/component/component_base.hpp	88;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(Component child)
SetActiveChild	./FTXUI/src/ftxui/component/component.cpp	227;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:([[maybe_unused]] ComponentBase* child)
SetActiveChild	./FTXUI/src/ftxui/component/component.cpp	232;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(Component child)
SetAnimation	./FTXUI/include/ftxui/component/component_options.hpp	47;"	kind:prototype	struct:ftxui::UnderlineOption	access:public	signature:(animation::Duration d, animation::easing::Function f)
SetAnimation	./FTXUI/src/ftxui/component/component_options.cpp	36;"	kind:function	class:ftxui::UnderlineOption	signature:(animation::Duration d, animation::easing::Function f)
SetAnimationDuration	./FTXUI/include/ftxui/component/component_options.hpp	48;"	kind:prototype	struct:ftxui::UnderlineOption	access:public	signature:(animation::Duration d)
SetAnimationDuration	./FTXUI/src/ftxui/component/component_options.cpp	45;"	kind:function	class:ftxui::UnderlineOption	signature:(animation::Duration d)
SetAnimationFunction	./FTXUI/include/ftxui/component/component_options.hpp	49;"	kind:prototype	struct:ftxui::UnderlineOption	access:public	signature:(animation::easing::Function f)
SetAnimationFunction	./FTXUI/include/ftxui/component/component_options.hpp	50;"	kind:prototype	struct:ftxui::UnderlineOption	access:public	signature:(animation::easing::Function f_leader, animation::easing::Function f_follower)
SetAnimationFunction	./FTXUI/src/ftxui/component/component_options.cpp	53;"	kind:function	class:ftxui::UnderlineOption	signature:(animation::easing::Function f)
SetAnimationFunction	./FTXUI/src/ftxui/component/component_options.cpp	64;"	kind:function	class:ftxui::UnderlineOption	signature:( animation::easing::Function f_leader, animation::easing::Function f_follower)
SetAnimationTarget	./FTXUI/src/ftxui/component/button.cpp	79;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:(float target)
SetBox	./FTXUI/include/ftxui/dom/node.hpp	42;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Box box)
SetBox	./FTXUI/src/ftxui/dom/node.cpp	43;"	kind:function	class:ftxui::Node	signature:(Box box)
SetBox	./FTXUI/src/ftxui/dom/node_decorator.cpp	17;"	kind:function	class:ftxui::NodeDecorator	signature:(Box box)
SetColorSupport	./FTXUI/include/ftxui/screen/terminal.hpp	24;"	kind:prototype	namespace:ftxui::Terminal	signature:(Color color)
SetColorSupport	./FTXUI/src/ftxui/screen/terminal.cpp	140;"	kind:function	namespace:ftxui::Terminal	signature:(Color color)
SetCursor	./FTXUI/include/ftxui/screen/screen.hpp	65;"	kind:function	class:ftxui::Screen	access:public	signature:(Cursor cursor)
SetFallbackSize	./FTXUI/include/ftxui/screen/terminal.hpp	15;"	kind:prototype	namespace:ftxui::Terminal	signature:(const Dimensions& fallbackSize)
SetFallbackSize	./FTXUI/src/ftxui/screen/terminal.cpp	124;"	kind:function	namespace:ftxui::Terminal	signature:(const Dimensions& fallbackSize)
SetGap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	109;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(int gap_x, int gap_y)
SetGap	./FTXUI/src/ftxui/dom/flexbox_config.cpp	45;"	kind:function	class:ftxui::FlexboxConfig	signature:(int x, int y)
SetSelectionStyle	./FTXUI/include/ftxui/screen/screen.hpp	74;"	kind:prototype	class:ftxui::Screen	access:public	signature:(SelectionStyle decorator)
SetSelectionStyle	./FTXUI/src/ftxui/screen/screen.cpp	561;"	kind:function	class:ftxui::Screen	signature:(SelectionStyle decorator)
SetX	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	97;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& global)
SetY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	133;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
Shape	./FTXUI/include/ftxui/screen/screen.hpp	52;"	kind:enum	struct:ftxui::Screen::Cursor	access:public
Shift	./FTXUI/include/ftxui/screen/box.hpp	17;"	kind:prototype	struct:ftxui::Box	access:public	signature:(int x, int y)
Shift	./FTXUI/src/ftxui/screen/box.cpp	37;"	kind:function	class:ftxui::Box	signature:(int x, int y)
ShouldAttemptAutoMerge	./FTXUI/src/ftxui/screen/screen.cpp	366;"	kind:function	namespace:ftxui::__anon65	signature:(Pixel& pixel)
Signal	./FTXUI/include/ftxui/component/screen_interactive.hpp	160;"	kind:function	class:ftxui::ScreenInteractive::Private	access:public	signature:(ScreenInteractive& s, int signal)
Signal	./FTXUI/include/ftxui/component/screen_interactive.hpp	95;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(int signal)
Signal	./FTXUI/src/ftxui/component/screen_interactive.cpp	1043;"	kind:function	class:ftxui::ScreenInteractive	signature:(int signal)
Simple	./FTXUI/include/ftxui/component/component_options.hpp	115;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:()
Simple	./FTXUI/include/ftxui/component/component_options.hpp	137;"	kind:prototype	struct:ftxui::CheckboxOption	access:public	signature:()
Simple	./FTXUI/include/ftxui/component/component_options.hpp	195;"	kind:prototype	struct:ftxui::RadioboxOption	access:public	signature:()
Simple	./FTXUI/src/ftxui/component/component_options.cpp	177;"	kind:function	class:ftxui::ButtonOption	signature:()
Simple	./FTXUI/src/ftxui/component/component_options.cpp	262;"	kind:function	class:ftxui::CheckboxOption	signature:()
Simple	./FTXUI/src/ftxui/component/component_options.cpp	287;"	kind:function	class:ftxui::RadioboxOption	signature:()
SineIn	./FTXUI/include/ftxui/component/animation.hpp	60;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
SineIn	./FTXUI/src/ftxui/component/animation.cpp	117;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
SineInOut	./FTXUI/include/ftxui/component/animation.hpp	62;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
SineInOut	./FTXUI/src/ftxui/component/animation.cpp	127;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
SineOut	./FTXUI/include/ftxui/component/animation.hpp	61;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
SineOut	./FTXUI/src/ftxui/component/animation.cpp	122;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
Single_Quote	./FTXUI/src/ftxui/screen/string_internal.hpp	56;"	kind:member	class:ftxui::WordBreakProperty	access:private
Size	./FTXUI/include/ftxui/screen/terminal.hpp	14;"	kind:prototype	namespace:ftxui::Terminal	signature:()
Size	./FTXUI/src/ftxui/dom/size.cpp	16;"	kind:class	namespace:ftxui::__anon10	file:	inherits:Node
Size	./FTXUI/src/ftxui/dom/size.cpp	18;"	kind:function	class:ftxui::__anon10::Size	access:public	signature:(Element child, WidthOrHeight direction, Constraint constraint, int value)
Size	./FTXUI/src/ftxui/screen/terminal.cpp	94;"	kind:function	namespace:ftxui::Terminal	signature:()
SizeVisitor	./FTXUI/include/ftxui/util/ref.hpp	176;"	kind:struct	class:ftxui::ConstStringListRef	access:private
Slider	./FTXUI/include/ftxui/component/component.hpp	82;"	kind:prototype	namespace:ftxui	signature:(SliderOption<T> options)
Slider	./FTXUI/include/ftxui/component/component.hpp	85;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, Ref<int> value, ConstRef<int> min = 0, ConstRef<int> max = 100, ConstRef<int> increment = 5)
Slider	./FTXUI/include/ftxui/component/component.hpp	90;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, Ref<float> value, ConstRef<float> min = 0.f, ConstRef<float> max = 100.f, ConstRef<float> increment = 5.f)
Slider	./FTXUI/include/ftxui/component/component.hpp	95;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, Ref<long> value, ConstRef<long> min = 0L, ConstRef<long> max = 100L, ConstRef<long> increment = 5L)
Slider	./FTXUI/src/ftxui/component/slider.cpp	289;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, Ref<int> value, ConstRef<int> min, ConstRef<int> max, ConstRef<int> increment)
Slider	./FTXUI/src/ftxui/component/slider.cpp	303;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, Ref<float> value, ConstRef<float> min, ConstRef<float> max, ConstRef<float> increment)
Slider	./FTXUI/src/ftxui/component/slider.cpp	316;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, Ref<long> value, ConstRef<long> min, ConstRef<long> max, ConstRef<long> increment)
Slider	./FTXUI/src/ftxui/component/slider.cpp	346;"	kind:function	namespace:ftxui	signature:(SliderOption<T> options)
Slider	./FTXUI/src/ftxui/component/slider.cpp	350;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<int8_t>)
Slider	./FTXUI/src/ftxui/component/slider.cpp	351;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<int16_t>)
Slider	./FTXUI/src/ftxui/component/slider.cpp	352;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<int32_t>)
Slider	./FTXUI/src/ftxui/component/slider.cpp	353;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<int64_t>)
Slider	./FTXUI/src/ftxui/component/slider.cpp	355;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<uint8_t>)
Slider	./FTXUI/src/ftxui/component/slider.cpp	356;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<uint16_t>)
Slider	./FTXUI/src/ftxui/component/slider.cpp	357;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<uint32_t>)
Slider	./FTXUI/src/ftxui/component/slider.cpp	358;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<uint64_t>)
Slider	./FTXUI/src/ftxui/component/slider.cpp	360;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<float>)
Slider	./FTXUI/src/ftxui/component/slider.cpp	361;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<double>)
SliderBase	./FTXUI/src/ftxui/component/slider.cpp	37;"	kind:class	namespace:ftxui::__anon50	file:	inherits:SliderOption,ComponentBase
SliderBase	./FTXUI/src/ftxui/component/slider.cpp	39;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:(SliderOption<T> options)
SliderOption	./FTXUI/include/ftxui/component/component_options.hpp	223;"	kind:struct	namespace:ftxui
SliderWithLabel	./FTXUI/src/ftxui/component/slider.cpp	212;"	kind:class	namespace:ftxui::__anon50	file:	inherits:ComponentBase
SliderWithLabel	./FTXUI/src/ftxui/component/slider.cpp	214;"	kind:function	class:ftxui::__anon50::SliderWithLabel	access:public	signature:(ConstStringRef label, Component inner)
SpaceAround	./FTXUI/include/ftxui/dom/flexbox_config.hpp	61;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
SpaceAround	./FTXUI/include/ftxui/dom/flexbox_config.hpp	88;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
SpaceBetween	./FTXUI/include/ftxui/dom/flexbox_config.hpp	55;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
SpaceBetween	./FTXUI/include/ftxui/dom/flexbox_config.hpp	87;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
SpaceEvenly	./FTXUI/include/ftxui/dom/flexbox_config.hpp	64;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
SpaceEvenly	./FTXUI/include/ftxui/dom/flexbox_config.hpp	90;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
Spacious	./FTXUI/include/ftxui/component/component_options.hpp	168;"	kind:prototype	struct:ftxui::InputOption	access:public	signature:()
Spacious	./FTXUI/src/ftxui/component/component_options.cpp	335;"	kind:function	class:ftxui::InputOption	signature:()
Special	./FTXUI/include/ftxui/component/event.hpp	32;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string)
Special	./FTXUI/src/ftxui/component/event.cpp	79;"	kind:function	class:ftxui::Event	signature:(std::string input)
Split	./FTXUI/src/ftxui/component/input.cpp	30;"	kind:function	namespace:ftxui::__anon58	signature:(const std::string& input)
Split	./FTXUI/src/ftxui/dom/paragraph.cpp	15;"	kind:function	namespace:ftxui::__anon31	signature:(const std::string& the_text)
Split	./FTXUI/src/ftxui/dom/paragraph.cpp	25;"	kind:function	namespace:ftxui::__anon31	signature:(const std::string& paragraph, const std::function<Element(std::string)>& f)
Stacked	./FTXUI/include/ftxui/component/component.hpp	44;"	kind:prototype	namespace:ftxui::Container	signature:(Components children)
Stacked	./FTXUI/src/ftxui/component/container.cpp	432;"	kind:function	namespace:ftxui::Container	signature:(Components children)
StackedContainer	./FTXUI/src/ftxui/component/container.cpp	241;"	kind:class	namespace:ftxui	file:	inherits:ContainerBase
StackedContainer	./FTXUI/src/ftxui/component/container.cpp	243;"	kind:function	class:ftxui::StackedContainer	access:public	signature:(Components children)
Status	./FTXUI/include/ftxui/dom/node.hpp	56;"	kind:struct	class:ftxui::Node	access:public
Stop	./FTXUI/include/ftxui/dom/linear_gradient.hpp	32;"	kind:struct	struct:ftxui::LinearGradient	access:public
Stop	./FTXUI/include/ftxui/dom/linear_gradient.hpp	45;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(Color color, float position)
Stop	./FTXUI/include/ftxui/dom/linear_gradient.hpp	46;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(Color color)
Stop	./FTXUI/src/ftxui/dom/linear_gradient.cpp	225;"	kind:function	class:ftxui::LinearGradient	signature:(Color c, float p)
Stop	./FTXUI/src/ftxui/dom/linear_gradient.cpp	235;"	kind:function	class:ftxui::LinearGradient	signature:(Color c)
Stretch	./FTXUI/include/ftxui/dom/flexbox_config.hpp	52;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
Stretch	./FTXUI/include/ftxui/dom/flexbox_config.hpp	75;"	kind:member	class:ftxui::FlexboxConfig::AlignItems	access:private
Stretch	./FTXUI/include/ftxui/dom/flexbox_config.hpp	86;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
StringRef	./FTXUI/include/ftxui/util/ref.hpp	82;"	kind:class	namespace:ftxui	inherits:Ref
StringRef	./FTXUI/include/ftxui/util/ref.hpp	86;"	kind:function	class:ftxui::StringRef	access:public	signature:(const wchar_t* ref)
StringRef	./FTXUI/include/ftxui/util/ref.hpp	88;"	kind:function	class:ftxui::StringRef	access:public	signature:(const char* ref)
Style	./FTXUI/include/ftxui/dom/canvas.hpp	107;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const Stylizer& style)
Style	./FTXUI/src/ftxui/dom/canvas.cpp	861;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const Stylizer& style)
SymmetryX	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	35;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(FlexboxConfig& c)
SymmetryX	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	77;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
SymmetryXY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	17;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(FlexboxConfig& c)
SymmetryXY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	61;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
SymmetryY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	48;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(FlexboxConfig& c)
SymmetryY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	87;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
T	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
T	./FTXUI/src/ftxui/component/event.cpp	375;"	kind:member	class:ftxui::Event	file:
TAKE_ANY_ARGS	./FTXUI/include/ftxui/dom/take_any_args.hpp	36;"	kind:macro
TEST	./FTXUI/src/ftxui/component/animation_test.cpp	13;"	kind:function	namespace:ftxui	signature:(AnimationTest, StartAndEnd)
TEST	./FTXUI/src/ftxui/component/button_test.cpp	38;"	kind:function	namespace:ftxui	signature:(ButtonTest, Basic)
TEST	./FTXUI/src/ftxui/component/button_test.cpp	97;"	kind:function	namespace:ftxui	signature:(ButtonTest, Animation)
TEST	./FTXUI/src/ftxui/component/collapsible_test.cpp	14;"	kind:function	namespace:ftxui	signature:(CollapsibleTest, Basic)
TEST	./FTXUI/src/ftxui/component/component_test.cpp	101;"	kind:function	namespace:ftxui	signature:(ContainerTest, Add)
TEST	./FTXUI/src/ftxui/component/component_test.cpp	129;"	kind:function	namespace:ftxui	signature:(ContainerTest, ChildAt)
TEST	./FTXUI/src/ftxui/component/component_test.cpp	159;"	kind:function	namespace:ftxui	signature:(ComponentTest, NonFocusableAreNotFocused)
TEST	./FTXUI/src/ftxui/component/component_test.cpp	20;"	kind:function	namespace:ftxui	signature:(ContainerTest, DeleteParentFirst)
TEST	./FTXUI/src/ftxui/component/component_test.cpp	28;"	kind:function	namespace:ftxui	signature:(ContainerTest, DeleteChildFirst)
TEST	./FTXUI/src/ftxui/component/component_test.cpp	36;"	kind:function	namespace:ftxui	signature:(ContainerTest, Detach)
TEST	./FTXUI/src/ftxui/component/component_test.cpp	79;"	kind:function	namespace:ftxui	signature:(ContainerTest, DetachAllChildren)
TEST	./FTXUI/src/ftxui/component/container_test.cpp	173;"	kind:function	namespace:ftxui	signature:(ContainerTest, SetActiveChild)
TEST	./FTXUI/src/ftxui/component/container_test.cpp	21;"	kind:function	namespace:ftxui	signature:(ContainerTest, HorizontalEvent)
TEST	./FTXUI/src/ftxui/component/container_test.cpp	227;"	kind:function	namespace:ftxui	signature:(ContainerTest, TakeFocus)
TEST	./FTXUI/src/ftxui/component/container_test.cpp	309;"	kind:function	namespace:ftxui	signature:(ContainerTest, TabFocusable)
TEST	./FTXUI/src/ftxui/component/container_test.cpp	97;"	kind:function	namespace:ftxui	signature:(ContainerTest, VerticalEvent)
TEST	./FTXUI/src/ftxui/component/dropdown_test.cpp	12;"	kind:function	namespace:ftxui	signature:(DropdownTest, Empty)
TEST	./FTXUI/src/ftxui/component/hoverable_test.cpp	115;"	kind:function	namespace:ftxui::__anon44	signature:(HoverableTest, BasicBoolCallback)
TEST	./FTXUI/src/ftxui/component/hoverable_test.cpp	147;"	kind:function	namespace:ftxui::__anon44	signature:(HoverableTest, Coverage)
TEST	./FTXUI/src/ftxui/component/hoverable_test.cpp	35;"	kind:function	namespace:ftxui::__anon44	signature:(HoverableTest, BasicBool)
TEST	./FTXUI/src/ftxui/component/hoverable_test.cpp	67;"	kind:function	namespace:ftxui::__anon44	signature:(HoverableTest, BasicCallback)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	119;"	kind:function	namespace:ftxui	signature:(InputTest, ArrowUpDown)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	191;"	kind:function	namespace:ftxui	signature:(InputTest, Insert)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	19;"	kind:function	namespace:ftxui	signature:(InputTest, Init)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	227;"	kind:function	namespace:ftxui	signature:(InputTest, Home)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	252;"	kind:function	namespace:ftxui	signature:(InputTest, End)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	275;"	kind:function	namespace:ftxui	signature:(InputTest, Delete)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	29;"	kind:function	namespace:ftxui	signature:(InputTest, Type)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	336;"	kind:function	namespace:ftxui	signature:(InputTest, Backspace)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	393;"	kind:function	namespace:ftxui	signature:(InputTest, CtrlArrow)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	474;"	kind:function	namespace:ftxui	signature:(InputTest, CtrlArrowLeft2)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	504;"	kind:function	namespace:ftxui	signature:(InputTest, CtrlArrowRight)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	540;"	kind:function	namespace:ftxui	signature:(InputTest, CtrlArrowRight2)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	568;"	kind:function	namespace:ftxui	signature:(InputTest, TypePassword)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	593;"	kind:function	namespace:ftxui	signature:(InputTest, MouseClick)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	62;"	kind:function	namespace:ftxui	signature:(InputTest, ArrowLeftRight)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	688;"	kind:function	namespace:ftxui	signature:(InputTest, MouseClickComplex)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	744;"	kind:function	namespace:ftxui	signature:(InputTest, OnEnter)
TEST	./FTXUI/src/ftxui/component/input_test.cpp	756;"	kind:function	namespace:ftxui	signature:(InputTest, InsertMode)
TEST	./FTXUI/src/ftxui/component/menu_test.cpp	105;"	kind:function	namespace:ftxui	signature:(MenuTest, DirectionsRight)
TEST	./FTXUI/src/ftxui/component/menu_test.cpp	129;"	kind:function	namespace:ftxui	signature:(MenuTest, DirectionsLeft)
TEST	./FTXUI/src/ftxui/component/menu_test.cpp	153;"	kind:function	namespace:ftxui	signature:(MenuTest, AnimationsHorizontal)
TEST	./FTXUI/src/ftxui/component/menu_test.cpp	189;"	kind:function	namespace:ftxui	signature:(MenuTest, AnimationsVertical)
TEST	./FTXUI/src/ftxui/component/menu_test.cpp	229;"	kind:function	namespace:ftxui	signature:(MenuTest, EntryIndex)
TEST	./FTXUI/src/ftxui/component/menu_test.cpp	23;"	kind:function	namespace:ftxui	signature:(MenuTest, RemoveEntries)
TEST	./FTXUI/src/ftxui/component/menu_test.cpp	249;"	kind:function	namespace:ftxui	signature:(MenuTest, MenuEntryIndex)
TEST	./FTXUI/src/ftxui/component/menu_test.cpp	54;"	kind:function	namespace:ftxui	signature:(MenuTest, DirectionDown)
TEST	./FTXUI/src/ftxui/component/menu_test.cpp	81;"	kind:function	namespace:ftxui	signature:(MenuTest, DirectionsUp)
TEST	./FTXUI/src/ftxui/component/modal_test.cpp	15;"	kind:function	namespace:ftxui	signature:(ModalTest, Basic)
TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	139;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationHome)
TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	169;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationPageDown)
TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	198;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationPageUp)
TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	20;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationArrow)
TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	227;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationEnd)
TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	259;"	kind:function	namespace:ftxui	signature:(RadioboxTest, EventSpace)
TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	279;"	kind:function	namespace:ftxui	signature:(RadioboxTest, RemoveEntries)
TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	55;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationArrowVim)
TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	89;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationTab)
TEST	./FTXUI/src/ftxui/component/receiver_test.cpp	13;"	kind:function	namespace:ftxui	signature:(Receiver, Basic)
TEST	./FTXUI/src/ftxui/component/receiver_test.cpp	33;"	kind:function	namespace:ftxui	signature:(Receiver, BasicWithThread)
TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	104;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicRightWithCustomSeparator)
TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	129;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicTop)
TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	144;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicTopWithCustomSeparator)
TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	169;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicBottom)
TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	184;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicBottomWithCustomSeparator)
TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	209;"	kind:function	namespace:ftxui	signature:(ResizableSplit, NavigationVertical)
TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	49;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicLeft)
TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	64;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicLeftWithCustomSeparator)
TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	89;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicRight)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	107;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, CtrlC_NotForced)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	34;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGTERM)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	37;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGSEGV)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	40;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGINT)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	43;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGILL)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	46;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGABRT)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	49;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGFPE)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	55;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, PostEventToNonActive)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	62;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, PostTaskToNonActive)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	67;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, CtrlC)
TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	80;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, CtrlC_Forced)
TEST	./FTXUI/src/ftxui/component/slider_test.cpp	111;"	kind:function	namespace:ftxui	signature:(SliderTest, Down)
TEST	./FTXUI/src/ftxui/component/slider_test.cpp	144;"	kind:function	namespace:ftxui	signature:(SliderTest, Up)
TEST	./FTXUI/src/ftxui/component/slider_test.cpp	176;"	kind:function	namespace:ftxui	signature:(SliderTest, Focus)
TEST	./FTXUI/src/ftxui/component/slider_test.cpp	47;"	kind:function	namespace:ftxui	signature:(SliderTest, Right)
TEST	./FTXUI/src/ftxui/component/slider_test.cpp	79;"	kind:function	namespace:ftxui	signature:(SliderTest, Left)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	122;"	kind:function	namespace:ftxui	signature:(Event, MouseLeftMoved)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	149;"	kind:function	namespace:ftxui	signature:(Event, MouseLeftClickReleased)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	175;"	kind:function	namespace:ftxui	signature:(Event, MouseReporting)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	18;"	kind:function	namespace:ftxui	signature:(Event, Character)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	197;"	kind:function	namespace:ftxui	signature:(Event, MouseMiddleClick)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	223;"	kind:function	namespace:ftxui	signature:(Event, MouseRightClick)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	249;"	kind:function	namespace:ftxui	signature:(Event, UTF8)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	41;"	kind:function	namespace:ftxui	signature:(Event, EscapeKeyWithoutWaiting)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	52;"	kind:function	namespace:ftxui	signature:(Event, EscapeKeyNotEnoughWait)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	64;"	kind:function	namespace:ftxui	signature:(Event, EscapeKeyEnoughWait)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	78;"	kind:function	namespace:ftxui	signature:(Event, EscapeFast)
TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	96;"	kind:function	namespace:ftxui	signature:(Event, MouseLeftClickPressed)
TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	118;"	kind:function	namespace:ftxui	signature:(ToggleTest, OnEnter)
TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	154;"	kind:function	namespace:ftxui	signature:(ToggleTest, RemoveEntries)
TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	18;"	kind:function	namespace:ftxui	signature:(ToggleTest, leftRightArrow)
TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	62;"	kind:function	namespace:ftxui	signature:(ToggleTest, Tab)
TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	89;"	kind:function	namespace:ftxui	signature:(ToggleTest, OnChange)
TEST	./FTXUI/src/ftxui/dom/blink_test.cpp	14;"	kind:function	namespace:ftxui	signature:(BlinkTest, Basic)
TEST	./FTXUI/src/ftxui/dom/bold_test.cpp	14;"	kind:function	namespace:ftxui	signature:(BoldTest, Basic)
TEST	./FTXUI/src/ftxui/dom/border_test.cpp	14;"	kind:function	namespace:ftxui	signature:(BorderTest, Default)
TEST	./FTXUI/src/ftxui/dom/border_test.cpp	24;"	kind:function	namespace:ftxui	signature:(BorderTest, Light)
TEST	./FTXUI/src/ftxui/dom/border_test.cpp	34;"	kind:function	namespace:ftxui	signature:(BorderTest, Double)
TEST	./FTXUI/src/ftxui/dom/border_test.cpp	44;"	kind:function	namespace:ftxui	signature:(BorderTest, Rounded)
TEST	./FTXUI/src/ftxui/dom/border_test.cpp	54;"	kind:function	namespace:ftxui	signature:(BorderTest, Heavy)
TEST	./FTXUI/src/ftxui/dom/border_test.cpp	64;"	kind:function	namespace:ftxui	signature:(BorderTest, Empty)
TEST	./FTXUI/src/ftxui/dom/border_test.cpp	74;"	kind:function	namespace:ftxui	signature:(BorderTest, Styled)
TEST	./FTXUI/src/ftxui/dom/border_test.cpp	84;"	kind:function	namespace:ftxui	signature:(BorderTest, WithPixel)
TEST	./FTXUI/src/ftxui/dom/border_test.cpp	96;"	kind:function	namespace:ftxui	signature:(BorderTest, Window)
TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	29;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldPoint)
TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	47;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldPointColor)
TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	62;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldBlock)
TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	80;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldBlockColor)
TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	95;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldText)
TEST	./FTXUI/src/ftxui/dom/color_test.cpp	15;"	kind:function	namespace:ftxui	signature:(ColorTest, Foreground)
TEST	./FTXUI/src/ftxui/dom/color_test.cpp	23;"	kind:function	namespace:ftxui	signature:(ColorTest, Background)
TEST	./FTXUI/src/ftxui/dom/dbox_test.cpp	14;"	kind:function	namespace:ftxui	signature:(DBoxTest, Basic)
TEST	./FTXUI/src/ftxui/dom/dim_test.cpp	14;"	kind:function	namespace:ftxui	signature:(DimTest, Basic)
TEST	./FTXUI/src/ftxui/dom/flexbox_helper_test.cpp	122;"	kind:function	namespace:ftxui	signature:(FlexboxHelperTest, BasicRowInversed)
TEST	./FTXUI/src/ftxui/dom/flexbox_helper_test.cpp	12;"	kind:function	namespace:ftxui	signature:(FlexboxHelperTest, BasicRow)
TEST	./FTXUI/src/ftxui/dom/flexbox_helper_test.cpp	177;"	kind:function	namespace:ftxui	signature:(FlexboxHelperTest, BasicColumnInversed)
TEST	./FTXUI/src/ftxui/dom/flexbox_helper_test.cpp	67;"	kind:function	namespace:ftxui	signature:(FlexboxHelperTest, BasicColumn)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	109;"	kind:function	namespace:ftxui	signature:(FlexboxTest, JustifyContentSpaceBetween)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	129;"	kind:function	namespace:ftxui	signature:(FlexboxTest, JustifyContentSpaceAround)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	151;"	kind:function	namespace:ftxui	signature:(FlexboxTest, JustifyContentSpaceEvenly)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	15;"	kind:function	namespace:ftxui	signature:(FlexboxTest, BasicRow)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	173;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignItemsFlexEnd)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	198;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignItemsCenter)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	223;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentFlexEnd)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	246;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentCenter)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	269;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentSpaceBetween)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	297;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentSpaceAround)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	325;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentSpaceEvenly)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	33;"	kind:function	namespace:ftxui	signature:(FlexboxTest, BasicRowInversed)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	353;"	kind:function	namespace:ftxui	signature:(FlexboxTest, GapX)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	381;"	kind:function	namespace:ftxui	signature:(FlexboxTest, GapX2)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	409;"	kind:function	namespace:ftxui	signature:(FlexboxTest, GapY)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	437;"	kind:function	namespace:ftxui	signature:(FlexboxTest, Focus)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	51;"	kind:function	namespace:ftxui	signature:(FlexboxTest, BasicColumn)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	70;"	kind:function	namespace:ftxui	signature:(FlexboxTest, BasicColumnInversed)
TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	89;"	kind:function	namespace:ftxui	signature:(FlexboxTest, JustifyContentCenter)
TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	13;"	kind:function	namespace:ftxui	signature:(GaugeTest, ZeroHorizontal)
TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	21;"	kind:function	namespace:ftxui	signature:(GaugeTest, HalfHorizontal)
TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	33;"	kind:function	namespace:ftxui	signature:(GaugeTest, OneHorizontal)
TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	41;"	kind:function	namespace:ftxui	signature:(GaugeTest, ZeroVertical)
TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	61;"	kind:function	namespace:ftxui	signature:(GaugeTest, HalfVertical)
TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	81;"	kind:function	namespace:ftxui	signature:(GaugeTest, OneVertical)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	109;"	kind:function	namespace:ftxui	signature:(GridboxTest, CenterShrink)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	133;"	kind:function	namespace:ftxui	signature:(GridboxTest, CenterShrinkColumn)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	157;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	187;"	kind:function	namespace:ftxui	signature:(GridboxTest, Vertical_NoFlex_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	215;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexGrow_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	245;"	kind:function	namespace:ftxui	signature:(GridboxTest, Vertical_FlexGrow_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	273;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_FlexGrow_NoFlex)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	29;"	kind:function	namespace:ftxui	signature:(GridboxTest, UnfilledRectangular)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	303;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_NoFlex_FlexGrow)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	333;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexGrow_NoFlex_FlexGrow)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	365;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexGrow_FlexGrow_FlexGrow)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	37;"	kind:function	namespace:ftxui	signature:(GridboxTest, DifferentSize)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	401;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexShrink_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	431;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_FlexShrink_NoFlex)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	461;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_NoFlex_FlexShrink)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	491;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexShrink_NoFlex_FlexShrink)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	520;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexShrink_FlexShrink_FlexShrink)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	551;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexGrow_NoFlex_FlewShrink)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	583;"	kind:function	namespace:ftxui	signature:(GridboxTest, MissingCells)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	601;"	kind:function	namespace:ftxui	signature:(GridboxTest, Focus)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	61;"	kind:function	namespace:ftxui	signature:(GridboxTest, CenterFlex)
TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	85;"	kind:function	namespace:ftxui	signature:(GridboxTest, CenterFlexCross)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	100;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_NoFlex_FlexGrow)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	128;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexGrow_NoFlex_FlexGrow)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	158;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexGrow_FlexGrow_FlexGrow)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	16;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	192;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexShrink_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	220;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_FlexShrink_NoFlex)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	248;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_NoFlex_FlexShrink)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	276;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexShrink_NoFlex_FlexShrink)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	303;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexShrink_FlexShrink_FlexShrink)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	332;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexGrow_NoFlex_FlewShrink)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	44;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexGrow_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	72;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_FlexGrow_NoFlex)
TEST	./FTXUI/src/ftxui/dom/hyperlink_test.cpp	13;"	kind:function	namespace:ftxui	signature:(HyperlinkTest, Basic)
TEST	./FTXUI/src/ftxui/dom/italic_test.cpp	14;"	kind:function	namespace:ftxui	signature:(ItalicTest, Basic)
TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	15;"	kind:function	namespace:ftxui	signature:(ColorTest, API_default)
TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	21;"	kind:function	namespace:ftxui	signature:(ColorTest, API_builder)
TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	37;"	kind:function	namespace:ftxui	signature:(ColorTest, API_constructor_bicolor)
TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	47;"	kind:function	namespace:ftxui	signature:(ColorTest, API_constructor_bicolor_angle)
TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	57;"	kind:function	namespace:ftxui	signature:(ColorTest, GradientForeground)
TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	73;"	kind:function	namespace:ftxui	signature:(ColorTest, GradientBackground)
TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	130;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, VerticalColorable)
TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	147;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, VerticalBackgroundColorable)
TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	164;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, VerticalFullColorable)
TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	182;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, BasicHorizontal)
TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	232;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, HorizontalColorable)
TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	247;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, HorizontalBackgroundColorable)
TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	262;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, HorizontalFullColorable)
TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	295;"	kind:function	namespace:ftxui::__anon4	signature:(ScrollIndicator, HorizontalFlexbox)
TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	57;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, BasicVertical)
TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	105;"	kind:function	namespace:ftxui	signature:(SelectionTest, SelectionOnChangeSquashedEvents)
TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	129;"	kind:function	namespace:ftxui	signature:(SelectionTest, StyleSelection)
TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	157;"	kind:function	namespace:ftxui	signature:(SelectionTest, VBoxSelection)
TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	174;"	kind:function	namespace:ftxui	signature:(SelectionTest, VBoxSaturatedSelection)
TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	192;"	kind:function	namespace:ftxui	signature:(SelectionTest, HBoxSelection)
TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	206;"	kind:function	namespace:ftxui	signature:(SelectionTest, HBoxSaturatedSelection)
TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	58;"	kind:function	namespace:ftxui	signature:(SelectionTest, DefaultSelection)
TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	70;"	kind:function	namespace:ftxui	signature:(SelectionTest, SelectionChange)
TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	112;"	kind:function	namespace:ftxui	signature:(SeparatorTest, WithPixel)
TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	14;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Default)
TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	28;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Light)
TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	42;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Dashed)
TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	56;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Double)
TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	70;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Heavy)
TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	84;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Empty)
TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	98;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Styled)
TEST	./FTXUI/src/ftxui/dom/spinner_test.cpp	13;"	kind:function	namespace:ftxui	signature:(SpinnerTest, Spinner1)
TEST	./FTXUI/src/ftxui/dom/spinner_test.cpp	20;"	kind:function	namespace:ftxui	signature:(SpinnerTest, Spinner2)
TEST	./FTXUI/src/ftxui/dom/spinner_test.cpp	27;"	kind:function	namespace:ftxui	signature:(SpinnerTest, Spinner3)
TEST	./FTXUI/src/ftxui/dom/spinner_test.cpp	34;"	kind:function	namespace:ftxui	signature:(SpinnerTest, Spinner4)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	122;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorVerticalLight)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	146;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorLight)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	14;"	kind:function	namespace:ftxui	signature:(TableTest, Empty)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	170;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorVerticalHorizontalLight)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	195;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorHorizontalVerticalLight)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	220;"	kind:function	namespace:ftxui	signature:(TableTest, BorderLight)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	244;"	kind:function	namespace:ftxui	signature:(TableTest, BorderSeparatorLight)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	269;"	kind:function	namespace:ftxui	signature:(TableTest, SelectRow)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	27;"	kind:function	namespace:ftxui	signature:(TableTest, Basic)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	293;"	kind:function	namespace:ftxui	signature:(TableTest, SelectRowNegative)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	317;"	kind:function	namespace:ftxui	signature:(TableTest, SelectColumn)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	341;"	kind:function	namespace:ftxui	signature:(TableTest, SelectColumnNegative)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	365;"	kind:function	namespace:ftxui	signature:(TableTest, CrossingBorders)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	390;"	kind:function	namespace:ftxui	signature:(TableTest, CrossingBordersLightAndDouble)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	415;"	kind:function	namespace:ftxui	signature:(TableTest, SelectColumns)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	439;"	kind:function	namespace:ftxui	signature:(TableTest, SelectRows)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	463;"	kind:function	namespace:ftxui	signature:(TableTest, SelectRectangle)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	487;"	kind:function	namespace:ftxui	signature:(TableTest, SelectColumnsNegative)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	50;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorVerticalEmpty)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	511;"	kind:function	namespace:ftxui	signature:(TableTest, SelectInverted)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	535;"	kind:function	namespace:ftxui	signature:(TableTest, ColumnFlex)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	561;"	kind:function	namespace:ftxui	signature:(TableTest, ColumnFlexCenter)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	588;"	kind:function	namespace:ftxui	signature:(TableTest, ColumnCenter)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	614;"	kind:function	namespace:ftxui	signature:(TableTest, ColumnFlexTwo)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	641;"	kind:function	namespace:ftxui	signature:(TableTest, RowFlex)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	677;"	kind:function	namespace:ftxui	signature:(TableTest, RowFlexTwo)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	714;"	kind:function	namespace:ftxui	signature:(TableTest, Merge)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	736;"	kind:function	namespace:ftxui	signature:(TableTest, Issue912)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	74;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorHorizontalEmpty)
TEST	./FTXUI/src/ftxui/dom/table_test.cpp	98;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorHorizontalLight)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	107;"	kind:function	namespace:ftxui	signature:(TextTest, CombiningCharactersWithSpace)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	14;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenHeightSmaller)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	22;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenSmaller)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	30;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenFit)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	38;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenBigger)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	46;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenBigger2)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	55;"	kind:function	namespace:ftxui	signature:(TextTest, CJK)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	67;"	kind:function	namespace:ftxui	signature:(TextTest, CJK_2)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	79;"	kind:function	namespace:ftxui	signature:(TextTest, CJK_3)
TEST	./FTXUI/src/ftxui/dom/text_test.cpp	90;"	kind:function	namespace:ftxui	signature:(TextTest, CombiningCharacters)
TEST	./FTXUI/src/ftxui/dom/underlined_test.cpp	14;"	kind:function	namespace:ftxui	signature:(UnderlinedTest, Basic)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	110;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_NoFlex_FlexGrow)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	138;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexGrow_NoFlex_FlexGrow)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	168;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexGrow_FlexGrow_FlexGrow)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	202;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexShrink_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	230;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_FlexShrink_NoFlex)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	258;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_NoFlex_FlexShrink)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	26;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	286;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexShrink_NoFlex_FlexShrink)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	313;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexShrink_FlexShrink_FlexShrink)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	342;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexGrow_NoFlex_FlewShrink)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	54;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexGrow_NoFlex_NoFlex)
TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	82;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_FlexGrow_NoFlex)
TEST	./FTXUI/src/ftxui/screen/color_test.cpp	10;"	kind:function	namespace:ftxui	signature:(ColorTest, PrintTransparent)
TEST	./FTXUI/src/ftxui/screen/color_test.cpp	16;"	kind:function	namespace:ftxui	signature:(ColorTest, PrintColor16)
TEST	./FTXUI/src/ftxui/screen/color_test.cpp	22;"	kind:function	namespace:ftxui	signature:(ColorTest, PrintColor256)
TEST	./FTXUI/src/ftxui/screen/color_test.cpp	28;"	kind:function	namespace:ftxui	signature:(ColorTest, PrintTrueCOlor)
TEST	./FTXUI/src/ftxui/screen/color_test.cpp	34;"	kind:function	namespace:ftxui	signature:(ColorTest, FallbackTo256)
TEST	./FTXUI/src/ftxui/screen/color_test.cpp	39;"	kind:function	namespace:ftxui	signature:(ColorTest, FallbackTo16)
TEST	./FTXUI/src/ftxui/screen/color_test.cpp	44;"	kind:function	namespace:ftxui	signature:(ColorTest, Litterals)
TEST	./FTXUI/src/ftxui/screen/color_test.cpp	50;"	kind:function	namespace:ftxui	signature:(ColorTest, Interpolate)
TEST	./FTXUI/src/ftxui/screen/color_test.cpp	81;"	kind:function	namespace:ftxui	signature:(ColorTest, HSV)
TEST	./FTXUI/src/ftxui/screen/string_test.cpp	105;"	kind:function	namespace:ftxui	signature:(StringTest, CellToGlyphIndex)
TEST	./FTXUI/src/ftxui/screen/string_test.cpp	11;"	kind:function	namespace:ftxui	signature:(StringTest, StringWidth)
TEST	./FTXUI/src/ftxui/screen/string_test.cpp	129;"	kind:function	namespace:ftxui	signature:(StringTest, Utf8ToWordBreakProperty)
TEST	./FTXUI/src/ftxui/screen/string_test.cpp	145;"	kind:function	namespace:ftxui	signature:(StringTest, to_string)
TEST	./FTXUI/src/ftxui/screen/string_test.cpp	156;"	kind:function	namespace:ftxui	signature:(StringTest, to_wstring)
TEST	./FTXUI/src/ftxui/screen/string_test.cpp	33;"	kind:function	namespace:ftxui	signature:(StringTest, Utf8ToGlyphs)
TEST	./FTXUI/src/ftxui/screen/string_test.cpp	51;"	kind:function	namespace:ftxui	signature:(StringTest, GlyphCount)
TEST	./FTXUI/src/ftxui/screen/string_test.cpp	68;"	kind:function	namespace:ftxui	signature:(StringTest, GlyphIterate)
TEST	./FTXUI/src/ftxui/util/ref_test.cpp	23;"	kind:function	namespace:ftxui	signature:(ConstStringListRef, Copy)
TEST	./FTXUI/src/ftxui/util/ref_test.cpp	33;"	kind:function	namespace:ftxui	signature:(ConstStringListRef, Ref)
TEST	./FTXUI/src/ftxui/util/ref_test.cpp	43;"	kind:function	namespace:ftxui	signature:(ConstStringListRef, Adapter)
TEST	./FTXUI/src/ftxui/util/ref_test.cpp	55;"	kind:function	namespace:ftxui	signature:(ConstStringListRef, UniquePtrAdapter)
Tab	./FTXUI/include/ftxui/component/component.hpp	43;"	kind:prototype	namespace:ftxui::Container	signature:(Components children, int* selector)
Tab	./FTXUI/include/ftxui/component/event.hpp	53;"	kind:member	struct:ftxui::Event	access:public
Tab	./FTXUI/src/ftxui/component/container.cpp	405;"	kind:function	namespace:ftxui::Container	signature:(Components children, int* selector)
Tab	./FTXUI/src/ftxui/component/event.cpp	304;"	kind:member	class:ftxui::Event	file:
TabContainer	./FTXUI/src/ftxui/component/container.cpp	217;"	kind:class	namespace:ftxui	file:	inherits:ContainerBase
TabReverse	./FTXUI/include/ftxui/component/event.hpp	54;"	kind:member	struct:ftxui::Event	access:public
TabReverse	./FTXUI/src/ftxui/component/event.cpp	305;"	kind:member	class:ftxui::Event	file:
Table	./FTXUI/include/ftxui/dom/table.hpp	36;"	kind:class	namespace:ftxui
Table	./FTXUI/include/ftxui/dom/table.hpp	38;"	kind:prototype	class:ftxui::Table	access:public	signature:()
Table	./FTXUI/include/ftxui/dom/table.hpp	39;"	kind:prototype	class:ftxui::Table	access:public	signature:(std::vector<std::vector<std::string>>)
Table	./FTXUI/include/ftxui/dom/table.hpp	40;"	kind:prototype	class:ftxui::Table	access:public	signature:(std::vector<std::vector<Element>>)
Table	./FTXUI/include/ftxui/dom/table.hpp	41;"	kind:prototype	class:ftxui::Table	access:public	signature:(std::initializer_list<std::vector<std::string>> init)
Table	./FTXUI/src/ftxui/dom/table.cpp	48;"	kind:function	class:ftxui::Table	signature:()
Table	./FTXUI/src/ftxui/dom/table.cpp	55;"	kind:function	class:ftxui::Table	signature:(std::vector<std::vector<std::string>> input)
Table	./FTXUI/src/ftxui/dom/table.cpp	72;"	kind:function	class:ftxui::Table	signature:(std::vector<std::vector<Element>> input)
Table	./FTXUI/src/ftxui/dom/table.cpp	79;"	kind:function	class:ftxui::Table	signature:(std::initializer_list<std::vector<std::string>> init)
TableSelection	./FTXUI/include/ftxui/dom/table.hpp	64;"	kind:class	namespace:ftxui
TakeFocus	./FTXUI/include/ftxui/component/component_base.hpp	91;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
TakeFocus	./FTXUI/src/ftxui/component/component.cpp	238;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
TerminalInputParser	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	93;"	kind:function	class:ftxui::TerminalInputParser	signature:(Sender<Task> out)
TerminalInputParser	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	18;"	kind:class	namespace:ftxui
TerminalInputParser	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	20;"	kind:prototype	class:ftxui::TerminalInputParser	access:public	signature:(Sender<Task> out)
TerminalOutput	./FTXUI/include/ftxui/component/screen_interactive.hpp	102;"	kind:member	class:ftxui::ScreenInteractive::Dimension	access:private
TerminalOutput	./FTXUI/include/ftxui/component/screen_interactive.hpp	38;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
TerminalOutput	./FTXUI/src/ftxui/component/screen_interactive.cpp	406;"	kind:function	class:ftxui::ScreenInteractive	signature:()
TestSignal	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	16;"	kind:function	namespace:ftxui::__anon59	signature:(int signal)
Text	./FTXUI/src/ftxui/component/input.cpp	184;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:(const std::string& input)
Text	./FTXUI/src/ftxui/dom/text.cpp	24;"	kind:class	namespace:ftxui::__anon21	file:	inherits:Node
Text	./FTXUI/src/ftxui/dom/text.cpp	26;"	kind:function	class:ftxui::__anon21::Text	access:public	signature:(std::string text)
TileEncoding	./FTXUI/src/ftxui/screen/screen.cpp	128;"	kind:struct	namespace:ftxui::__anon65	file:
Timeout	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	96;"	kind:function	class:ftxui::TerminalInputParser	signature:(int time)
Timeout	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	21;"	kind:prototype	class:ftxui::TerminalInputParser	access:public	signature:(int time)
ToString	./FTXUI/include/ftxui/screen/screen.hpp	34;"	kind:prototype	class:ftxui::Screen	access:public	signature:() const
ToString	./FTXUI/src/ftxui/screen/screen.cpp	415;"	kind:function	class:ftxui::Screen	signature:() const
Toggle	./FTXUI/include/ftxui/component/component.hpp	78;"	kind:prototype	namespace:ftxui	signature:(ConstStringListRef entries, int* selected)
Toggle	./FTXUI/include/ftxui/component/component_options.hpp	91;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
Toggle	./FTXUI/src/ftxui/component/component_options.cpp	155;"	kind:function	class:ftxui::MenuOption	signature:()
Toggle	./FTXUI/src/ftxui/component/menu.cpp	554;"	kind:function	namespace:ftxui	signature:(ConstStringListRef entries, int* selected)
TrackMouse	./FTXUI/include/ftxui/component/screen_interactive.hpp	41;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(bool enable = true)
TrackMouse	./FTXUI/src/ftxui/component/screen_interactive.cpp	441;"	kind:function	class:ftxui::ScreenInteractive	signature:(bool enable)
TrueColor	./FTXUI/include/ftxui/screen/color.hpp	326;"	kind:member	class:ftxui::Color::ColorType	access:private
TrueColor	./FTXUI/include/ftxui/screen/terminal.hpp	21;"	kind:enumerator	enum:ftxui::Terminal::Color
Type	./FTXUI/include/ftxui/component/event.hpp	127;"	kind:class	struct:ftxui::Event	access:private
Type	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	28;"	kind:enum	class:ftxui::TerminalInputParser	access:private
U	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
U	./FTXUI/src/ftxui/component/event.cpp	376;"	kind:member	class:ftxui::Event	file:
UNCOMPLETED	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	29;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
Underline	./FTXUI/include/ftxui/screen/screen.hpp	57;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
UnderlineBlinking	./FTXUI/include/ftxui/screen/screen.hpp	56;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
UnderlineOption	./FTXUI/include/ftxui/component/component_options.hpp	31;"	kind:struct	namespace:ftxui
Underlined	./FTXUI/src/ftxui/dom/underlined.cpp	16;"	kind:class	namespace:ftxui::__anon9	file:	inherits:NodeDecorator
Uninstall	./FTXUI/include/ftxui/component/screen_interactive.hpp	80;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
Uninstall	./FTXUI/src/ftxui/component/screen_interactive.cpp	741;"	kind:function	class:ftxui::ScreenInteractive	signature:()
Union	./FTXUI/src/ftxui/screen/box.cpp	24;"	kind:function	class:ftxui::Box	signature:(Box a, Box b)
Unknown	./FTXUI/include/ftxui/component/event.hpp	128;"	kind:member	class:ftxui::Event::Type	access:private
Unselectable	./FTXUI/src/ftxui/dom/selection.cpp	15;"	kind:class	namespace:ftxui::__anon27	file:	inherits:NodeDecorator
Up	./FTXUI/include/ftxui/dom/direction.hpp	9;"	kind:member	class:ftxui::Direction	access:private
UpdateAnimationTarget	./FTXUI/src/ftxui/component/menu.cpp	353;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
UpdateColorTarget	./FTXUI/src/ftxui/component/menu.cpp	358;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
UpdatePixelStyle	./FTXUI/src/ftxui/screen/screen.cpp	71;"	kind:function	namespace:ftxui::__anon65	signature:(const Screen* screen, std::stringstream& ss, const Pixel& prev, const Pixel& next)
UpdateUnderlineTarget	./FTXUI/src/ftxui/component/menu.cpp	416;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
UpgradeLeftRight	./FTXUI/src/ftxui/screen/screen.cpp	308;"	kind:function	namespace:ftxui::__anon65	signature:(std::string& left, std::string& right)
UpgradeTopDown	./FTXUI/src/ftxui/screen/screen.cpp	337;"	kind:function	namespace:ftxui::__anon65	signature:(std::string& top, std::string& down)
Utf8ToGlyphs	./FTXUI/include/ftxui/screen/string.hpp	23;"	kind:prototype	namespace:ftxui	signature:(const std::string& input)
Utf8ToGlyphs	./FTXUI/src/ftxui/screen/string.cpp	1357;"	kind:function	namespace:ftxui	signature:(const std::string& input)
Utf8ToWordBreakProperty	./FTXUI/src/ftxui/screen/string.cpp	1533;"	kind:function	namespace:ftxui	signature:( const std::string& input)
Utf8ToWordBreakProperty	./FTXUI/src/ftxui/screen/string_internal.hpp	61;"	kind:prototype	namespace:ftxui	signature:( const std::string& input)
V	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
V	./FTXUI/src/ftxui/component/event.cpp	377;"	kind:member	class:ftxui::Event	file:
VBox	./FTXUI/src/ftxui/dom/vbox.cpp	20;"	kind:class	namespace:ftxui::__anon40	file:	inherits:Node
VBox	./FTXUI/src/ftxui/dom/vbox.cpp	22;"	kind:function	class:ftxui::__anon40::VBox	access:public	signature:(Elements children)
VText	./FTXUI/src/ftxui/dom/text.cpp	94;"	kind:class	namespace:ftxui::__anon21	file:	inherits:Node
VText	./FTXUI/src/ftxui/dom/text.cpp	96;"	kind:function	class:ftxui::__anon21::VText	access:public	signature:(std::string text)
Vertical	./FTXUI/include/ftxui/component/component.hpp	39;"	kind:prototype	namespace:ftxui::Container	signature:(Components children)
Vertical	./FTXUI/include/ftxui/component/component.hpp	40;"	kind:prototype	namespace:ftxui::Container	signature:(Components children, int* selector)
Vertical	./FTXUI/include/ftxui/component/component_options.hpp	89;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
Vertical	./FTXUI/src/ftxui/component/component_options.cpp	110;"	kind:function	class:ftxui::MenuOption	signature:()
Vertical	./FTXUI/src/ftxui/component/container.cpp	317;"	kind:function	namespace:ftxui::Container	signature:(Components children)
Vertical	./FTXUI/src/ftxui/component/container.cpp	339;"	kind:function	namespace:ftxui::Container	signature:(Components children, int* selector)
VerticalAnimated	./FTXUI/include/ftxui/component/component_options.hpp	90;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
VerticalAnimated	./FTXUI/src/ftxui/component/component_options.cpp	132;"	kind:function	class:ftxui::MenuOption	signature:()
VerticalContainer	./FTXUI/src/ftxui/component/container.cpp	97;"	kind:class	namespace:ftxui	file:	inherits:ContainerBase
W	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
W	./FTXUI/src/ftxui/component/event.cpp	378;"	kind:member	class:ftxui::Event	file:
WIDTH	./FTXUI/include/ftxui/dom/elements.hpp	153;"	kind:enumerator	enum:ftxui::WidthOrHeight
WIN32_LEAN_AND_MEAN	./FTXUI/src/ftxui/component/screen_interactive.cpp	41;"	kind:macro	file:
WIN32_LEAN_AND_MEAN	./FTXUI/src/ftxui/screen/screen.cpp	19;"	kind:macro	file:
WIN32_LEAN_AND_MEAN	./FTXUI/src/ftxui/screen/terminal.cpp	10;"	kind:macro	file:
WSegSpace	./FTXUI/src/ftxui/screen/string_internal.hpp	57;"	kind:member	class:ftxui::WordBreakProperty	access:private
WheelDown	./FTXUI/include/ftxui/component/mouse.hpp	18;"	kind:enumerator	enum:ftxui::Mouse::Button
WheelLeft	./FTXUI/include/ftxui/component/mouse.hpp	19;"	kind:enumerator	enum:ftxui::Mouse::Button
WheelRight	./FTXUI/include/ftxui/component/mouse.hpp	20;"	kind:enumerator	enum:ftxui::Mouse::Button
WheelUp	./FTXUI/include/ftxui/component/mouse.hpp	17;"	kind:enumerator	enum:ftxui::Mouse::Button
WidthOrHeight	./FTXUI/include/ftxui/dom/elements.hpp	153;"	kind:enum	namespace:ftxui
Window	./FTXUI/include/ftxui/component/component.hpp	138;"	kind:prototype	namespace:ftxui	signature:(WindowOptions option)
Window	./FTXUI/src/ftxui/component/window.cpp	312;"	kind:function	namespace:ftxui	signature:(WindowOptions option)
WindowImpl	./FTXUI/src/ftxui/component/window.cpp	117;"	kind:class	namespace:ftxui::__anon54	file:	inherits:ComponentBase,WindowOptions
WindowImpl	./FTXUI/src/ftxui/component/window.cpp	119;"	kind:function	class:ftxui::__anon54::WindowImpl	access:public	signature:(WindowOptions option)
WindowOptions	./FTXUI/include/ftxui/component/component_options.hpp	249;"	kind:struct	namespace:ftxui
WindowRenderState	./FTXUI/include/ftxui/component/component_options.hpp	235;"	kind:struct	namespace:ftxui
WindowsEmulateVT100Terminal	./FTXUI/src/ftxui/screen/screen.cpp	48;"	kind:function	namespace:ftxui::__anon65	signature:()
WithRestoredIO	./FTXUI/include/ftxui/component/screen_interactive.hpp	61;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(Closure)
WithRestoredIO	./FTXUI/src/ftxui/component/screen_interactive.cpp	560;"	kind:function	class:ftxui::ScreenInteractive	signature:(Closure fn)
WordBreakProperty	./FTXUI/src/ftxui/screen/string_internal.hpp	40;"	kind:class	namespace:ftxui	inherits:int8_t
WordBreakPropertyInterval	./FTXUI/src/ftxui/screen/string.cpp	75;"	kind:struct	namespace:__anon64	file:
Wrap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	31;"	kind:class	struct:ftxui::FlexboxConfig	access:public
Wrap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	33;"	kind:member	class:ftxui::FlexboxConfig::Wrap	access:private
Wrap	./FTXUI/src/ftxui/dom/table.cpp	31;"	kind:function	namespace:ftxui::__anon29	signature:(int input, int modulo)
WrapInversed	./FTXUI/include/ftxui/dom/flexbox_config.hpp	34;"	kind:member	class:ftxui::FlexboxConfig::Wrap	access:private
X	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
X	./FTXUI/src/ftxui/component/event.cpp	379;"	kind:member	class:ftxui::Event	file:
XY	./FTXUI/include/ftxui/dom/canvas.hpp	125;"	kind:struct	struct:ftxui::Canvas	access:private
XYHash	./FTXUI/include/ftxui/dom/canvas.hpp	133;"	kind:struct	struct:ftxui::Canvas	access:private
Y	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
Y	./FTXUI/src/ftxui/component/event.cpp	380;"	kind:member	class:ftxui::Event	file:
Z	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
Z	./FTXUI/src/ftxui/component/event.cpp	381;"	kind:member	class:ftxui::Event	file:
ZWJ	./FTXUI/src/ftxui/screen/string_internal.hpp	58;"	kind:member	class:ftxui::WordBreakProperty	access:private
__anon56::GeneratorAnimatedColorOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	55;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
__anon56::GeneratorAnimatedColorsOptions	./FTXUI/src/ftxui/component/component_fuzzer.cpp	65;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
__anon56::GeneratorBool	./FTXUI/src/ftxui/component/component_fuzzer.cpp	12;"	kind:function	namespace:__anon56	signature:(const char*& data, size_t& size)
__anon56::GeneratorButtonOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	73;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
__anon56::GeneratorColor	./FTXUI/src/ftxui/component/component_fuzzer.cpp	50;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
__anon56::GeneratorComponent	./FTXUI/src/ftxui/component/component_fuzzer.cpp	112;"	kind:function	namespace:__anon56	signature:(const char*& data, size_t& size, int depth)
__anon56::GeneratorComponents	./FTXUI/src/ftxui/component/component_fuzzer.cpp	110;"	kind:prototype	namespace:__anon56	file:	signature:(const char*& data, size_t& size, int depth)
__anon56::GeneratorComponents	./FTXUI/src/ftxui/component/component_fuzzer.cpp	182;"	kind:function	namespace:__anon56	signature:(const char*& data, size_t& size, int depth)
__anon56::GeneratorInt	./FTXUI/src/ftxui/component/component_fuzzer.cpp	41;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
__anon56::GeneratorMenuEntryOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	92;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
__anon56::GeneratorMenuOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	98;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
__anon56::GeneratorString	./FTXUI/src/ftxui/component/component_fuzzer.cpp	23;"	kind:function	namespace:__anon56	signature:(const char*& data, size_t& size)
__anon56::GeneratorUnderlineOption	./FTXUI/src/ftxui/component/component_fuzzer.cpp	79;"	kind:function	namespace:__anon56	signature:(const char* data, size_t size)
__anon56::g_bool	./FTXUI/src/ftxui/component/component_fuzzer.cpp	106;"	kind:member	namespace:__anon56	file:
__anon56::g_int	./FTXUI/src/ftxui/component/component_fuzzer.cpp	107;"	kind:member	namespace:__anon56	file:
__anon56::g_list	./FTXUI/src/ftxui/component/component_fuzzer.cpp	108;"	kind:member	namespace:__anon56	file:
__anon64::Bisearch	./FTXUI/src/ftxui/screen/string.cpp	1105;"	kind:function	namespace:__anon64	signature:(uint32_t ucs, const std::array<Interval, N>& table)
__anon64::Bisearch	./FTXUI/src/ftxui/screen/string.cpp	1128;"	kind:function	namespace:__anon64	signature:(uint32_t ucs, const std::array<C, N>& table, C* out)
__anon64::Interval	./FTXUI/src/ftxui/screen/string.cpp	26;"	kind:struct	namespace:__anon64	file:
__anon64::Interval::first	./FTXUI/src/ftxui/screen/string.cpp	27;"	kind:member	struct:__anon64::Interval	file:	access:public
__anon64::Interval::last	./FTXUI/src/ftxui/screen/string.cpp	28;"	kind:member	struct:__anon64::Interval	file:	access:public
__anon64::WordBreakPropertyInterval	./FTXUI/src/ftxui/screen/string.cpp	75;"	kind:struct	namespace:__anon64	file:
__anon64::WordBreakPropertyInterval::first	./FTXUI/src/ftxui/screen/string.cpp	76;"	kind:member	struct:__anon64::WordBreakPropertyInterval	file:	access:public
__anon64::WordBreakPropertyInterval::last	./FTXUI/src/ftxui/screen/string.cpp	77;"	kind:member	struct:__anon64::WordBreakPropertyInterval	file:	access:public
__anon64::WordBreakPropertyInterval::property	./FTXUI/src/ftxui/screen/string.cpp	78;"	kind:member	struct:__anon64::WordBreakPropertyInterval	file:	access:public
__anon64::codepoint_width	./FTXUI/src/ftxui/screen/string.cpp	1150;"	kind:function	namespace:__anon64	signature:(uint32_t ucs)
__anon64::g_full_width_characters	./FTXUI/src/ftxui/screen/string.cpp	32;"	kind:member	namespace:__anon64	file:
__anon64::g_word_break_intervals	./FTXUI/src/ftxui/screen/string.cpp	83;"	kind:member	namespace:__anon64	file:
_rgb	./FTXUI/include/ftxui/screen/color.hpp	339;"	kind:prototype	namespace:ftxui::literals	signature:(unsigned long long int combined)
_rgb	./FTXUI/src/ftxui/screen/color.cpp	289;"	kind:function	namespace:ftxui::literals	signature:(unsigned long long int combined)
a	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
a	./FTXUI/src/ftxui/component/event.cpp	329;"	kind:member	class:ftxui::Event	file:
active	./FTXUI/include/ftxui/component/component_options.hpp	238;"	kind:member	struct:ftxui::WindowRenderState	access:public
active	./FTXUI/include/ftxui/component/component_options.hpp	26;"	kind:member	struct:ftxui::EntryState	access:public
active	./FTXUI/include/ftxui/component/component_options.hpp	65;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
align_content	./FTXUI/include/ftxui/dom/flexbox_config.hpp	93;"	kind:member	struct:ftxui::FlexboxConfig	access:public
align_items	./FTXUI/include/ftxui/dom/flexbox_config.hpp	77;"	kind:member	struct:ftxui::FlexboxConfig	access:public
align_right	./FTXUI/include/ftxui/dom/elements.hpp	188;"	kind:prototype	namespace:ftxui	signature:(Element)
align_right	./FTXUI/src/ftxui/dom/composite_decorator.cpp	39;"	kind:function	namespace:ftxui	signature:(Element child)
alpha_	./FTXUI/include/ftxui/screen/color.hpp	332;"	kind:member	class:ftxui::Color	access:private
angle	./FTXUI/include/ftxui/dom/linear_gradient.hpp	31;"	kind:member	struct:ftxui::LinearGradient	access:public
angle	./FTXUI/src/ftxui/dom/linear_gradient.cpp	23;"	kind:member	struct:ftxui::__anon17::LinearGradientNormalized	file:	access:public
animated_colors	./FTXUI/include/ftxui/component/component_options.hpp	130;"	kind:member	struct:ftxui::ButtonOption	access:public
animated_colors	./FTXUI/include/ftxui/component/component_options.hpp	80;"	kind:member	struct:ftxui::MenuEntryOption	access:public
animation_background_	./FTXUI/src/ftxui/component/button.cpp	143;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
animation_background_	./FTXUI/src/ftxui/component/menu.cpp	479;"	kind:member	class:ftxui::MenuBase	file:	access:protected
animation_foreground_	./FTXUI/src/ftxui/component/button.cpp	144;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
animation_foreground_	./FTXUI/src/ftxui/component/menu.cpp	480;"	kind:member	class:ftxui::MenuBase	file:	access:protected
animation_listener_	./FTXUI/include/ftxui/component/screen_interactive.hpp	121;"	kind:member	class:ftxui::ScreenInteractive	access:private
animation_requested_	./FTXUI/include/ftxui/component/screen_interactive.hpp	122;"	kind:member	class:ftxui::ScreenInteractive	access:private
animator_background_	./FTXUI/src/ftxui/component/button.cpp	145;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
animator_background_	./FTXUI/src/ftxui/component/menu.cpp	477;"	kind:member	class:ftxui::MenuBase	file:	access:protected
animator_first_	./FTXUI/src/ftxui/component/menu.cpp	475;"	kind:member	class:ftxui::MenuBase	file:	access:protected
animator_foreground_	./FTXUI/src/ftxui/component/button.cpp	147;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
animator_foreground_	./FTXUI/src/ftxui/component/menu.cpp	478;"	kind:member	class:ftxui::MenuBase	file:	access:protected
animator_second_	./FTXUI/src/ftxui/component/menu.cpp	476;"	kind:member	class:ftxui::MenuBase	file:	access:protected
asked_	./FTXUI/src/ftxui/dom/flexbox.cpp	222;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
at	./FTXUI/include/ftxui/screen/image.hpp	24;"	kind:prototype	class:ftxui::Image	access:public	signature:(int x, int y)
at	./FTXUI/include/ftxui/screen/image.hpp	25;"	kind:prototype	class:ftxui::Image	access:public	signature:(int x, int y) const
at	./FTXUI/src/ftxui/screen/image.cpp	29;"	kind:function	class:ftxui::Image	signature:(int x, int y)
at	./FTXUI/src/ftxui/screen/image.cpp	36;"	kind:function	class:ftxui::Image	signature:(int x, int y) const
automerge	./FTXUI/include/ftxui/dom/elements.hpp	114;"	kind:prototype	namespace:ftxui	signature:(Element child)
automerge	./FTXUI/include/ftxui/screen/pixel.hpp	36;"	kind:member	struct:ftxui::Pixel	access:public
automerge	./FTXUI/src/ftxui/dom/automerge.cpp	17;"	kind:function	namespace:ftxui	signature:(Element child)
b	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
b	./FTXUI/src/ftxui/component/event.cpp	330;"	kind:member	class:ftxui::Event	file:
back	./FTXUI/include/ftxui/component/component_options.hpp	212;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
background	./FTXUI/include/ftxui/component/component_options.hpp	71;"	kind:member	struct:ftxui::AnimatedColorsOption	access:public
background_color	./FTXUI/include/ftxui/screen/pixel.hpp	48;"	kind:member	struct:ftxui::Pixel	access:public
background_color_	./FTXUI/src/ftxui/dom/linear_gradient.cpp	176;"	kind:member	class:ftxui::__anon17::LinearGradientColor	file:	access:private
bgcolor	./FTXUI/include/ftxui/dom/elements.hpp	105;"	kind:prototype	namespace:ftxui	signature:(Color)
bgcolor	./FTXUI/include/ftxui/dom/elements.hpp	107;"	kind:prototype	namespace:ftxui	signature:(const LinearGradient&)
bgcolor	./FTXUI/include/ftxui/dom/elements.hpp	109;"	kind:prototype	namespace:ftxui	signature:(Color, Element)
bgcolor	./FTXUI/include/ftxui/dom/elements.hpp	111;"	kind:prototype	namespace:ftxui	signature:(const LinearGradient&, Element)
bgcolor	./FTXUI/src/ftxui/dom/color.cpp	124;"	kind:function	namespace:ftxui	signature:(Color color)
bgcolor	./FTXUI/src/ftxui/dom/color.cpp	96;"	kind:function	namespace:ftxui	signature:(Color color, Element child)
bgcolor	./FTXUI/src/ftxui/dom/linear_gradient.cpp	267;"	kind:function	namespace:ftxui	signature:(const LinearGradient& gradient, Element child)
bgcolor	./FTXUI/src/ftxui/dom/linear_gradient.cpp	297;"	kind:function	namespace:ftxui	signature:(const LinearGradient& gradient)
blink	./FTXUI/include/ftxui/dom/elements.hpp	102;"	kind:prototype	namespace:ftxui	signature:(Element)
blink	./FTXUI/include/ftxui/screen/pixel.hpp	28;"	kind:member	struct:ftxui::Pixel	access:public
blink	./FTXUI/src/ftxui/dom/blink.cpp	33;"	kind:function	namespace:ftxui	signature:(Element child)
blocks	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	34;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
blocks	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	42;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
blue	./FTXUI/include/ftxui/screen/color_info.hpp	18;"	kind:member	struct:ftxui::ColorInfo	access:public
blue_	./FTXUI/include/ftxui/screen/color.hpp	331;"	kind:member	class:ftxui::Color	access:private
bold	./FTXUI/include/ftxui/dom/elements.hpp	96;"	kind:prototype	namespace:ftxui	signature:(Element)
bold	./FTXUI/include/ftxui/screen/pixel.hpp	29;"	kind:member	struct:ftxui::Pixel	access:public
bold	./FTXUI/src/ftxui/dom/bold.cpp	33;"	kind:function	namespace:ftxui	signature:(Element child)
border	./FTXUI/include/ftxui/dom/elements.hpp	71;"	kind:prototype	namespace:ftxui	signature:(Element)
border	./FTXUI/src/ftxui/dom/border.cpp	227;"	kind:function	namespace:ftxui	signature:(Element child)
borderDashed	./FTXUI/include/ftxui/dom/elements.hpp	73;"	kind:prototype	namespace:ftxui	signature:(Element)
borderDashed	./FTXUI/src/ftxui/dom/border.cpp	300;"	kind:function	namespace:ftxui	signature:(Element child)
borderDouble	./FTXUI/include/ftxui/dom/elements.hpp	75;"	kind:prototype	namespace:ftxui	signature:(Element)
borderDouble	./FTXUI/src/ftxui/dom/border.cpp	405;"	kind:function	namespace:ftxui	signature:(Element child)
borderEmpty	./FTXUI/include/ftxui/dom/elements.hpp	77;"	kind:prototype	namespace:ftxui	signature:(Element)
borderEmpty	./FTXUI/src/ftxui/dom/border.cpp	475;"	kind:function	namespace:ftxui	signature:(Element child)
borderHeavy	./FTXUI/include/ftxui/dom/elements.hpp	74;"	kind:prototype	namespace:ftxui	signature:(Element)
borderHeavy	./FTXUI/src/ftxui/dom/border.cpp	370;"	kind:function	namespace:ftxui	signature:(Element child)
borderLight	./FTXUI/include/ftxui/dom/elements.hpp	72;"	kind:prototype	namespace:ftxui	signature:(Element)
borderLight	./FTXUI/src/ftxui/dom/border.cpp	335;"	kind:function	namespace:ftxui	signature:(Element child)
borderRounded	./FTXUI/include/ftxui/dom/elements.hpp	76;"	kind:prototype	namespace:ftxui	signature:(Element)
borderRounded	./FTXUI/src/ftxui/dom/border.cpp	440;"	kind:function	namespace:ftxui	signature:(Element child)
borderStyled	./FTXUI/include/ftxui/dom/elements.hpp	78;"	kind:prototype	namespace:ftxui	signature:(BorderStyle)
borderStyled	./FTXUI/include/ftxui/dom/elements.hpp	79;"	kind:prototype	namespace:ftxui	signature:(BorderStyle, Color)
borderStyled	./FTXUI/include/ftxui/dom/elements.hpp	80;"	kind:prototype	namespace:ftxui	signature:(Color)
borderStyled	./FTXUI/src/ftxui/dom/border.cpp	243;"	kind:function	namespace:ftxui	signature:(BorderStyle style)
borderStyled	./FTXUI/src/ftxui/dom/border.cpp	252;"	kind:function	namespace:ftxui	signature:(Color foreground_color)
borderStyled	./FTXUI/src/ftxui/dom/border.cpp	262;"	kind:function	namespace:ftxui	signature:(BorderStyle style, Color foreground_color)
borderWith	./FTXUI/include/ftxui/dom/elements.hpp	81;"	kind:prototype	namespace:ftxui	signature:(const Pixel&)
borderWith	./FTXUI/src/ftxui/dom/border.cpp	234;"	kind:function	namespace:ftxui	signature:(const Pixel& pixel)
box	./FTXUI/include/ftxui/dom/requirement.hpp	27;"	kind:member	struct:ftxui::Requirement::Focused	access:public
box_	./FTXUI/include/ftxui/dom/node.hpp	67;"	kind:member	class:ftxui::Node	access:protected
box_	./FTXUI/include/ftxui/dom/selection.hpp	38;"	kind:member	class:ftxui::Selection	access:private
box_	./FTXUI/src/ftxui/component/button.cpp	141;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
box_	./FTXUI/src/ftxui/component/checkbox.cpp	82;"	kind:member	class:ftxui::__anon57::CheckboxBase	file:	access:private
box_	./FTXUI/src/ftxui/component/container.cpp	178;"	kind:member	class:ftxui::VerticalContainer	file:	access:public
box_	./FTXUI/src/ftxui/component/input.cpp	542;"	kind:member	class:ftxui::__anon58::InputBase	file:	access:private
box_	./FTXUI/src/ftxui/component/menu.cpp	470;"	kind:member	class:ftxui::MenuBase	file:	access:protected
box_	./FTXUI/src/ftxui/component/radiobox.cpp	169;"	kind:member	class:ftxui::__anon55::RadioboxBase	file:	access:private
box_	./FTXUI/src/ftxui/component/resizable_split.cpp	156;"	kind:member	class:ftxui::__anon49::ResizableSplitBase	file:	access:private
box_	./FTXUI/src/ftxui/component/slider.cpp	261;"	kind:member	class:ftxui::__anon50::SliderWithLabel	file:	access:private
box_	./FTXUI/src/ftxui/component/window.cpp	263;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
box_window_	./FTXUI/src/ftxui/component/window.cpp	264;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
boxes_	./FTXUI/src/ftxui/component/menu.cpp	469;"	kind:member	class:ftxui::MenuBase	file:	access:protected
boxes_	./FTXUI/src/ftxui/component/radiobox.cpp	168;"	kind:member	class:ftxui::__anon55::RadioboxBase	file:	access:private
button	./FTXUI/include/ftxui/component/mouse.hpp	30;"	kind:member	struct:ftxui::Mouse	access:public
c	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
c	./FTXUI/src/ftxui/component/event.cpp	331;"	kind:member	class:ftxui::Event	file:
callback_	./FTXUI/src/ftxui/component/screen_interactive.cpp	335;"	kind:member	class:ftxui::__anon48::CapturedMouseImpl	file:	access:private
canvas	./FTXUI/include/ftxui/dom/elements.hpp	91;"	kind:prototype	namespace:ftxui	signature:(ConstRef<Canvas>)
canvas	./FTXUI/include/ftxui/dom/elements.hpp	92;"	kind:prototype	namespace:ftxui	signature:(int width, int height, std::function<void(Canvas&)>)
canvas	./FTXUI/include/ftxui/dom/elements.hpp	93;"	kind:prototype	namespace:ftxui	signature:(std::function<void(Canvas&)>)
canvas	./FTXUI/src/ftxui/dom/canvas.cpp	884;"	kind:prototype	class:ftxui::__anon35::CanvasNodeBase	file:	access:public	implementation:pure virtual	signature:()
canvas	./FTXUI/src/ftxui/dom/canvas.cpp	891;"	kind:function	namespace:ftxui	signature:(ConstRef<Canvas> canvas)
canvas	./FTXUI/src/ftxui/dom/canvas.cpp	908;"	kind:function	namespace:ftxui	signature:(int width, int height, std::function<void(Canvas&)> fn)
canvas	./FTXUI/src/ftxui/dom/canvas.cpp	938;"	kind:function	namespace:ftxui	signature:(std::function<void(Canvas&)> fn)
captured_mouse_	./FTXUI/src/ftxui/component/resizable_split.cpp	154;"	kind:member	class:ftxui::__anon49::ResizableSplitBase	file:	access:private
captured_mouse_	./FTXUI/src/ftxui/component/slider.cpp	209;"	kind:member	class:ftxui::__anon50::SliderBase	file:	access:private
captured_mouse_	./FTXUI/src/ftxui/component/window.cpp	266;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
cell	./FTXUI/src/ftxui/dom/gridbox_test.cpp	24;"	kind:function	namespace:ftxui::__anon30	signature:(const char* t)
center	./FTXUI/include/ftxui/dom/elements.hpp	187;"	kind:prototype	namespace:ftxui	signature:(Element)
center	./FTXUI/src/ftxui/dom/composite_decorator.cpp	31;"	kind:function	namespace:ftxui	signature:(Element child)
character	./FTXUI/include/ftxui/component/event.hpp	105;"	kind:function	struct:ftxui::Event	access:public	signature:() const
character	./FTXUI/include/ftxui/screen/pixel.hpp	45;"	kind:member	struct:ftxui::Pixel	access:public
charset	./FTXUI/src/ftxui/dom/graph.cpp	20;"	kind:member	namespace:ftxui::__anon25	file:
charset	./FTXUI/src/ftxui/dom/table.cpp	22;"	kind:member	namespace:ftxui::__anon29	file:
charset_	./FTXUI/src/ftxui/dom/border.cpp	45;"	kind:member	class:ftxui::__anon38::Border	file:	access:public
charset_horizontal	./FTXUI/src/ftxui/dom/gauge.cpp	18;"	kind:member	namespace:ftxui::__anon24	file:
charset_vertical	./FTXUI/src/ftxui/dom/gauge.cpp	31;"	kind:member	namespace:ftxui::__anon24	file:
charsets	./FTXUI/src/ftxui/dom/separator.cpp	23;"	kind:member	namespace:ftxui::__anon8	file:
checkbox	./FTXUI/include/ftxui/component/component_options.hpp	274;"	kind:member	struct:ftxui::DropdownOption	access:public
checked	./FTXUI/include/ftxui/component/component_options.hpp	141;"	kind:member	struct:ftxui::CheckboxOption	access:public
children_	./FTXUI/include/ftxui/component/component_base.hpp	96;"	kind:member	class:ftxui::ComponentBase	access:protected
children_	./FTXUI/include/ftxui/dom/node.hpp	65;"	kind:member	class:ftxui::Node	access:protected
clamp	./FTXUI/src/ftxui/screen/util.hpp	11;"	kind:function	namespace:ftxui::util	signature:(const T& v, const T& lo, const T& hi)
clear_under	./FTXUI/include/ftxui/dom/elements.hpp	182;"	kind:prototype	namespace:ftxui	signature:(Element element)
clear_under	./FTXUI/src/ftxui/dom/clear_under.cpp	38;"	kind:function	namespace:ftxui	signature:(Element element)
codepoint_width	./FTXUI/src/ftxui/screen/string.cpp	1150;"	kind:function	namespace:__anon64	signature:(uint32_t ucs)
color	./FTXUI/include/ftxui/dom/elements.hpp	104;"	kind:prototype	namespace:ftxui	signature:(Color)
color	./FTXUI/include/ftxui/dom/elements.hpp	106;"	kind:prototype	namespace:ftxui	signature:(const LinearGradient&)
color	./FTXUI/include/ftxui/dom/elements.hpp	108;"	kind:prototype	namespace:ftxui	signature:(Color, Element)
color	./FTXUI/include/ftxui/dom/elements.hpp	110;"	kind:prototype	namespace:ftxui	signature:(const LinearGradient&, Element)
color	./FTXUI/include/ftxui/dom/linear_gradient.hpp	33;"	kind:member	struct:ftxui::LinearGradient::Stop	access:public
color	./FTXUI/src/ftxui/dom/color.cpp	110;"	kind:function	namespace:ftxui	signature:(Color c)
color	./FTXUI/src/ftxui/dom/color.cpp	81;"	kind:function	namespace:ftxui	signature:(Color color, Element child)
color	./FTXUI/src/ftxui/dom/linear_gradient.cpp	251;"	kind:function	namespace:ftxui	signature:(const LinearGradient& gradient, Element child)
color	./FTXUI/src/ftxui/dom/linear_gradient.cpp	282;"	kind:function	namespace:ftxui	signature:(const LinearGradient& gradient)
color_	./FTXUI/src/ftxui/component/window.cpp	87;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
color_	./FTXUI/src/ftxui/dom/color.cpp	39;"	kind:member	class:ftxui::__anon12::BgColor	file:	access:public
color_	./FTXUI/src/ftxui/dom/color.cpp	65;"	kind:member	class:ftxui::__anon12::FgColor	file:	access:public
color_active	./FTXUI/include/ftxui/component/component_options.hpp	229;"	kind:member	struct:ftxui::SliderOption	access:public
color_active	./FTXUI/include/ftxui/component/component_options.hpp	34;"	kind:member	struct:ftxui::UnderlineOption	access:public
color_inactive	./FTXUI/include/ftxui/component/component_options.hpp	230;"	kind:member	struct:ftxui::SliderOption	access:public
color_inactive	./FTXUI/include/ftxui/component/component_options.hpp	35;"	kind:member	struct:ftxui::UnderlineOption	access:public
colors	./FTXUI/src/ftxui/dom/linear_gradient.cpp	24;"	kind:member	struct:ftxui::__anon17::LinearGradientNormalized	file:	access:public
component_	./FTXUI/include/ftxui/component/loop.hpp	36;"	kind:member	class:ftxui::Loop	access:private
component_active	./FTXUI/include/ftxui/dom/requirement.hpp	32;"	kind:member	struct:ftxui::Requirement::Focused	access:public
compose	./FTXUI/src/ftxui/dom/util.cpp	19;"	kind:function	namespace:ftxui::__anon22	signature:(Decorator a, Decorator b)
config	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	44;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
config_	./FTXUI/src/ftxui/dom/flexbox.cpp	224;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
config_normalized_	./FTXUI/src/ftxui/dom/flexbox.cpp	225;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
constraint_	./FTXUI/src/ftxui/dom/size.cpp	78;"	kind:member	class:ftxui::__anon10::Size	file:	access:private
content	./FTXUI/include/ftxui/component/component_options.hpp	171;"	kind:member	struct:ftxui::InputOption	access:public
content	./FTXUI/include/ftxui/dom/canvas.hpp	122;"	kind:member	struct:ftxui::Canvas::Cell	access:public
control	./FTXUI/include/ftxui/component/mouse.hpp	38;"	kind:member	struct:ftxui::Mouse	access:public
current_	./FTXUI/include/ftxui/component/animation.hpp	108;"	kind:member	class:ftxui::animation::Animator	access:private
cursor	./FTXUI/include/ftxui/component/event.hpp	143;"	kind:member	union:ftxui::Event::__anon1	typeref:struct:ftxui::Event::__anon1::Cursor	access:public
cursor	./FTXUI/include/ftxui/screen/screen.hpp	64;"	kind:function	class:ftxui::Screen	access:public	signature:() const
cursor_	./FTXUI/include/ftxui/screen/screen.hpp	77;"	kind:member	class:ftxui::Screen	access:protected
cursor_box_	./FTXUI/src/ftxui/component/input.cpp	543;"	kind:member	class:ftxui::__anon58::InputBase	file:	access:private
cursor_position	./FTXUI/include/ftxui/component/component_options.hpp	188;"	kind:member	struct:ftxui::InputOption	access:public
cursor_reset_shape_	./FTXUI/include/ftxui/component/screen_interactive.hpp	137;"	kind:member	class:ftxui::ScreenInteractive	access:private
cursor_shape	./FTXUI/include/ftxui/component/event.hpp	116;"	kind:function	struct:ftxui::Event	access:public	signature:() const
cursor_shape	./FTXUI/include/ftxui/component/event.hpp	144;"	kind:member	union:ftxui::Event::__anon1	access:public
cursor_shape	./FTXUI/include/ftxui/dom/requirement.hpp	29;"	kind:member	struct:ftxui::Requirement::Focused	access:public
cursor_shape	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	48;"	kind:member	union:ftxui::TerminalInputParser::Output::__anon60	access:public
cursor_x	./FTXUI/include/ftxui/component/event.hpp	112;"	kind:function	struct:ftxui::Event	access:public	signature:() const
cursor_x_	./FTXUI/include/ftxui/component/screen_interactive.hpp	125;"	kind:member	class:ftxui::ScreenInteractive	access:private
cursor_y	./FTXUI/include/ftxui/component/event.hpp	113;"	kind:function	struct:ftxui::Event	access:public	signature:() const
cursor_y_	./FTXUI/include/ftxui/component/screen_interactive.hpp	126;"	kind:member	class:ftxui::ScreenInteractive	access:private
d	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
d	./FTXUI/src/ftxui/component/event.cpp	332;"	kind:member	class:ftxui::Event	file:
data_	./FTXUI/include/ftxui/component/event.hpp	145;"	kind:member	struct:ftxui::Event	typeref:union:ftxui::Event::__anon1	access:private
dbox	./FTXUI/include/ftxui/dom/elements.hpp	127;"	kind:prototype	namespace:ftxui	signature:(Elements)
dbox	./FTXUI/src/ftxui/dom/dbox.cpp	108;"	kind:function	namespace:ftxui	signature:(Elements children_)
dev_null_pixel	./FTXUI/src/ftxui/screen/image.cpp	14;"	kind:function	namespace:ftxui::__anon63	signature:()
dim	./FTXUI/include/ftxui/dom/elements.hpp	97;"	kind:prototype	namespace:ftxui	signature:(Element)
dim	./FTXUI/include/ftxui/screen/pixel.hpp	30;"	kind:member	struct:ftxui::Pixel	access:public
dim	./FTXUI/src/ftxui/dom/dim.cpp	33;"	kind:function	namespace:ftxui	signature:(Element child)
dim_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	27;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
dim_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	37;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
dim_x_	./FTXUI/include/ftxui/dom/table.hpp	60;"	kind:member	class:ftxui::Table	access:private
dim_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	28;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
dim_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	38;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
dim_y_	./FTXUI/include/ftxui/dom/table.hpp	61;"	kind:member	class:ftxui::Table	access:private
dimension_	./FTXUI/include/ftxui/component/screen_interactive.hpp	104;"	kind:member	class:ftxui::ScreenInteractive	access:private
dimx	./FTXUI/include/ftxui/screen/image.hpp	32;"	kind:function	class:ftxui::Image	access:public	signature:() const
dimx	./FTXUI/include/ftxui/screen/terminal.hpp	9;"	kind:member	struct:ftxui::Dimensions	access:public
dimx_	./FTXUI/include/ftxui/screen/image.hpp	41;"	kind:member	class:ftxui::Image	access:protected
dimx_	./FTXUI/src/ftxui/screen/image.cpp	22;"	kind:prototype	namespace:ftxui	file:	signature:(dimx)
dimy	./FTXUI/include/ftxui/screen/image.hpp	33;"	kind:function	class:ftxui::Image	access:public	signature:() const
dimy	./FTXUI/include/ftxui/screen/terminal.hpp	10;"	kind:member	struct:ftxui::Dimensions	access:public
dimy_	./FTXUI/include/ftxui/screen/image.hpp	42;"	kind:member	class:ftxui::Image	access:protected
dimy_	./FTXUI/src/ftxui/screen/image.cpp	23;"	kind:prototype	namespace:ftxui	file:	signature:(dimy)
direction	./FTXUI/include/ftxui/component/component_options.hpp	213;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
direction	./FTXUI/include/ftxui/component/component_options.hpp	228;"	kind:member	struct:ftxui::SliderOption	access:public
direction	./FTXUI/include/ftxui/component/component_options.hpp	99;"	kind:member	struct:ftxui::MenuOption	access:public
direction	./FTXUI/include/ftxui/dom/flexbox_config.hpp	27;"	kind:member	struct:ftxui::FlexboxConfig	access:public
direction_	./FTXUI/src/ftxui/dom/gauge.cpp	159;"	kind:member	class:ftxui::__anon24::Gauge	file:	access:private
direction_	./FTXUI/src/ftxui/dom/size.cpp	77;"	kind:member	class:ftxui::__anon10::Size	file:	access:private
down	./FTXUI/src/ftxui/screen/screen.cpp	132;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
drag	./FTXUI/include/ftxui/component/component_options.hpp	239;"	kind:member	struct:ftxui::WindowRenderState	access:public
drag_	./FTXUI/src/ftxui/component/window.cpp	273;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
drag_start_x	./FTXUI/src/ftxui/component/window.cpp	267;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
drag_start_y	./FTXUI/src/ftxui/component/window.cpp	268;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
duration	./FTXUI/include/ftxui/component/animation.hpp	28;"	kind:function	class:ftxui::animation::Params	access:public	signature:() const
duration	./FTXUI/include/ftxui/component/component_options.hpp	66;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
duration_	./FTXUI/include/ftxui/component/animation.hpp	106;"	kind:member	class:ftxui::animation::Animator	access:private
duration_	./FTXUI/include/ftxui/component/animation.hpp	31;"	kind:member	class:ftxui::animation::Params	access:private
e	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
e	./FTXUI/src/ftxui/component/event.cpp	333;"	kind:member	class:ftxui::Event	file:
easing_function_	./FTXUI/include/ftxui/component/animation.hpp	107;"	kind:member	class:ftxui::animation::Animator	access:private
element	./FTXUI/include/ftxui/component/component_options.hpp	153;"	kind:member	struct:ftxui::InputState	access:public
elements	./FTXUI/src/ftxui/dom/spinner.cpp	15;"	kind:member	namespace:ftxui::__anon23	file:
elements_	./FTXUI/include/ftxui/dom/table.hpp	57;"	kind:member	class:ftxui::Table	access:private
elements_infix	./FTXUI/include/ftxui/component/component_options.hpp	101;"	kind:member	struct:ftxui::MenuOption	access:public
elements_postfix	./FTXUI/include/ftxui/component/component_options.hpp	102;"	kind:member	struct:ftxui::MenuOption	access:public
elements_prefix	./FTXUI/include/ftxui/component/component_options.hpp	100;"	kind:member	struct:ftxui::MenuOption	access:public
empty	./FTXUI/include/ftxui/component/screen_interactive.hpp	146;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
emptyElement	./FTXUI/include/ftxui/dom/elements.hpp	90;"	kind:prototype	namespace:ftxui	signature:()
emptyElement	./FTXUI/src/ftxui/dom/util.cpp	140;"	kind:function	namespace:ftxui	signature:()
empty_	./FTXUI/include/ftxui/dom/selection.hpp	40;"	kind:member	class:ftxui::Selection	access:private
empty_	./FTXUI/src/ftxui/dom/selection.cpp	45;"	kind:function	namespace:ftxui	signature:(false)
empty_	./FTXUI/src/ftxui/dom/selection.cpp	63;"	kind:function	namespace:ftxui	signature:(false)
enabled	./FTXUI/include/ftxui/component/component_options.hpp	32;"	kind:member	struct:ftxui::UnderlineOption	access:public
enabled	./FTXUI/include/ftxui/component/component_options.hpp	63;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
enabled	./FTXUI/include/ftxui/dom/requirement.hpp	26;"	kind:member	struct:ftxui::Requirement::Focused	access:public
end_x	./FTXUI/include/ftxui/component/screen_interactive.hpp	144;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
end_x_	./FTXUI/include/ftxui/dom/selection.hpp	36;"	kind:member	class:ftxui::Selection	access:private
end_y	./FTXUI/include/ftxui/component/screen_interactive.hpp	145;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
end_y_	./FTXUI/include/ftxui/dom/selection.hpp	37;"	kind:member	class:ftxui::Selection	access:private
entries	./FTXUI/include/ftxui/component/component_options.hpp	198;"	kind:member	struct:ftxui::RadioboxOption	access:public
entries	./FTXUI/include/ftxui/component/component_options.hpp	93;"	kind:member	struct:ftxui::MenuOption	access:public
entries	./FTXUI/src/ftxui/util/ref_test.cpp	19;"	kind:member	class:ftxui::__anon67::Adapter	file:	access:public
entries_option	./FTXUI/include/ftxui/component/component_options.hpp	98;"	kind:member	struct:ftxui::MenuOption	access:public
event_listener_	./FTXUI/include/ftxui/component/screen_interactive.hpp	120;"	kind:member	class:ftxui::ScreenInteractive	access:private
f	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
f	./FTXUI/src/ftxui/component/event.cpp	334;"	kind:member	class:ftxui::Event	file:
f_	./FTXUI/src/ftxui/dom/flex.cpp	90;"	kind:member	class:ftxui::__anon13::Flex	file:	access:public
filler	./FTXUI/include/ftxui/dom/elements.hpp	150;"	kind:prototype	namespace:ftxui	signature:()
filler	./FTXUI/src/ftxui/dom/flex.cpp	98;"	kind:function	namespace:ftxui	signature:()
first	./FTXUI/src/ftxui/screen/string.cpp	27;"	kind:member	struct:__anon64::Interval	file:	access:public
first	./FTXUI/src/ftxui/screen/string.cpp	76;"	kind:member	struct:__anon64::WordBreakPropertyInterval	file:	access:public
first_	./FTXUI/src/ftxui/component/menu.cpp	473;"	kind:member	class:ftxui::MenuBase	file:	access:protected
flex	./FTXUI/include/ftxui/dom/elements.hpp	137;"	kind:prototype	namespace:ftxui	signature:(Element)
flex	./FTXUI/src/ftxui/dom/flex.cpp	123;"	kind:function	namespace:ftxui	signature:(Element child)
flexDirection	./FTXUI/src/ftxui/component/slider.cpp	24;"	kind:function	namespace:ftxui::__anon50	signature:(Direction direction)
flex_grow	./FTXUI/include/ftxui/dom/elements.hpp	138;"	kind:prototype	namespace:ftxui	signature:(Element)
flex_grow	./FTXUI/src/ftxui/dom/box_helper.hpp	15;"	kind:member	struct:ftxui::box_helper::Element	access:public
flex_grow	./FTXUI/src/ftxui/dom/flex.cpp	141;"	kind:function	namespace:ftxui	signature:(Element child)
flex_grow_x	./FTXUI/include/ftxui/dom/requirement.hpp	19;"	kind:member	struct:ftxui::Requirement	access:public
flex_grow_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	17;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
flex_grow_y	./FTXUI/include/ftxui/dom/requirement.hpp	20;"	kind:member	struct:ftxui::Requirement	access:public
flex_grow_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	18;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
flex_shrink	./FTXUI/include/ftxui/dom/elements.hpp	139;"	kind:prototype	namespace:ftxui	signature:(Element)
flex_shrink	./FTXUI/src/ftxui/dom/box_helper.hpp	16;"	kind:member	struct:ftxui::box_helper::Element	access:public
flex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	159;"	kind:function	namespace:ftxui	signature:(Element child)
flex_shrink_x	./FTXUI/include/ftxui/dom/requirement.hpp	21;"	kind:member	struct:ftxui::Requirement	access:public
flex_shrink_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	19;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
flex_shrink_y	./FTXUI/include/ftxui/dom/requirement.hpp	22;"	kind:member	struct:ftxui::Requirement	access:public
flex_shrink_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	20;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
flexbox	./FTXUI/include/ftxui/dom/elements.hpp	128;"	kind:prototype	namespace:ftxui	signature:(Elements, FlexboxConfig config = FlexboxConfig())
flexbox	./FTXUI/src/ftxui/dom/flexbox.cpp	251;"	kind:function	namespace:ftxui	signature:(Elements children, FlexboxConfig config)
focus	./FTXUI/include/ftxui/dom/elements.hpp	164;"	kind:prototype	namespace:ftxui	signature:(Element)
focus	./FTXUI/src/ftxui/dom/frame.cpp	101;"	kind:function	namespace:ftxui	signature:(Element child)
focusCursorBar	./FTXUI/include/ftxui/dom/elements.hpp	171;"	kind:prototype	namespace:ftxui	signature:(Element)
focusCursorBar	./FTXUI/src/ftxui/dom/frame.cpp	175;"	kind:function	namespace:ftxui	signature:(Element child)
focusCursorBarBlinking	./FTXUI/include/ftxui/dom/elements.hpp	172;"	kind:prototype	namespace:ftxui	signature:(Element)
focusCursorBarBlinking	./FTXUI/src/ftxui/dom/frame.cpp	189;"	kind:function	namespace:ftxui	signature:(Element child)
focusCursorBlock	./FTXUI/include/ftxui/dom/elements.hpp	169;"	kind:prototype	namespace:ftxui	signature:(Element)
focusCursorBlock	./FTXUI/src/ftxui/dom/frame.cpp	147;"	kind:function	namespace:ftxui	signature:(Element child)
focusCursorBlockBlinking	./FTXUI/include/ftxui/dom/elements.hpp	170;"	kind:prototype	namespace:ftxui	signature:(Element)
focusCursorBlockBlinking	./FTXUI/src/ftxui/dom/frame.cpp	161;"	kind:function	namespace:ftxui	signature:(Element child)
focusCursorUnderline	./FTXUI/include/ftxui/dom/elements.hpp	173;"	kind:prototype	namespace:ftxui	signature:(Element)
focusCursorUnderline	./FTXUI/src/ftxui/dom/frame.cpp	203;"	kind:function	namespace:ftxui	signature:(Element child)
focusCursorUnderlineBlinking	./FTXUI/include/ftxui/dom/elements.hpp	174;"	kind:prototype	namespace:ftxui	signature:(Element)
focusCursorUnderlineBlinking	./FTXUI/src/ftxui/dom/frame.cpp	217;"	kind:function	namespace:ftxui	signature:(Element child)
focusPosition	./FTXUI/include/ftxui/dom/elements.hpp	112;"	kind:prototype	namespace:ftxui	signature:(int x, int y)
focusPosition	./FTXUI/src/ftxui/dom/focus.cpp	69;"	kind:function	namespace:ftxui	signature:(int x, int y)
focusPositionRelative	./FTXUI/include/ftxui/dom/elements.hpp	113;"	kind:prototype	namespace:ftxui	signature:(float x, float y)
focusPositionRelative	./FTXUI/src/ftxui/dom/focus.cpp	31;"	kind:function	namespace:ftxui	signature:(float x, float y)
focused	./FTXUI/include/ftxui/component/component_options.hpp	155;"	kind:member	struct:ftxui::InputState	access:public
focused	./FTXUI/include/ftxui/component/component_options.hpp	27;"	kind:member	struct:ftxui::EntryState	access:public
focused	./FTXUI/include/ftxui/dom/requirement.hpp	46;"	kind:member	struct:ftxui::Requirement	access:public
focused_entry	./FTXUI/include/ftxui/component/component_options.hpp	107;"	kind:member	struct:ftxui::MenuOption	access:public
focused_entry	./FTXUI/include/ftxui/component/component_options.hpp	207;"	kind:member	struct:ftxui::RadioboxOption	access:public
follower_delay	./FTXUI/include/ftxui/component/component_options.hpp	45;"	kind:member	struct:ftxui::UnderlineOption	access:public
follower_duration	./FTXUI/include/ftxui/component/component_options.hpp	44;"	kind:member	struct:ftxui::UnderlineOption	access:public
follower_function	./FTXUI/include/ftxui/component/component_options.hpp	39;"	kind:member	struct:ftxui::UnderlineOption	access:public
force_handle_ctrl_c_	./FTXUI/include/ftxui/component/screen_interactive.hpp	133;"	kind:member	class:ftxui::ScreenInteractive	access:private
force_handle_ctrl_z_	./FTXUI/include/ftxui/component/screen_interactive.hpp	134;"	kind:member	class:ftxui::ScreenInteractive	access:private
foreground	./FTXUI/include/ftxui/component/component_options.hpp	72;"	kind:member	struct:ftxui::AnimatedColorsOption	access:public
foreground_color	./FTXUI/include/ftxui/screen/pixel.hpp	49;"	kind:member	struct:ftxui::Pixel	access:public
foreground_color_	./FTXUI/src/ftxui/dom/border.cpp	46;"	kind:member	class:ftxui::__anon38::Border	file:	access:public
frame	./FTXUI/include/ftxui/dom/elements.hpp	161;"	kind:prototype	namespace:ftxui	signature:(Element)
frame	./FTXUI/src/ftxui/dom/frame.cpp	118;"	kind:function	namespace:ftxui	signature:(Element child)
frame_valid_	./FTXUI/include/ftxui/component/screen_interactive.hpp	131;"	kind:member	class:ftxui::ScreenInteractive	access:private
from_	./FTXUI/include/ftxui/component/animation.hpp	104;"	kind:member	class:ftxui::animation::Animator	access:private
ftxui::AnimatedColorOption	./FTXUI/include/ftxui/component/component_options.hpp	56;"	kind:struct	namespace:ftxui
ftxui::AnimatedColorOption::Set	./FTXUI/include/ftxui/component/component_options.hpp	57;"	kind:prototype	struct:ftxui::AnimatedColorOption	access:public	signature:( Color inactive, Color active, animation::Duration duration = std::chrono::milliseconds(250), animation::easing::Function function = animation::easing::QuadraticInOut)
ftxui::AnimatedColorOption::Set	./FTXUI/src/ftxui/component/component_options.cpp	21;"	kind:function	class:ftxui::AnimatedColorOption	signature:(Color _inactive, Color _active, animation::Duration _duration, animation::easing::Function _function)
ftxui::AnimatedColorOption::active	./FTXUI/include/ftxui/component/component_options.hpp	65;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
ftxui::AnimatedColorOption::duration	./FTXUI/include/ftxui/component/component_options.hpp	66;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
ftxui::AnimatedColorOption::enabled	./FTXUI/include/ftxui/component/component_options.hpp	63;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
ftxui::AnimatedColorOption::function	./FTXUI/include/ftxui/component/component_options.hpp	67;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
ftxui::AnimatedColorOption::inactive	./FTXUI/include/ftxui/component/component_options.hpp	64;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
ftxui::AnimatedColorsOption	./FTXUI/include/ftxui/component/component_options.hpp	70;"	kind:struct	namespace:ftxui
ftxui::AnimatedColorsOption::background	./FTXUI/include/ftxui/component/component_options.hpp	71;"	kind:member	struct:ftxui::AnimatedColorsOption	access:public
ftxui::AnimatedColorsOption::foreground	./FTXUI/include/ftxui/component/component_options.hpp	72;"	kind:member	struct:ftxui::AnimatedColorsOption	access:public
ftxui::AnimationTask	./FTXUI/include/ftxui/component/task.hpp	12;"	kind:class	namespace:ftxui
ftxui::AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	13;"	kind:class	namespace:ftxui
ftxui::AutoReset::AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	15;"	kind:function	class:ftxui::AutoReset	access:public	signature:(T* variable, T new_value)
ftxui::AutoReset::AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	19;"	kind:prototype	class:ftxui::AutoReset	access:public	signature:(const AutoReset&)
ftxui::AutoReset::AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	20;"	kind:prototype	class:ftxui::AutoReset	access:public	signature:(AutoReset&&)
ftxui::AutoReset::operator =	./FTXUI/include/ftxui/util/autoreset.hpp	21;"	kind:prototype	class:ftxui::AutoReset	access:public	signature:(const AutoReset&)
ftxui::AutoReset::operator =	./FTXUI/include/ftxui/util/autoreset.hpp	22;"	kind:prototype	class:ftxui::AutoReset	access:public	signature:(AutoReset&&)
ftxui::AutoReset::previous_value_	./FTXUI/include/ftxui/util/autoreset.hpp	27;"	kind:member	class:ftxui::AutoReset	access:private
ftxui::AutoReset::variable_	./FTXUI/include/ftxui/util/autoreset.hpp	26;"	kind:member	class:ftxui::AutoReset	access:private
ftxui::AutoReset::~AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	23;"	kind:function	class:ftxui::AutoReset	access:public	signature:()
ftxui::BencharkBasic	./FTXUI/src/ftxui/dom/benchmark_test.cpp	13;"	kind:function	namespace:ftxui	signature:(benchmark::State& state)
ftxui::BencharkText	./FTXUI/src/ftxui/dom/benchmark_test.cpp	37;"	kind:function	namespace:ftxui	signature:(benchmark::State& state)
ftxui::BenchmarkStyle	./FTXUI/src/ftxui/dom/benchmark_test.cpp	51;"	kind:function	namespace:ftxui	signature:(benchmark::State& state)
ftxui::BorderStyle	./FTXUI/include/ftxui/dom/elements.hpp	27;"	kind:enum	namespace:ftxui
ftxui::Box	./FTXUI/include/ftxui/screen/box.hpp	9;"	kind:struct	namespace:ftxui
ftxui::Box::Box	./FTXUI/include/ftxui/screen/box.hpp	15;"	kind:member	struct:ftxui::Box	access:public
ftxui::Box::Box	./FTXUI/include/ftxui/screen/box.hpp	16;"	kind:member	struct:ftxui::Box	access:public
ftxui::Box::Contain	./FTXUI/include/ftxui/screen/box.hpp	18;"	kind:prototype	struct:ftxui::Box	access:public	signature:(int x, int y) const
ftxui::Box::Contain	./FTXUI/src/ftxui/screen/box.cpp	46;"	kind:function	class:ftxui::Box	signature:(int x, int y) const
ftxui::Box::Intersection	./FTXUI/src/ftxui/screen/box.cpp	12;"	kind:function	class:ftxui::Box	signature:(Box a, Box b)
ftxui::Box::IsEmpty	./FTXUI/include/ftxui/screen/box.hpp	19;"	kind:prototype	struct:ftxui::Box	access:public	signature:() const
ftxui::Box::IsEmpty	./FTXUI/src/ftxui/screen/box.cpp	55;"	kind:function	class:ftxui::Box	signature:() const
ftxui::Box::Shift	./FTXUI/include/ftxui/screen/box.hpp	17;"	kind:prototype	struct:ftxui::Box	access:public	signature:(int x, int y)
ftxui::Box::Shift	./FTXUI/src/ftxui/screen/box.cpp	37;"	kind:function	class:ftxui::Box	signature:(int x, int y)
ftxui::Box::Union	./FTXUI/src/ftxui/screen/box.cpp	24;"	kind:function	class:ftxui::Box	signature:(Box a, Box b)
ftxui::Box::operator !=	./FTXUI/include/ftxui/screen/box.hpp	21;"	kind:prototype	struct:ftxui::Box	access:public	signature:(const Box& other) const
ftxui::Box::operator !=	./FTXUI/src/ftxui/screen/box.cpp	68;"	kind:function	class:ftxui::Box	signature:(const Box& other) const
ftxui::Box::operator ==	./FTXUI/include/ftxui/screen/box.hpp	20;"	kind:prototype	struct:ftxui::Box	access:public	signature:(const Box& other) const
ftxui::Box::operator ==	./FTXUI/src/ftxui/screen/box.cpp	61;"	kind:function	class:ftxui::Box	signature:(const Box& other) const
ftxui::Box::x_max	./FTXUI/include/ftxui/screen/box.hpp	11;"	kind:member	struct:ftxui::Box	access:public
ftxui::Box::x_min	./FTXUI/include/ftxui/screen/box.hpp	10;"	kind:member	struct:ftxui::Box	access:public
ftxui::Box::y_max	./FTXUI/include/ftxui/screen/box.hpp	13;"	kind:member	struct:ftxui::Box	access:public
ftxui::Box::y_min	./FTXUI/include/ftxui/screen/box.hpp	12;"	kind:member	struct:ftxui::Box	access:public
ftxui::Button	./FTXUI/include/ftxui/component/component.hpp	48;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, std::function<void()> on_click, ButtonOption options = ButtonOption::Simple())
ftxui::Button	./FTXUI/src/ftxui/component/button.cpp	176;"	kind:function	namespace:ftxui	signature:(ButtonOption option)
ftxui::Button	./FTXUI/src/ftxui/component/button.cpp	204;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, std::function<void()> on_click, ButtonOption option)
ftxui::ButtonOption	./FTXUI/include/ftxui/component/component_options.hpp	112;"	kind:struct	namespace:ftxui
ftxui::ButtonOption::Animated	./FTXUI/include/ftxui/component/component_options.hpp	117;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:()
ftxui::ButtonOption::Animated	./FTXUI/include/ftxui/component/component_options.hpp	118;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:(Color color)
ftxui::ButtonOption::Animated	./FTXUI/include/ftxui/component/component_options.hpp	119;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:(Color background, Color foreground)
ftxui::ButtonOption::Animated	./FTXUI/include/ftxui/component/component_options.hpp	120;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:(Color background, Color foreground, Color background_active, Color foreground_active)
ftxui::ButtonOption::Animated	./FTXUI/src/ftxui/component/component_options.cpp	210;"	kind:function	class:ftxui::ButtonOption	signature:()
ftxui::ButtonOption::Animated	./FTXUI/src/ftxui/component/component_options.cpp	218;"	kind:function	class:ftxui::ButtonOption	signature:(Color color)
ftxui::ButtonOption::Animated	./FTXUI/src/ftxui/component/component_options.cpp	229;"	kind:function	class:ftxui::ButtonOption	signature:(Color background, Color foreground)
ftxui::ButtonOption::Animated	./FTXUI/src/ftxui/component/component_options.cpp	242;"	kind:function	class:ftxui::ButtonOption	signature:(Color background, Color foreground, Color background_active, Color foreground_active)
ftxui::ButtonOption::Ascii	./FTXUI/include/ftxui/component/component_options.hpp	114;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:()
ftxui::ButtonOption::Ascii	./FTXUI/src/ftxui/component/component_options.cpp	164;"	kind:function	class:ftxui::ButtonOption	signature:()
ftxui::ButtonOption::Border	./FTXUI/include/ftxui/component/component_options.hpp	116;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:()
ftxui::ButtonOption::Border	./FTXUI/src/ftxui/component/component_options.cpp	192;"	kind:function	class:ftxui::ButtonOption	signature:()
ftxui::ButtonOption::Simple	./FTXUI/include/ftxui/component/component_options.hpp	115;"	kind:prototype	struct:ftxui::ButtonOption	access:public	signature:()
ftxui::ButtonOption::Simple	./FTXUI/src/ftxui/component/component_options.cpp	177;"	kind:function	class:ftxui::ButtonOption	signature:()
ftxui::ButtonOption::animated_colors	./FTXUI/include/ftxui/component/component_options.hpp	130;"	kind:member	struct:ftxui::ButtonOption	access:public
ftxui::ButtonOption::label	./FTXUI/include/ftxui/component/component_options.hpp	125;"	kind:member	struct:ftxui::ButtonOption	access:public
ftxui::ButtonOption::on_click	./FTXUI/include/ftxui/component/component_options.hpp	126;"	kind:member	struct:ftxui::ButtonOption	access:public
ftxui::ButtonOption::transform	./FTXUI/include/ftxui/component/component_options.hpp	129;"	kind:member	struct:ftxui::ButtonOption	access:public
ftxui::Canvas	./FTXUI/include/ftxui/dom/canvas.hpp	23;"	kind:struct	namespace:ftxui
ftxui::Canvas::Canvas	./FTXUI/include/ftxui/dom/canvas.hpp	25;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:()
ftxui::Canvas::Canvas	./FTXUI/include/ftxui/dom/canvas.hpp	26;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int width, int height)
ftxui::Canvas::Canvas	./FTXUI/src/ftxui/dom/canvas.cpp	90;"	kind:function	class:ftxui::Canvas	signature:(int width, int height)
ftxui::Canvas::Cell	./FTXUI/include/ftxui/dom/canvas.hpp	120;"	kind:struct	struct:ftxui::Canvas	access:private
ftxui::Canvas::Cell::content	./FTXUI/include/ftxui/dom/canvas.hpp	122;"	kind:member	struct:ftxui::Canvas::Cell	access:public
ftxui::Canvas::Cell::type	./FTXUI/include/ftxui/dom/canvas.hpp	121;"	kind:member	struct:ftxui::Canvas::Cell	access:public
ftxui::Canvas::CellType	./FTXUI/include/ftxui/dom/canvas.hpp	114;"	kind:enum	struct:ftxui::Canvas	access:private
ftxui::Canvas::DrawBlock	./FTXUI/include/ftxui/dom/canvas.hpp	63;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value)
ftxui::Canvas::DrawBlock	./FTXUI/include/ftxui/dom/canvas.hpp	64;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value, const Stylizer& s)
ftxui::Canvas::DrawBlock	./FTXUI/include/ftxui/dom/canvas.hpp	65;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value, const Color& color)
ftxui::Canvas::DrawBlock	./FTXUI/src/ftxui/dom/canvas.cpp	438;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value)
ftxui::Canvas::DrawBlock	./FTXUI/src/ftxui/dom/canvas.cpp	447;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value, const Color& color)
ftxui::Canvas::DrawBlock	./FTXUI/src/ftxui/dom/canvas.cpp	456;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value, const Stylizer& style)
ftxui::Canvas::DrawBlockCircle	./FTXUI/include/ftxui/dom/canvas.hpp	69;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius)
ftxui::Canvas::DrawBlockCircle	./FTXUI/include/ftxui/dom/canvas.hpp	70;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius, const Stylizer& s)
ftxui::Canvas::DrawBlockCircle	./FTXUI/include/ftxui/dom/canvas.hpp	71;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius, const Color& color)
ftxui::Canvas::DrawBlockCircle	./FTXUI/src/ftxui/dom/canvas.cpp	592;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius)
ftxui::Canvas::DrawBlockCircle	./FTXUI/src/ftxui/dom/canvas.cpp	601;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Color& color)
ftxui::Canvas::DrawBlockCircle	./FTXUI/src/ftxui/dom/canvas.cpp	611;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Stylizer& style)
ftxui::Canvas::DrawBlockCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	72;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius)
ftxui::Canvas::DrawBlockCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	73;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius, const Stylizer& s)
ftxui::Canvas::DrawBlockCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	74;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int radius, const Color& color)
ftxui::Canvas::DrawBlockCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	619;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius)
ftxui::Canvas::DrawBlockCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	628;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Color& color)
ftxui::Canvas::DrawBlockCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	641;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Stylizer& s)
ftxui::Canvas::DrawBlockEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	75;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2)
ftxui::Canvas::DrawBlockEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	76;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
ftxui::Canvas::DrawBlockEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	77;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2, const Color& color)
ftxui::Canvas::DrawBlockEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	653;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2)
ftxui::Canvas::DrawBlockEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	663;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2, const Color& color)
ftxui::Canvas::DrawBlockEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	678;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
ftxui::Canvas::DrawBlockEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	78;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2)
ftxui::Canvas::DrawBlockEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	79;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
ftxui::Canvas::DrawBlockEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	84;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int r1, int r2, const Color& color)
ftxui::Canvas::DrawBlockEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	719;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2)
ftxui::Canvas::DrawBlockEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	729;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2, const Color& color)
ftxui::Canvas::DrawBlockEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	744;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
ftxui::Canvas::DrawBlockLine	./FTXUI/include/ftxui/dom/canvas.hpp	66;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2)
ftxui::Canvas::DrawBlockLine	./FTXUI/include/ftxui/dom/canvas.hpp	67;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2, const Stylizer& s)
ftxui::Canvas::DrawBlockLine	./FTXUI/include/ftxui/dom/canvas.hpp	68;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2, const Color& color)
ftxui::Canvas::DrawBlockLine	./FTXUI/src/ftxui/dom/canvas.cpp	531;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2)
ftxui::Canvas::DrawBlockLine	./FTXUI/src/ftxui/dom/canvas.cpp	541;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2, const Color& color)
ftxui::Canvas::DrawBlockLine	./FTXUI/src/ftxui/dom/canvas.cpp	552;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2, const Stylizer& style)
ftxui::Canvas::DrawBlockOff	./FTXUI/include/ftxui/dom/canvas.hpp	61;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
ftxui::Canvas::DrawBlockOff	./FTXUI/src/ftxui/dom/canvas.cpp	488;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
ftxui::Canvas::DrawBlockOn	./FTXUI/include/ftxui/dom/canvas.hpp	60;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
ftxui::Canvas::DrawBlockOn	./FTXUI/src/ftxui/dom/canvas.cpp	468;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
ftxui::Canvas::DrawBlockToggle	./FTXUI/include/ftxui/dom/canvas.hpp	62;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
ftxui::Canvas::DrawBlockToggle	./FTXUI/src/ftxui/dom/canvas.cpp	509;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
ftxui::Canvas::DrawImage	./FTXUI/include/ftxui/dom/canvas.hpp	102;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const Image&)
ftxui::Canvas::DrawImage	./FTXUI/src/ftxui/dom/canvas.cpp	839;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const Image& image)
ftxui::Canvas::DrawPixel	./FTXUI/include/ftxui/dom/canvas.hpp	101;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const Pixel&)
ftxui::Canvas::DrawPixel	./FTXUI/src/ftxui/dom/canvas.cpp	827;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const Pixel& p)
ftxui::Canvas::DrawPoint	./FTXUI/include/ftxui/dom/canvas.hpp	39;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value)
ftxui::Canvas::DrawPoint	./FTXUI/include/ftxui/dom/canvas.hpp	40;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value, const Stylizer& s)
ftxui::Canvas::DrawPoint	./FTXUI/include/ftxui/dom/canvas.hpp	41;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, bool value, const Color& color)
ftxui::Canvas::DrawPoint	./FTXUI/src/ftxui/dom/canvas.cpp	107;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value)
ftxui::Canvas::DrawPoint	./FTXUI/src/ftxui/dom/canvas.cpp	116;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value, const Color& color)
ftxui::Canvas::DrawPoint	./FTXUI/src/ftxui/dom/canvas.cpp	125;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, bool value, const Stylizer& style)
ftxui::Canvas::DrawPointCircle	./FTXUI/include/ftxui/dom/canvas.hpp	45;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius)
ftxui::Canvas::DrawPointCircle	./FTXUI/include/ftxui/dom/canvas.hpp	46;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius, const Stylizer& s)
ftxui::Canvas::DrawPointCircle	./FTXUI/include/ftxui/dom/canvas.hpp	47;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius, const Color& color)
ftxui::Canvas::DrawPointCircle	./FTXUI/src/ftxui/dom/canvas.cpp	249;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius)
ftxui::Canvas::DrawPointCircle	./FTXUI/src/ftxui/dom/canvas.cpp	258;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Color& color)
ftxui::Canvas::DrawPointCircle	./FTXUI/src/ftxui/dom/canvas.cpp	268;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Stylizer& style)
ftxui::Canvas::DrawPointCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	48;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius)
ftxui::Canvas::DrawPointCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	49;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius, const Stylizer& s)
ftxui::Canvas::DrawPointCircleFilled	./FTXUI/include/ftxui/dom/canvas.hpp	50;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int radius, const Color& color)
ftxui::Canvas::DrawPointCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	276;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius)
ftxui::Canvas::DrawPointCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	285;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Color& color)
ftxui::Canvas::DrawPointCircleFilled	./FTXUI/src/ftxui/dom/canvas.cpp	298;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int radius, const Stylizer& style)
ftxui::Canvas::DrawPointEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	51;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2)
ftxui::Canvas::DrawPointEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	52;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2, const Color& color)
ftxui::Canvas::DrawPointEllipse	./FTXUI/include/ftxui/dom/canvas.hpp	53;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2, const Stylizer& s)
ftxui::Canvas::DrawPointEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	310;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2)
ftxui::Canvas::DrawPointEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	320;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, int r1, int r2, const Color& color)
ftxui::Canvas::DrawPointEllipse	./FTXUI/src/ftxui/dom/canvas.cpp	335;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
ftxui::Canvas::DrawPointEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	54;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2)
ftxui::Canvas::DrawPointEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	55;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2, const Color& color)
ftxui::Canvas::DrawPointEllipseFilled	./FTXUI/include/ftxui/dom/canvas.hpp	56;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, int r1, int r2, const Stylizer& s)
ftxui::Canvas::DrawPointEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	374;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2)
ftxui::Canvas::DrawPointEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	384;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Color& color)
ftxui::Canvas::DrawPointEllipseFilled	./FTXUI/src/ftxui/dom/canvas.cpp	399;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int r1, int r2, const Stylizer& s)
ftxui::Canvas::DrawPointLine	./FTXUI/include/ftxui/dom/canvas.hpp	42;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2)
ftxui::Canvas::DrawPointLine	./FTXUI/include/ftxui/dom/canvas.hpp	43;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2, const Stylizer& s)
ftxui::Canvas::DrawPointLine	./FTXUI/include/ftxui/dom/canvas.hpp	44;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x1, int y1, int x2, int y2, const Color& color)
ftxui::Canvas::DrawPointLine	./FTXUI/src/ftxui/dom/canvas.cpp	191;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2)
ftxui::Canvas::DrawPointLine	./FTXUI/src/ftxui/dom/canvas.cpp	201;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2, const Color& color)
ftxui::Canvas::DrawPointLine	./FTXUI/src/ftxui/dom/canvas.cpp	212;"	kind:function	class:ftxui::Canvas	signature:(int x1, int y1, int x2, int y2, const Stylizer& style)
ftxui::Canvas::DrawPointOff	./FTXUI/include/ftxui/dom/canvas.hpp	37;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
ftxui::Canvas::DrawPointOff	./FTXUI/src/ftxui/dom/canvas.cpp	154;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
ftxui::Canvas::DrawPointOn	./FTXUI/include/ftxui/dom/canvas.hpp	36;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
ftxui::Canvas::DrawPointOn	./FTXUI/src/ftxui/dom/canvas.cpp	137;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
ftxui::Canvas::DrawPointToggle	./FTXUI/include/ftxui/dom/canvas.hpp	38;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y)
ftxui::Canvas::DrawPointToggle	./FTXUI/src/ftxui/dom/canvas.cpp	172;"	kind:function	class:ftxui::Canvas	signature:(int x, int y)
ftxui::Canvas::DrawText	./FTXUI/include/ftxui/dom/canvas.hpp	94;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const std::string& value)
ftxui::Canvas::DrawText	./FTXUI/include/ftxui/dom/canvas.hpp	95;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const std::string& value, const Color& color)
ftxui::Canvas::DrawText	./FTXUI/include/ftxui/dom/canvas.hpp	96;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const std::string& value, const Stylizer& style)
ftxui::Canvas::DrawText	./FTXUI/src/ftxui/dom/canvas.cpp	785;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const std::string& value)
ftxui::Canvas::DrawText	./FTXUI/src/ftxui/dom/canvas.cpp	794;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const std::string& value, const Color& color)
ftxui::Canvas::DrawText	./FTXUI/src/ftxui/dom/canvas.cpp	806;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const std::string& value, const Stylizer& style)
ftxui::Canvas::GetPixel	./FTXUI/include/ftxui/dom/canvas.hpp	31;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y) const
ftxui::Canvas::GetPixel	./FTXUI/src/ftxui/dom/canvas.cpp	98;"	kind:function	class:ftxui::Canvas	signature:(int x, int y) const
ftxui::Canvas::IsIn	./FTXUI/include/ftxui/dom/canvas.hpp	110;"	kind:function	struct:ftxui::Canvas	access:private	signature:(int x, int y) const
ftxui::Canvas::Style	./FTXUI/include/ftxui/dom/canvas.hpp	107;"	kind:prototype	struct:ftxui::Canvas	access:public	signature:(int x, int y, const Stylizer& style)
ftxui::Canvas::Style	./FTXUI/src/ftxui/dom/canvas.cpp	861;"	kind:function	class:ftxui::Canvas	signature:(int x, int y, const Stylizer& style)
ftxui::Canvas::XY	./FTXUI/include/ftxui/dom/canvas.hpp	125;"	kind:struct	struct:ftxui::Canvas	access:private
ftxui::Canvas::XY::operator ==	./FTXUI/include/ftxui/dom/canvas.hpp	128;"	kind:function	struct:ftxui::Canvas::XY	access:public	signature:(const XY& other) const
ftxui::Canvas::XY::x	./FTXUI/include/ftxui/dom/canvas.hpp	126;"	kind:member	struct:ftxui::Canvas::XY	access:public
ftxui::Canvas::XY::y	./FTXUI/include/ftxui/dom/canvas.hpp	127;"	kind:member	struct:ftxui::Canvas::XY	access:public
ftxui::Canvas::XYHash	./FTXUI/include/ftxui/dom/canvas.hpp	133;"	kind:struct	struct:ftxui::Canvas	access:private
ftxui::Canvas::XYHash::operator ()	./FTXUI/include/ftxui/dom/canvas.hpp	134;"	kind:function	struct:ftxui::Canvas::XYHash	access:public	signature:(const XY& xy) const
ftxui::Canvas::height	./FTXUI/include/ftxui/dom/canvas.hpp	30;"	kind:function	struct:ftxui::Canvas	access:public	signature:() const
ftxui::Canvas::height_	./FTXUI/include/ftxui/dom/canvas.hpp	141;"	kind:member	struct:ftxui::Canvas	access:private
ftxui::Canvas::kBlock	./FTXUI/include/ftxui/dom/canvas.hpp	116;"	kind:enumerator	enum:ftxui::Canvas::CellType
ftxui::Canvas::kBraille	./FTXUI/include/ftxui/dom/canvas.hpp	117;"	kind:enumerator	enum:ftxui::Canvas::CellType
ftxui::Canvas::kCell	./FTXUI/include/ftxui/dom/canvas.hpp	115;"	kind:enumerator	enum:ftxui::Canvas::CellType
ftxui::Canvas::storage_	./FTXUI/include/ftxui/dom/canvas.hpp	142;"	kind:member	struct:ftxui::Canvas	access:private
ftxui::Canvas::width	./FTXUI/include/ftxui/dom/canvas.hpp	29;"	kind:function	struct:ftxui::Canvas	access:public	signature:() const
ftxui::Canvas::width_	./FTXUI/include/ftxui/dom/canvas.hpp	140;"	kind:member	struct:ftxui::Canvas	access:private
ftxui::CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	10;"	kind:class	namespace:ftxui
ftxui::CapturedMouseInterface::CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	12;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:()
ftxui::CapturedMouseInterface::CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	13;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:(const CapturedMouseInterface&)
ftxui::CapturedMouseInterface::CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	14;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:(CapturedMouseInterface&&)
ftxui::CapturedMouseInterface::operator =	./FTXUI/include/ftxui/component/captured_mouse.hpp	15;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:(const CapturedMouseInterface&)
ftxui::CapturedMouseInterface::operator =	./FTXUI/include/ftxui/component/captured_mouse.hpp	16;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:(CapturedMouseInterface&&)
ftxui::CapturedMouseInterface::~CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	17;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	implementation:virtual	signature:()
ftxui::CatchEvent	./FTXUI/include/ftxui/component/component.hpp	112;"	kind:prototype	namespace:ftxui	signature:(Component child, std::function<bool(Event)>)
ftxui::CatchEvent	./FTXUI/include/ftxui/component/component.hpp	113;"	kind:prototype	namespace:ftxui	signature:(std::function<bool(Event)> on_event)
ftxui::CatchEvent	./FTXUI/src/ftxui/component/catch_event.cpp	54;"	kind:function	namespace:ftxui	signature:(Component child, std::function<bool(Event event)> on_event)
ftxui::CatchEvent	./FTXUI/src/ftxui/component/catch_event.cpp	80;"	kind:function	namespace:ftxui	signature:(std::function<bool(Event)> on_event)
ftxui::CatchEventBase	./FTXUI/src/ftxui/component/catch_event.cpp	13;"	kind:class	namespace:ftxui	file:	inherits:ComponentBase
ftxui::CatchEventBase::CatchEventBase	./FTXUI/src/ftxui/component/catch_event.cpp	16;"	kind:function	class:ftxui::CatchEventBase	access:public	signature:(std::function<bool(Event)> on_event)
ftxui::CatchEventBase::on_event_	./FTXUI/src/ftxui/component/catch_event.cpp	29;"	kind:member	class:ftxui::CatchEventBase	file:	access:protected
ftxui::CellToGlyphIndex	./FTXUI/include/ftxui/screen/string.hpp	27;"	kind:prototype	namespace:ftxui	signature:(const std::string& input)
ftxui::CellToGlyphIndex	./FTXUI/src/ftxui/screen/string.cpp	1464;"	kind:function	namespace:ftxui	signature:(const std::string& input)
ftxui::Checkbox	./FTXUI/include/ftxui/component/component.hpp	52;"	kind:prototype	namespace:ftxui	signature:(CheckboxOption options)
ftxui::Checkbox	./FTXUI/include/ftxui/component/component.hpp	53;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, bool* checked, CheckboxOption options = CheckboxOption::Simple())
ftxui::Checkbox	./FTXUI/src/ftxui/component/checkbox.cpp	108;"	kind:function	namespace:ftxui	signature:(CheckboxOption option)
ftxui::Checkbox	./FTXUI/src/ftxui/component/checkbox.cpp	135;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, bool* checked, CheckboxOption option)
ftxui::CheckboxOption	./FTXUI/include/ftxui/component/component_options.hpp	135;"	kind:struct	namespace:ftxui
ftxui::CheckboxOption::Simple	./FTXUI/include/ftxui/component/component_options.hpp	137;"	kind:prototype	struct:ftxui::CheckboxOption	access:public	signature:()
ftxui::CheckboxOption::Simple	./FTXUI/src/ftxui/component/component_options.cpp	262;"	kind:function	class:ftxui::CheckboxOption	signature:()
ftxui::CheckboxOption::checked	./FTXUI/include/ftxui/component/component_options.hpp	141;"	kind:member	struct:ftxui::CheckboxOption	access:public
ftxui::CheckboxOption::label	./FTXUI/include/ftxui/component/component_options.hpp	139;"	kind:member	struct:ftxui::CheckboxOption	access:public
ftxui::CheckboxOption::on_change	./FTXUI/include/ftxui/component/component_options.hpp	148;"	kind:member	struct:ftxui::CheckboxOption	access:public
ftxui::CheckboxOption::transform	./FTXUI/include/ftxui/component/component_options.hpp	144;"	kind:member	struct:ftxui::CheckboxOption	access:public
ftxui::CodepointToWordBreakProperty	./FTXUI/src/ftxui/screen/string.cpp	1307;"	kind:function	namespace:ftxui	signature:(uint32_t codepoint)
ftxui::CodepointToWordBreakProperty	./FTXUI/src/ftxui/screen/string_internal.hpp	60;"	kind:prototype	namespace:ftxui	signature:(uint32_t codepoint)
ftxui::Collapsible	./FTXUI/include/ftxui/component/component.hpp	123;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, Component child, Ref<bool> show = false)
ftxui::Collapsible	./FTXUI/src/ftxui/component/collapsible.cpp	33;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, Component child, Ref<bool> show)
ftxui::Color	./FTXUI/include/ftxui/screen/color.hpp	20;"	kind:class	namespace:ftxui
ftxui::Color::Blend	./FTXUI/include/ftxui/screen/color.hpp	41;"	kind:prototype	class:ftxui::Color	access:public	signature:(const Color& lhs, const Color& rhs)
ftxui::Color::Blend	./FTXUI/src/ftxui/screen/color.cpp	281;"	kind:function	class:ftxui::Color	signature:(const Color& lhs, const Color& rhs)
ftxui::Color::Color	./FTXUI/include/ftxui/screen/color.hpp	27;"	kind:prototype	class:ftxui::Color	access:public	signature:()
ftxui::Color::Color	./FTXUI/include/ftxui/screen/color.hpp	28;"	kind:prototype	class:ftxui::Color	access:public	signature:(Palette1 index)
ftxui::Color::Color	./FTXUI/include/ftxui/screen/color.hpp	29;"	kind:prototype	class:ftxui::Color	access:public	signature:(Palette16 index)
ftxui::Color::Color	./FTXUI/include/ftxui/screen/color.hpp	30;"	kind:prototype	class:ftxui::Color	access:public	signature:(Palette256 index)
ftxui::Color::Color	./FTXUI/include/ftxui/screen/color.hpp	32;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha = 255)
ftxui::Color::Color	./FTXUI/src/ftxui/screen/color.cpp	108;"	kind:function	class:ftxui::Color	signature:(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)
ftxui::Color::Color	./FTXUI/src/ftxui/screen/color.cpp	78;"	kind:prototype	class:ftxui::Color	file:	signature:()
ftxui::Color::Color	./FTXUI/src/ftxui/screen/color.cpp	82;"	kind:function	class:ftxui::Color	signature:(Palette1 )
ftxui::Color::Color	./FTXUI/src/ftxui/screen/color.cpp	86;"	kind:function	class:ftxui::Color	signature:(Palette16 index)
ftxui::Color::Color	./FTXUI/src/ftxui/screen/color.cpp	91;"	kind:function	class:ftxui::Color	signature:(Palette256 index)
ftxui::Color::ColorType	./FTXUI/include/ftxui/screen/color.hpp	322;"	kind:class	class:ftxui::Color	inherits:uint8_t	access:private
ftxui::Color::ColorType::Palette1	./FTXUI/include/ftxui/screen/color.hpp	323;"	kind:member	class:ftxui::Color::ColorType	access:private
ftxui::Color::ColorType::Palette16	./FTXUI/include/ftxui/screen/color.hpp	324;"	kind:member	class:ftxui::Color::ColorType	access:private
ftxui::Color::ColorType::Palette256	./FTXUI/include/ftxui/screen/color.hpp	325;"	kind:member	class:ftxui::Color::ColorType	access:private
ftxui::Color::ColorType::TrueColor	./FTXUI/include/ftxui/screen/color.hpp	326;"	kind:member	class:ftxui::Color::ColorType	access:private
ftxui::Color::HSV	./FTXUI/include/ftxui/screen/color.hpp	34;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t hue, uint8_t saturation, uint8_t value)
ftxui::Color::HSV	./FTXUI/src/ftxui/screen/color.cpp	207;"	kind:function	class:ftxui::Color	signature:(uint8_t h, uint8_t s, uint8_t v)
ftxui::Color::HSVA	./FTXUI/include/ftxui/screen/color.hpp	36;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t hue, uint8_t saturation, uint8_t value, uint8_t alpha)
ftxui::Color::HSVA	./FTXUI/src/ftxui/screen/color.cpp	179;"	kind:function	class:ftxui::Color	signature:(uint8_t h, uint8_t s, uint8_t v, uint8_t alpha)
ftxui::Color::Interpolate	./FTXUI/include/ftxui/screen/color.hpp	40;"	kind:prototype	class:ftxui::Color	access:public	signature:(float t, const Color& a, const Color& b)
ftxui::Color::Interpolate	./FTXUI/src/ftxui/screen/color.cpp	212;"	kind:function	class:ftxui::Color	signature:(float t, const Color& a, const Color& b)
ftxui::Color::IsOpaque	./FTXUI/include/ftxui/screen/color.hpp	319;"	kind:function	class:ftxui::Color	access:public	signature:() const
ftxui::Color::Print	./FTXUI/include/ftxui/screen/color.hpp	318;"	kind:prototype	class:ftxui::Color	access:public	signature:(bool is_background_color) const
ftxui::Color::Print	./FTXUI/src/ftxui/screen/color.cpp	46;"	kind:function	class:ftxui::Color	signature:(bool is_background_color) const
ftxui::Color::RGB	./FTXUI/include/ftxui/screen/color.hpp	33;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t red, uint8_t green, uint8_t blue)
ftxui::Color::RGB	./FTXUI/src/ftxui/screen/color.cpp	153;"	kind:function	class:ftxui::Color	signature:(uint8_t red, uint8_t green, uint8_t blue)
ftxui::Color::RGBA	./FTXUI/include/ftxui/screen/color.hpp	35;"	kind:prototype	class:ftxui::Color	access:public	signature:(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)
ftxui::Color::RGBA	./FTXUI/src/ftxui/screen/color.cpp	166;"	kind:function	class:ftxui::Color	signature:(uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha)
ftxui::Color::alpha_	./FTXUI/include/ftxui/screen/color.hpp	332;"	kind:member	class:ftxui::Color	access:private
ftxui::Color::blue_	./FTXUI/include/ftxui/screen/color.hpp	331;"	kind:member	class:ftxui::Color	access:private
ftxui::Color::green_	./FTXUI/include/ftxui/screen/color.hpp	330;"	kind:member	class:ftxui::Color	access:private
ftxui::Color::operator !=	./FTXUI/include/ftxui/screen/color.hpp	316;"	kind:prototype	class:ftxui::Color	access:public	signature:(const Color& rhs) const
ftxui::Color::operator !=	./FTXUI/src/ftxui/screen/color.cpp	42;"	kind:function	class:ftxui::Color	signature:(const Color& rhs) const
ftxui::Color::operator ==	./FTXUI/include/ftxui/screen/color.hpp	315;"	kind:prototype	class:ftxui::Color	access:public	signature:(const Color& rhs) const
ftxui::Color::operator ==	./FTXUI/src/ftxui/screen/color.cpp	37;"	kind:function	class:ftxui::Color	signature:(const Color& rhs) const
ftxui::Color::red_	./FTXUI/include/ftxui/screen/color.hpp	329;"	kind:member	class:ftxui::Color	access:private
ftxui::Color::type_	./FTXUI/include/ftxui/screen/color.hpp	328;"	kind:member	class:ftxui::Color	access:private
ftxui::Color::uint8_t	./FTXUI/include/ftxui/screen/color.hpp	22;"	kind:member	class:ftxui::Color	access:public
ftxui::Color::uint8_t	./FTXUI/include/ftxui/screen/color.hpp	23;"	kind:member	class:ftxui::Color	access:public
ftxui::Color::uint8_t	./FTXUI/include/ftxui/screen/color.hpp	24;"	kind:member	class:ftxui::Color	access:public
ftxui::ColorInfo	./FTXUI/include/ftxui/screen/color_info.hpp	12;"	kind:struct	namespace:ftxui
ftxui::ColorInfo::blue	./FTXUI/include/ftxui/screen/color_info.hpp	18;"	kind:member	struct:ftxui::ColorInfo	access:public
ftxui::ColorInfo::green	./FTXUI/include/ftxui/screen/color_info.hpp	17;"	kind:member	struct:ftxui::ColorInfo	access:public
ftxui::ColorInfo::hue	./FTXUI/include/ftxui/screen/color_info.hpp	19;"	kind:member	struct:ftxui::ColorInfo	access:public
ftxui::ColorInfo::index_16	./FTXUI/include/ftxui/screen/color_info.hpp	15;"	kind:member	struct:ftxui::ColorInfo	access:public
ftxui::ColorInfo::index_256	./FTXUI/include/ftxui/screen/color_info.hpp	14;"	kind:member	struct:ftxui::ColorInfo	access:public
ftxui::ColorInfo::name	./FTXUI/include/ftxui/screen/color_info.hpp	13;"	kind:member	struct:ftxui::ColorInfo	access:public
ftxui::ColorInfo::red	./FTXUI/include/ftxui/screen/color_info.hpp	16;"	kind:member	struct:ftxui::ColorInfo	access:public
ftxui::ColorInfo::saturation	./FTXUI/include/ftxui/screen/color_info.hpp	20;"	kind:member	struct:ftxui::ColorInfo	access:public
ftxui::ColorInfo::value	./FTXUI/include/ftxui/screen/color_info.hpp	21;"	kind:member	struct:ftxui::ColorInfo	access:public
ftxui::ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	30;"	kind:class	namespace:ftxui
ftxui::ComponentBase::Active	./FTXUI/include/ftxui/component/component_base.hpp	82;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
ftxui::ComponentBase::ActiveChild	./FTXUI/include/ftxui/component/component_base.hpp	74;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:()
ftxui::ComponentBase::Add	./FTXUI/include/ftxui/component/component_base.hpp	48;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(Component children)
ftxui::ComponentBase::CaptureMouse	./FTXUI/include/ftxui/component/component_base.hpp	94;"	kind:prototype	class:ftxui::ComponentBase	access:protected	signature:(const Event& event)
ftxui::ComponentBase::ChildAt	./FTXUI/include/ftxui/component/component_base.hpp	45;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(size_t i)
ftxui::ComponentBase::ChildCount	./FTXUI/include/ftxui/component/component_base.hpp	46;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
ftxui::ComponentBase::ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	32;"	kind:function	class:ftxui::ComponentBase	access:public	signature:(Components children)
ftxui::ComponentBase::ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	35;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
ftxui::ComponentBase::ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	38;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(const ComponentBase&)
ftxui::ComponentBase::ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	39;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(ComponentBase&&)
ftxui::ComponentBase::Detach	./FTXUI/include/ftxui/component/component_base.hpp	49;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
ftxui::ComponentBase::DetachAllChildren	./FTXUI/include/ftxui/component/component_base.hpp	50;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
ftxui::ComponentBase::Focusable	./FTXUI/include/ftxui/component/component_base.hpp	79;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:() const
ftxui::ComponentBase::Focused	./FTXUI/include/ftxui/component/component_base.hpp	84;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
ftxui::ComponentBase::Index	./FTXUI/include/ftxui/component/component_base.hpp	47;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
ftxui::ComponentBase::OnAnimation	./FTXUI/include/ftxui/component/component_base.hpp	65;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:(animation::Params& params)
ftxui::ComponentBase::OnEvent	./FTXUI/include/ftxui/component/component_base.hpp	62;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:(Event)
ftxui::ComponentBase::OnRender	./FTXUI/include/ftxui/component/component_base.hpp	56;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:()
ftxui::ComponentBase::Parent	./FTXUI/include/ftxui/component/component_base.hpp	44;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:() const
ftxui::ComponentBase::Render	./FTXUI/include/ftxui/component/component_base.hpp	53;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
ftxui::ComponentBase::SetActiveChild	./FTXUI/include/ftxui/component/component_base.hpp	87;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:(ComponentBase* child)
ftxui::ComponentBase::SetActiveChild	./FTXUI/include/ftxui/component/component_base.hpp	88;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(Component child)
ftxui::ComponentBase::TakeFocus	./FTXUI/include/ftxui/component/component_base.hpp	91;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:()
ftxui::ComponentBase::children_	./FTXUI/include/ftxui/component/component_base.hpp	96;"	kind:member	class:ftxui::ComponentBase	access:protected
ftxui::ComponentBase::in_render	./FTXUI/include/ftxui/component/component_base.hpp	100;"	kind:member	class:ftxui::ComponentBase	access:private
ftxui::ComponentBase::operator =	./FTXUI/include/ftxui/component/component_base.hpp	40;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(const ComponentBase&)
ftxui::ComponentBase::operator =	./FTXUI/include/ftxui/component/component_base.hpp	41;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(ComponentBase&&)
ftxui::ComponentBase::parent_	./FTXUI/include/ftxui/component/component_base.hpp	99;"	kind:member	class:ftxui::ComponentBase	access:private
ftxui::ComponentBase::~ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	34;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:()
ftxui::ConstRef	./FTXUI/include/ftxui/util/ref.hpp	17;"	kind:class	namespace:ftxui
ftxui::ConstRef::Address	./FTXUI/include/ftxui/util/ref.hpp	38;"	kind:function	class:ftxui::ConstRef	access:private	signature:() const
ftxui::ConstRef::ConstRef	./FTXUI/include/ftxui/util/ref.hpp	19;"	kind:prototype	class:ftxui::ConstRef	access:public	signature:()
ftxui::ConstRef::ConstRef	./FTXUI/include/ftxui/util/ref.hpp	20;"	kind:function	class:ftxui::ConstRef	access:public	signature:(T t)
ftxui::ConstRef::ConstRef	./FTXUI/include/ftxui/util/ref.hpp	21;"	kind:function	class:ftxui::ConstRef	access:public	signature:(const T* t)
ftxui::ConstRef::ConstRef	./FTXUI/include/ftxui/util/ref.hpp	23;"	kind:prototype	class:ftxui::ConstRef	access:public	signature:(const ConstRef<T>&)
ftxui::ConstRef::noexcept	./FTXUI/include/ftxui/util/ref.hpp	22;"	kind:member	class:ftxui::ConstRef	access:public
ftxui::ConstRef::noexcept	./FTXUI/include/ftxui/util/ref.hpp	24;"	kind:member	class:ftxui::ConstRef	access:public
ftxui::ConstRef::operator ()	./FTXUI/include/ftxui/util/ref.hpp	31;"	kind:function	class:ftxui::ConstRef	access:public	signature:() const
ftxui::ConstRef::operator *	./FTXUI/include/ftxui/util/ref.hpp	32;"	kind:function	class:ftxui::ConstRef	access:public	signature:() const
ftxui::ConstRef::operator ->	./FTXUI/include/ftxui/util/ref.hpp	33;"	kind:function	class:ftxui::ConstRef	access:public	signature:() const
ftxui::ConstRef::operator =	./FTXUI/include/ftxui/util/ref.hpp	28;"	kind:prototype	class:ftxui::ConstRef	access:public	signature:(const ConstRef<T>&)
ftxui::ConstRef::variant_	./FTXUI/include/ftxui/util/ref.hpp	36;"	kind:member	class:ftxui::ConstRef	access:private
ftxui::ConstRef::~ConstRef	./FTXUI/include/ftxui/util/ref.hpp	25;"	kind:prototype	class:ftxui::ConstRef	access:public	signature:()
ftxui::ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	116;"	kind:class	namespace:ftxui
ftxui::ConstStringListRef::Adapter	./FTXUI/include/ftxui/util/ref.hpp	119;"	kind:class	class:ftxui::ConstStringListRef	access:public
ftxui::ConstStringListRef::Adapter::Adapter	./FTXUI/include/ftxui/util/ref.hpp	121;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:()
ftxui::ConstStringListRef::Adapter::Adapter	./FTXUI/include/ftxui/util/ref.hpp	122;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:(const Adapter&)
ftxui::ConstStringListRef::Adapter::Adapter	./FTXUI/include/ftxui/util/ref.hpp	124;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:(Adapter&&)
ftxui::ConstStringListRef::Adapter::operator =	./FTXUI/include/ftxui/util/ref.hpp	123;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:(const Adapter&)
ftxui::ConstStringListRef::Adapter::operator =	./FTXUI/include/ftxui/util/ref.hpp	125;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:(Adapter&&)
ftxui::ConstStringListRef::Adapter::operator []	./FTXUI/include/ftxui/util/ref.hpp	128;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	implementation:pure virtual	signature:(size_t i) const
ftxui::ConstStringListRef::Adapter::size	./FTXUI/include/ftxui/util/ref.hpp	127;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	implementation:pure virtual	signature:() const
ftxui::ConstStringListRef::Adapter::~Adapter	./FTXUI/include/ftxui/util/ref.hpp	126;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	implementation:virtual	signature:()
ftxui::ConstStringListRef::ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	141;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:(ConstStringListRef&&)
ftxui::ConstStringListRef::ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	142;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:(const ConstStringListRef&)
ftxui::ConstStringListRef::ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	144;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(std::vector<std::string> value)
ftxui::ConstStringListRef::ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	148;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(const std::vector<std::string>* value)
ftxui::ConstStringListRef::ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	152;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(const std::vector<std::wstring>* value)
ftxui::ConstStringListRef::ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	156;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(Adapter* adapter)
ftxui::ConstStringListRef::ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	161;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(std::unique_ptr<AdapterType> adapter)
ftxui::ConstStringListRef::IndexedGetter	./FTXUI/include/ftxui/util/ref.hpp	192;"	kind:struct	class:ftxui::ConstStringListRef	access:private
ftxui::ConstStringListRef::IndexedGetter::IndexedGetter	./FTXUI/include/ftxui/util/ref.hpp	193;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(size_t index)
ftxui::ConstStringListRef::IndexedGetter::index_	./FTXUI/include/ftxui/util/ref.hpp	195;"	kind:member	struct:ftxui::ConstStringListRef::IndexedGetter	access:public
ftxui::ConstStringListRef::IndexedGetter::operator ()	./FTXUI/include/ftxui/util/ref.hpp	196;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const std::vector<std::string>& v) const
ftxui::ConstStringListRef::IndexedGetter::operator ()	./FTXUI/include/ftxui/util/ref.hpp	199;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const std::vector<std::string>* v) const
ftxui::ConstStringListRef::IndexedGetter::operator ()	./FTXUI/include/ftxui/util/ref.hpp	202;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const std::vector<std::wstring>* v) const
ftxui::ConstStringListRef::IndexedGetter::operator ()	./FTXUI/include/ftxui/util/ref.hpp	205;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const Adapter* v) const
ftxui::ConstStringListRef::IndexedGetter::operator ()	./FTXUI/include/ftxui/util/ref.hpp	206;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const std::unique_ptr<Adapter>& v) const
ftxui::ConstStringListRef::SizeVisitor	./FTXUI/include/ftxui/util/ref.hpp	176;"	kind:struct	class:ftxui::ConstStringListRef	access:private
ftxui::ConstStringListRef::SizeVisitor::operator ()	./FTXUI/include/ftxui/util/ref.hpp	177;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const std::vector<std::string>& v) const
ftxui::ConstStringListRef::SizeVisitor::operator ()	./FTXUI/include/ftxui/util/ref.hpp	180;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const std::vector<std::string>* v) const
ftxui::ConstStringListRef::SizeVisitor::operator ()	./FTXUI/include/ftxui/util/ref.hpp	183;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const std::vector<std::wstring>* v) const
ftxui::ConstStringListRef::SizeVisitor::operator ()	./FTXUI/include/ftxui/util/ref.hpp	186;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const Adapter* v) const
ftxui::ConstStringListRef::SizeVisitor::operator ()	./FTXUI/include/ftxui/util/ref.hpp	187;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const std::unique_ptr<Adapter>& v) const
ftxui::ConstStringListRef::operator =	./FTXUI/include/ftxui/util/ref.hpp	139;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:(const ConstStringListRef&)
ftxui::ConstStringListRef::operator =	./FTXUI/include/ftxui/util/ref.hpp	140;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:(ConstStringListRef&&)
ftxui::ConstStringListRef::operator []	./FTXUI/include/ftxui/util/ref.hpp	171;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(size_t i) const
ftxui::ConstStringListRef::size	./FTXUI/include/ftxui/util/ref.hpp	167;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:() const
ftxui::ConstStringListRef::variant_	./FTXUI/include/ftxui/util/ref.hpp	211;"	kind:member	class:ftxui::ConstStringListRef	access:private
ftxui::ConstStringListRef::~ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	138;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:()
ftxui::ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	94;"	kind:class	namespace:ftxui	inherits:ConstRef
ftxui::ConstStringRef::ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	100;"	kind:function	class:ftxui::ConstStringRef	access:public	signature:(const std::wstring ref)
ftxui::ConstStringRef::ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	102;"	kind:function	class:ftxui::ConstStringRef	access:public	signature:(const wchar_t* ref)
ftxui::ConstStringRef::ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	104;"	kind:function	class:ftxui::ConstStringRef	access:public	signature:(const char* ref)
ftxui::ConstStringRef::ConstStringRef	./FTXUI/include/ftxui/util/ref.hpp	98;"	kind:function	class:ftxui::ConstStringRef	access:public	signature:(const std::wstring* ref)
ftxui::Constraint	./FTXUI/include/ftxui/dom/elements.hpp	154;"	kind:enum	namespace:ftxui
ftxui::Container::Horizontal	./FTXUI/include/ftxui/component/component.hpp	41;"	kind:prototype	namespace:ftxui::Container	signature:(Components children)
ftxui::Container::Horizontal	./FTXUI/include/ftxui/component/component.hpp	42;"	kind:prototype	namespace:ftxui::Container	signature:(Components children, int* selector)
ftxui::Container::Horizontal	./FTXUI/src/ftxui/component/container.cpp	360;"	kind:function	namespace:ftxui::Container	signature:(Components children)
ftxui::Container::Horizontal	./FTXUI/src/ftxui/component/container.cpp	382;"	kind:function	namespace:ftxui::Container	signature:(Components children, int* selector)
ftxui::Container::Stacked	./FTXUI/include/ftxui/component/component.hpp	44;"	kind:prototype	namespace:ftxui::Container	signature:(Components children)
ftxui::Container::Stacked	./FTXUI/src/ftxui/component/container.cpp	432;"	kind:function	namespace:ftxui::Container	signature:(Components children)
ftxui::Container::Tab	./FTXUI/include/ftxui/component/component.hpp	43;"	kind:prototype	namespace:ftxui::Container	signature:(Components children, int* selector)
ftxui::Container::Tab	./FTXUI/src/ftxui/component/container.cpp	405;"	kind:function	namespace:ftxui::Container	signature:(Components children, int* selector)
ftxui::Container::Vertical	./FTXUI/include/ftxui/component/component.hpp	39;"	kind:prototype	namespace:ftxui::Container	signature:(Components children)
ftxui::Container::Vertical	./FTXUI/include/ftxui/component/component.hpp	40;"	kind:prototype	namespace:ftxui::Container	signature:(Components children, int* selector)
ftxui::Container::Vertical	./FTXUI/src/ftxui/component/container.cpp	317;"	kind:function	namespace:ftxui::Container	signature:(Components children)
ftxui::Container::Vertical	./FTXUI/src/ftxui/component/container.cpp	339;"	kind:function	namespace:ftxui::Container	signature:(Components children, int* selector)
ftxui::ContainerBase	./FTXUI/src/ftxui/component/container.cpp	18;"	kind:class	namespace:ftxui	file:	inherits:ComponentBase
ftxui::ContainerBase::ContainerBase	./FTXUI/src/ftxui/component/container.cpp	20;"	kind:function	class:ftxui::ContainerBase	access:public	signature:(Components children, int* selector)
ftxui::ContainerBase::EventHandler	./FTXUI/src/ftxui/component/container.cpp	63;"	kind:function	class:ftxui::ContainerBase	access:protected	implementation:virtual	signature:(Event )
ftxui::ContainerBase::MoveSelector	./FTXUI/src/ftxui/component/container.cpp	72;"	kind:function	class:ftxui::ContainerBase	access:protected	signature:(int dir)
ftxui::ContainerBase::MoveSelectorWrap	./FTXUI/src/ftxui/component/container.cpp	82;"	kind:function	class:ftxui::ContainerBase	access:protected	signature:(int dir)
ftxui::ContainerBase::OnMouseEvent	./FTXUI/src/ftxui/component/container.cpp	65;"	kind:function	class:ftxui::ContainerBase	access:protected	implementation:virtual	signature:(Event event)
ftxui::ContainerBase::selected_	./FTXUI/src/ftxui/component/container.cpp	69;"	kind:member	class:ftxui::ContainerBase	file:	access:protected
ftxui::ContainerBase::selector_	./FTXUI/src/ftxui/component/container.cpp	70;"	kind:member	class:ftxui::ContainerBase	file:	access:protected
ftxui::DASHED	./FTXUI/include/ftxui/dom/elements.hpp	29;"	kind:enumerator	enum:ftxui::BorderStyle
ftxui::DOUBLE	./FTXUI/include/ftxui/dom/elements.hpp	31;"	kind:enumerator	enum:ftxui::BorderStyle
ftxui::Dimension::Fit	./FTXUI/include/ftxui/dom/elements.hpp	192;"	kind:prototype	namespace:ftxui::Dimension	signature:(Element&, bool extend_beyond_screen = false)
ftxui::Dimension::Fit	./FTXUI/src/ftxui/dom/util.cpp	93;"	kind:function	class:ftxui::Dimension	signature:(Element& e, bool extend_beyond_screen)
ftxui::Dimension::Fixed	./FTXUI/include/ftxui/screen/screen.hpp	21;"	kind:prototype	namespace:ftxui::Dimension	signature:(int)
ftxui::Dimension::Fixed	./FTXUI/src/ftxui/screen/screen.cpp	375;"	kind:function	class:ftxui::Dimension	signature:(int v)
ftxui::Dimension::Full	./FTXUI/include/ftxui/screen/screen.hpp	22;"	kind:prototype	namespace:ftxui::Dimension	signature:()
ftxui::Dimension::Full	./FTXUI/src/ftxui/screen/screen.cpp	382;"	kind:function	class:ftxui::Dimension	signature:()
ftxui::Dimensions	./FTXUI/include/ftxui/screen/terminal.hpp	8;"	kind:struct	namespace:ftxui
ftxui::Dimensions::dimx	./FTXUI/include/ftxui/screen/terminal.hpp	9;"	kind:member	struct:ftxui::Dimensions	access:public
ftxui::Dimensions::dimy	./FTXUI/include/ftxui/screen/terminal.hpp	10;"	kind:member	struct:ftxui::Dimensions	access:public
ftxui::Direction	./FTXUI/include/ftxui/dom/direction.hpp	8;"	kind:class	namespace:ftxui
ftxui::Direction::Down	./FTXUI/include/ftxui/dom/direction.hpp	10;"	kind:member	class:ftxui::Direction	access:private
ftxui::Direction::Left	./FTXUI/include/ftxui/dom/direction.hpp	11;"	kind:member	class:ftxui::Direction	access:private
ftxui::Direction::Right	./FTXUI/include/ftxui/dom/direction.hpp	12;"	kind:member	class:ftxui::Direction	access:private
ftxui::Direction::Up	./FTXUI/include/ftxui/dom/direction.hpp	9;"	kind:member	class:ftxui::Direction	access:private
ftxui::Dropdown	./FTXUI/include/ftxui/component/component.hpp	75;"	kind:prototype	namespace:ftxui	signature:(ConstStringListRef entries, int* selected)
ftxui::Dropdown	./FTXUI/include/ftxui/component/component.hpp	76;"	kind:prototype	namespace:ftxui	signature:(DropdownOption options)
ftxui::Dropdown	./FTXUI/src/ftxui/component/dropdown.cpp	22;"	kind:function	namespace:ftxui	signature:(ConstStringListRef entries, int* selected)
ftxui::Dropdown	./FTXUI/src/ftxui/component/dropdown.cpp	33;"	kind:function	namespace:ftxui	signature:(DropdownOption option)
ftxui::DropdownOption	./FTXUI/include/ftxui/component/component_options.hpp	270;"	kind:struct	namespace:ftxui
ftxui::DropdownOption::checkbox	./FTXUI/include/ftxui/component/component_options.hpp	274;"	kind:member	struct:ftxui::DropdownOption	access:public
ftxui::DropdownOption::open	./FTXUI/include/ftxui/component/component_options.hpp	272;"	kind:member	struct:ftxui::DropdownOption	access:public
ftxui::DropdownOption::radiobox	./FTXUI/include/ftxui/component/component_options.hpp	276;"	kind:member	struct:ftxui::DropdownOption	access:public
ftxui::DropdownOption::transform	./FTXUI/include/ftxui/component/component_options.hpp	279;"	kind:member	struct:ftxui::DropdownOption	access:public
ftxui::EMPTY	./FTXUI/include/ftxui/dom/elements.hpp	33;"	kind:enumerator	enum:ftxui::BorderStyle
ftxui::EQUAL	./FTXUI/include/ftxui/dom/elements.hpp	154;"	kind:enumerator	enum:ftxui::Constraint
ftxui::EatCodePoint	./FTXUI/src/ftxui/screen/string.cpp	1174;"	kind:function	namespace:ftxui	signature:(const std::string& input, size_t start, size_t* end, uint32_t* ucs)
ftxui::EatCodePoint	./FTXUI/src/ftxui/screen/string.cpp	1244;"	kind:function	namespace:ftxui	signature:(const std::wstring& input, size_t start, size_t* end, uint32_t* ucs)
ftxui::EatCodePoint	./FTXUI/src/ftxui/screen/string_internal.hpp	13;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, size_t start, size_t* end, uint32_t* ucs)
ftxui::EatCodePoint	./FTXUI/src/ftxui/screen/string_internal.hpp	17;"	kind:prototype	namespace:ftxui	signature:(const std::wstring& input, size_t start, size_t* end, uint32_t* ucs)
ftxui::EntryState	./FTXUI/include/ftxui/component/component_options.hpp	23;"	kind:struct	namespace:ftxui
ftxui::EntryState::active	./FTXUI/include/ftxui/component/component_options.hpp	26;"	kind:member	struct:ftxui::EntryState	access:public
ftxui::EntryState::focused	./FTXUI/include/ftxui/component/component_options.hpp	27;"	kind:member	struct:ftxui::EntryState	access:public
ftxui::EntryState::index	./FTXUI/include/ftxui/component/component_options.hpp	28;"	kind:member	struct:ftxui::EntryState	access:public
ftxui::EntryState::label	./FTXUI/include/ftxui/component/component_options.hpp	24;"	kind:member	struct:ftxui::EntryState	access:public
ftxui::EntryState::state	./FTXUI/include/ftxui/component/component_options.hpp	25;"	kind:member	struct:ftxui::EntryState	access:public
ftxui::Event	./FTXUI/include/ftxui/component/event.hpp	27;"	kind:struct	namespace:ftxui
ftxui::Event::A	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::A	./FTXUI/src/ftxui/component/event.cpp	356;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltA	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltA	./FTXUI/src/ftxui/component/event.cpp	410;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltB	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltB	./FTXUI/src/ftxui/component/event.cpp	411;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltC	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltC	./FTXUI/src/ftxui/component/event.cpp	412;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltD	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltD	./FTXUI/src/ftxui/component/event.cpp	413;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltE	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltE	./FTXUI/src/ftxui/component/event.cpp	414;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltF	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltF	./FTXUI/src/ftxui/component/event.cpp	415;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltG	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltG	./FTXUI/src/ftxui/component/event.cpp	416;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltH	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltH	./FTXUI/src/ftxui/component/event.cpp	417;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltI	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltI	./FTXUI/src/ftxui/component/event.cpp	418;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltJ	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltJ	./FTXUI/src/ftxui/component/event.cpp	419;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltK	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltK	./FTXUI/src/ftxui/component/event.cpp	420;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltL	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltL	./FTXUI/src/ftxui/component/event.cpp	421;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltM	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltM	./FTXUI/src/ftxui/component/event.cpp	422;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltN	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltN	./FTXUI/src/ftxui/component/event.cpp	423;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltO	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltO	./FTXUI/src/ftxui/component/event.cpp	424;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltP	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltP	./FTXUI/src/ftxui/component/event.cpp	425;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltQ	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltQ	./FTXUI/src/ftxui/component/event.cpp	426;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltR	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltR	./FTXUI/src/ftxui/component/event.cpp	427;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltS	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltS	./FTXUI/src/ftxui/component/event.cpp	428;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltT	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltT	./FTXUI/src/ftxui/component/event.cpp	429;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltU	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltU	./FTXUI/src/ftxui/component/event.cpp	430;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltV	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltV	./FTXUI/src/ftxui/component/event.cpp	431;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltW	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltW	./FTXUI/src/ftxui/component/event.cpp	432;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltX	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltX	./FTXUI/src/ftxui/component/event.cpp	433;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltY	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltY	./FTXUI/src/ftxui/component/event.cpp	434;"	kind:member	class:ftxui::Event	file:
ftxui::Event::AltZ	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::AltZ	./FTXUI/src/ftxui/component/event.cpp	435;"	kind:member	class:ftxui::Event	file:
ftxui::Event::ArrowDown	./FTXUI/include/ftxui/component/event.hpp	41;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::ArrowDown	./FTXUI/src/ftxui/component/event.cpp	295;"	kind:member	class:ftxui::Event	file:
ftxui::Event::ArrowDownCtrl	./FTXUI/include/ftxui/component/event.hpp	46;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::ArrowDownCtrl	./FTXUI/src/ftxui/component/event.cpp	299;"	kind:member	class:ftxui::Event	file:
ftxui::Event::ArrowLeft	./FTXUI/include/ftxui/component/event.hpp	38;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::ArrowLeft	./FTXUI/src/ftxui/component/event.cpp	292;"	kind:member	class:ftxui::Event	file:
ftxui::Event::ArrowLeftCtrl	./FTXUI/include/ftxui/component/event.hpp	43;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::ArrowLeftCtrl	./FTXUI/src/ftxui/component/event.cpp	296;"	kind:member	class:ftxui::Event	file:
ftxui::Event::ArrowRight	./FTXUI/include/ftxui/component/event.hpp	39;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::ArrowRight	./FTXUI/src/ftxui/component/event.cpp	293;"	kind:member	class:ftxui::Event	file:
ftxui::Event::ArrowRightCtrl	./FTXUI/include/ftxui/component/event.hpp	44;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::ArrowRightCtrl	./FTXUI/src/ftxui/component/event.cpp	297;"	kind:member	class:ftxui::Event	file:
ftxui::Event::ArrowUp	./FTXUI/include/ftxui/component/event.hpp	40;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::ArrowUp	./FTXUI/src/ftxui/component/event.cpp	294;"	kind:member	class:ftxui::Event	file:
ftxui::Event::ArrowUpCtrl	./FTXUI/include/ftxui/component/event.hpp	45;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::ArrowUpCtrl	./FTXUI/src/ftxui/component/event.cpp	298;"	kind:member	class:ftxui::Event	file:
ftxui::Event::B	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::B	./FTXUI/src/ftxui/component/event.cpp	357;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Backspace	./FTXUI/include/ftxui/component/event.hpp	49;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Backspace	./FTXUI/src/ftxui/component/event.cpp	300;"	kind:member	class:ftxui::Event	file:
ftxui::Event::C	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::C	./FTXUI/src/ftxui/component/event.cpp	358;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Character	./FTXUI/include/ftxui/component/event.hpp	29;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string)
ftxui::Event::Character	./FTXUI/include/ftxui/component/event.hpp	30;"	kind:prototype	struct:ftxui::Event	access:public	signature:(char)
ftxui::Event::Character	./FTXUI/include/ftxui/component/event.hpp	31;"	kind:prototype	struct:ftxui::Event	access:public	signature:(wchar_t)
ftxui::Event::Character	./FTXUI/src/ftxui/component/event.cpp	29;"	kind:function	class:ftxui::Event	signature:(std::string input)
ftxui::Event::Character	./FTXUI/src/ftxui/component/event.cpp	40;"	kind:function	class:ftxui::Event	signature:(char c)
ftxui::Event::Character	./FTXUI/src/ftxui/component/event.cpp	48;"	kind:function	class:ftxui::Event	signature:(wchar_t c)
ftxui::Event::CtrlA	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlA	./FTXUI/src/ftxui/component/event.cpp	383;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltA	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltA	./FTXUI/src/ftxui/component/event.cpp	437;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltB	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltB	./FTXUI/src/ftxui/component/event.cpp	438;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltC	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltC	./FTXUI/src/ftxui/component/event.cpp	439;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltD	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltD	./FTXUI/src/ftxui/component/event.cpp	440;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltE	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltE	./FTXUI/src/ftxui/component/event.cpp	441;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltF	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltF	./FTXUI/src/ftxui/component/event.cpp	442;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltG	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltG	./FTXUI/src/ftxui/component/event.cpp	443;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltH	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltH	./FTXUI/src/ftxui/component/event.cpp	444;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltI	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltI	./FTXUI/src/ftxui/component/event.cpp	445;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltJ	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltJ	./FTXUI/src/ftxui/component/event.cpp	446;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltK	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltK	./FTXUI/src/ftxui/component/event.cpp	447;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltL	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltL	./FTXUI/src/ftxui/component/event.cpp	448;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltM	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltM	./FTXUI/src/ftxui/component/event.cpp	449;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltN	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltN	./FTXUI/src/ftxui/component/event.cpp	450;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltO	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltO	./FTXUI/src/ftxui/component/event.cpp	451;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltP	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltP	./FTXUI/src/ftxui/component/event.cpp	452;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltQ	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltQ	./FTXUI/src/ftxui/component/event.cpp	453;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltR	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltR	./FTXUI/src/ftxui/component/event.cpp	454;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltS	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltS	./FTXUI/src/ftxui/component/event.cpp	455;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltT	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltT	./FTXUI/src/ftxui/component/event.cpp	456;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltU	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltU	./FTXUI/src/ftxui/component/event.cpp	457;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltV	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltV	./FTXUI/src/ftxui/component/event.cpp	458;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltW	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltW	./FTXUI/src/ftxui/component/event.cpp	459;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltX	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltX	./FTXUI/src/ftxui/component/event.cpp	460;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltY	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltY	./FTXUI/src/ftxui/component/event.cpp	461;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlAltZ	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlAltZ	./FTXUI/src/ftxui/component/event.cpp	462;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlB	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlB	./FTXUI/src/ftxui/component/event.cpp	384;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlC	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlC	./FTXUI/src/ftxui/component/event.cpp	385;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlD	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlD	./FTXUI/src/ftxui/component/event.cpp	386;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlE	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlE	./FTXUI/src/ftxui/component/event.cpp	387;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlF	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlF	./FTXUI/src/ftxui/component/event.cpp	388;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlG	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlG	./FTXUI/src/ftxui/component/event.cpp	389;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlH	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlH	./FTXUI/src/ftxui/component/event.cpp	390;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlI	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlI	./FTXUI/src/ftxui/component/event.cpp	391;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlJ	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlJ	./FTXUI/src/ftxui/component/event.cpp	392;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlK	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlK	./FTXUI/src/ftxui/component/event.cpp	393;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlL	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlL	./FTXUI/src/ftxui/component/event.cpp	394;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlM	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlM	./FTXUI/src/ftxui/component/event.cpp	395;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlN	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlN	./FTXUI/src/ftxui/component/event.cpp	396;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlO	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlO	./FTXUI/src/ftxui/component/event.cpp	397;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlP	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlP	./FTXUI/src/ftxui/component/event.cpp	398;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlQ	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlQ	./FTXUI/src/ftxui/component/event.cpp	399;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlR	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlR	./FTXUI/src/ftxui/component/event.cpp	400;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlS	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlS	./FTXUI/src/ftxui/component/event.cpp	401;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlT	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlT	./FTXUI/src/ftxui/component/event.cpp	402;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlU	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlU	./FTXUI/src/ftxui/component/event.cpp	403;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlV	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlV	./FTXUI/src/ftxui/component/event.cpp	404;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlW	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlW	./FTXUI/src/ftxui/component/event.cpp	405;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlX	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlX	./FTXUI/src/ftxui/component/event.cpp	406;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlY	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlY	./FTXUI/src/ftxui/component/event.cpp	407;"	kind:member	class:ftxui::Event	file:
ftxui::Event::CtrlZ	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::CtrlZ	./FTXUI/src/ftxui/component/event.cpp	408;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Cursor	./FTXUI/include/ftxui/component/event.hpp	136;"	kind:struct	struct:ftxui::Event	access:private
ftxui::Event::Cursor::x	./FTXUI/include/ftxui/component/event.hpp	137;"	kind:member	struct:ftxui::Event::Cursor	access:public
ftxui::Event::Cursor::y	./FTXUI/include/ftxui/component/event.hpp	138;"	kind:member	struct:ftxui::Event::Cursor	access:public
ftxui::Event::CursorPosition	./FTXUI/include/ftxui/component/event.hpp	34;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string, int x, int y)
ftxui::Event::CursorPosition	./FTXUI/src/ftxui/component/event.cpp	87;"	kind:function	class:ftxui::Event	signature:(std::string input, int x, int y)
ftxui::Event::CursorShape	./FTXUI/include/ftxui/component/event.hpp	35;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string, int shape)
ftxui::Event::CursorShape	./FTXUI/src/ftxui/component/event.cpp	67;"	kind:function	class:ftxui::Event	signature:(std::string input, int shape)
ftxui::Event::Custom	./FTXUI/include/ftxui/component/event.hpp	95;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Custom	./FTXUI/src/ftxui/component/event.cpp	327;"	kind:member	class:ftxui::Event	file:
ftxui::Event::D	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::D	./FTXUI/src/ftxui/component/event.cpp	359;"	kind:member	class:ftxui::Event	file:
ftxui::Event::DebugString	./FTXUI/include/ftxui/component/event.hpp	119;"	kind:prototype	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::DebugString	./FTXUI/src/ftxui/component/event.cpp	96;"	kind:function	class:ftxui::Event	signature:() const
ftxui::Event::Delete	./FTXUI/include/ftxui/component/event.hpp	50;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Delete	./FTXUI/src/ftxui/component/event.cpp	301;"	kind:member	class:ftxui::Event	file:
ftxui::Event::E	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::E	./FTXUI/src/ftxui/component/event.cpp	360;"	kind:member	class:ftxui::Event	file:
ftxui::Event::End	./FTXUI/include/ftxui/component/event.hpp	59;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::End	./FTXUI/src/ftxui/component/event.cpp	324;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Escape	./FTXUI/include/ftxui/component/event.hpp	52;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Escape	./FTXUI/src/ftxui/component/event.cpp	302;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F	./FTXUI/src/ftxui/component/event.cpp	361;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F1	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F1	./FTXUI/src/ftxui/component/event.cpp	309;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F10	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F10	./FTXUI/src/ftxui/component/event.cpp	318;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F11	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F11	./FTXUI/src/ftxui/component/event.cpp	319;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F12	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F12	./FTXUI/src/ftxui/component/event.cpp	320;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F2	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F2	./FTXUI/src/ftxui/component/event.cpp	310;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F3	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F3	./FTXUI/src/ftxui/component/event.cpp	311;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F4	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F4	./FTXUI/src/ftxui/component/event.cpp	312;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F5	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F5	./FTXUI/src/ftxui/component/event.cpp	313;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F6	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F6	./FTXUI/src/ftxui/component/event.cpp	314;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F7	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F7	./FTXUI/src/ftxui/component/event.cpp	315;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F8	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F8	./FTXUI/src/ftxui/component/event.cpp	316;"	kind:member	class:ftxui::Event	file:
ftxui::Event::F9	./FTXUI/include/ftxui/component/event.hpp	64;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::F9	./FTXUI/src/ftxui/component/event.cpp	317;"	kind:member	class:ftxui::Event	file:
ftxui::Event::G	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::G	./FTXUI/src/ftxui/component/event.cpp	362;"	kind:member	class:ftxui::Event	file:
ftxui::Event::H	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::H	./FTXUI/src/ftxui/component/event.cpp	363;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Home	./FTXUI/include/ftxui/component/event.hpp	58;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Home	./FTXUI/src/ftxui/component/event.cpp	323;"	kind:member	class:ftxui::Event	file:
ftxui::Event::I	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::I	./FTXUI/src/ftxui/component/event.cpp	364;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Insert	./FTXUI/include/ftxui/component/event.hpp	57;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Insert	./FTXUI/src/ftxui/component/event.cpp	322;"	kind:member	class:ftxui::Event	file:
ftxui::Event::J	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::J	./FTXUI/src/ftxui/component/event.cpp	365;"	kind:member	class:ftxui::Event	file:
ftxui::Event::K	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::K	./FTXUI/src/ftxui/component/event.cpp	366;"	kind:member	class:ftxui::Event	file:
ftxui::Event::L	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::L	./FTXUI/src/ftxui/component/event.cpp	367;"	kind:member	class:ftxui::Event	file:
ftxui::Event::M	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::M	./FTXUI/src/ftxui/component/event.cpp	368;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Mouse	./FTXUI/include/ftxui/component/event.hpp	33;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string, Mouse mouse)
ftxui::Event::Mouse	./FTXUI/src/ftxui/component/event.cpp	57;"	kind:function	class:ftxui::Event	signature:(std::string input, struct Mouse mouse)
ftxui::Event::N	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::N	./FTXUI/src/ftxui/component/event.cpp	369;"	kind:member	class:ftxui::Event	file:
ftxui::Event::O	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::O	./FTXUI/src/ftxui/component/event.cpp	370;"	kind:member	class:ftxui::Event	file:
ftxui::Event::P	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::P	./FTXUI/src/ftxui/component/event.cpp	371;"	kind:member	class:ftxui::Event	file:
ftxui::Event::PageDown	./FTXUI/include/ftxui/component/event.hpp	61;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::PageDown	./FTXUI/src/ftxui/component/event.cpp	326;"	kind:member	class:ftxui::Event	file:
ftxui::Event::PageUp	./FTXUI/include/ftxui/component/event.hpp	60;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::PageUp	./FTXUI/src/ftxui/component/event.cpp	325;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Q	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Q	./FTXUI/src/ftxui/component/event.cpp	372;"	kind:member	class:ftxui::Event	file:
ftxui::Event::R	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::R	./FTXUI/src/ftxui/component/event.cpp	373;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Return	./FTXUI/include/ftxui/component/event.hpp	51;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Return	./FTXUI/src/ftxui/component/event.cpp	303;"	kind:member	class:ftxui::Event	file:
ftxui::Event::S	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::S	./FTXUI/src/ftxui/component/event.cpp	374;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Special	./FTXUI/include/ftxui/component/event.hpp	32;"	kind:prototype	struct:ftxui::Event	access:public	signature:(std::string)
ftxui::Event::Special	./FTXUI/src/ftxui/component/event.cpp	79;"	kind:function	class:ftxui::Event	signature:(std::string input)
ftxui::Event::T	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::T	./FTXUI/src/ftxui/component/event.cpp	375;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Tab	./FTXUI/include/ftxui/component/event.hpp	53;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Tab	./FTXUI/src/ftxui/component/event.cpp	304;"	kind:member	class:ftxui::Event	file:
ftxui::Event::TabReverse	./FTXUI/include/ftxui/component/event.hpp	54;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::TabReverse	./FTXUI/src/ftxui/component/event.cpp	305;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Type	./FTXUI/include/ftxui/component/event.hpp	127;"	kind:class	struct:ftxui::Event	access:private
ftxui::Event::Type::Character	./FTXUI/include/ftxui/component/event.hpp	129;"	kind:member	class:ftxui::Event::Type	access:private
ftxui::Event::Type::CursorPosition	./FTXUI/include/ftxui/component/event.hpp	131;"	kind:member	class:ftxui::Event::Type	access:private
ftxui::Event::Type::CursorShape	./FTXUI/include/ftxui/component/event.hpp	132;"	kind:member	class:ftxui::Event::Type	access:private
ftxui::Event::Type::Mouse	./FTXUI/include/ftxui/component/event.hpp	130;"	kind:member	class:ftxui::Event::Type	access:private
ftxui::Event::Type::Unknown	./FTXUI/include/ftxui/component/event.hpp	128;"	kind:member	class:ftxui::Event::Type	access:private
ftxui::Event::U	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::U	./FTXUI/src/ftxui/component/event.cpp	376;"	kind:member	class:ftxui::Event	file:
ftxui::Event::V	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::V	./FTXUI/src/ftxui/component/event.cpp	377;"	kind:member	class:ftxui::Event	file:
ftxui::Event::W	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::W	./FTXUI/src/ftxui/component/event.cpp	378;"	kind:member	class:ftxui::Event	file:
ftxui::Event::X	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::X	./FTXUI/src/ftxui/component/event.cpp	379;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Y	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Y	./FTXUI/src/ftxui/component/event.cpp	380;"	kind:member	class:ftxui::Event	file:
ftxui::Event::Z	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::Z	./FTXUI/src/ftxui/component/event.cpp	381;"	kind:member	class:ftxui::Event	file:
ftxui::Event::__anon1::cursor	./FTXUI/include/ftxui/component/event.hpp	143;"	kind:member	union:ftxui::Event::__anon1	typeref:struct:ftxui::Event::__anon1::Cursor	access:public
ftxui::Event::__anon1::cursor_shape	./FTXUI/include/ftxui/component/event.hpp	144;"	kind:member	union:ftxui::Event::__anon1	access:public
ftxui::Event::__anon1::mouse	./FTXUI/include/ftxui/component/event.hpp	142;"	kind:member	union:ftxui::Event::__anon1	typeref:struct:ftxui::Event::__anon1::Mouse	access:public
ftxui::Event::a	./FTXUI/include/ftxui/component/event.hpp	67;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::a	./FTXUI/src/ftxui/component/event.cpp	329;"	kind:member	class:ftxui::Event	file:
ftxui::Event::b	./FTXUI/include/ftxui/component/event.hpp	68;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::b	./FTXUI/src/ftxui/component/event.cpp	330;"	kind:member	class:ftxui::Event	file:
ftxui::Event::c	./FTXUI/include/ftxui/component/event.hpp	69;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::c	./FTXUI/src/ftxui/component/event.cpp	331;"	kind:member	class:ftxui::Event	file:
ftxui::Event::character	./FTXUI/include/ftxui/component/event.hpp	105;"	kind:function	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::cursor_shape	./FTXUI/include/ftxui/component/event.hpp	116;"	kind:function	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::cursor_x	./FTXUI/include/ftxui/component/event.hpp	112;"	kind:function	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::cursor_y	./FTXUI/include/ftxui/component/event.hpp	113;"	kind:function	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::d	./FTXUI/include/ftxui/component/event.hpp	70;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::d	./FTXUI/src/ftxui/component/event.cpp	332;"	kind:member	class:ftxui::Event	file:
ftxui::Event::data_	./FTXUI/include/ftxui/component/event.hpp	145;"	kind:member	struct:ftxui::Event	typeref:union:ftxui::Event::__anon1	access:private
ftxui::Event::e	./FTXUI/include/ftxui/component/event.hpp	71;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::e	./FTXUI/src/ftxui/component/event.cpp	333;"	kind:member	class:ftxui::Event	file:
ftxui::Event::f	./FTXUI/include/ftxui/component/event.hpp	72;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::f	./FTXUI/src/ftxui/component/event.cpp	334;"	kind:member	class:ftxui::Event	file:
ftxui::Event::g	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::g	./FTXUI/src/ftxui/component/event.cpp	335;"	kind:member	class:ftxui::Event	file:
ftxui::Event::h	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::h	./FTXUI/src/ftxui/component/event.cpp	336;"	kind:member	class:ftxui::Event	file:
ftxui::Event::i	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::i	./FTXUI/src/ftxui/component/event.cpp	337;"	kind:member	class:ftxui::Event	file:
ftxui::Event::input	./FTXUI/include/ftxui/component/event.hpp	102;"	kind:function	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::input_	./FTXUI/include/ftxui/component/event.hpp	147;"	kind:member	struct:ftxui::Event	access:private
ftxui::Event::is_character	./FTXUI/include/ftxui/component/event.hpp	104;"	kind:function	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::is_cursor_position	./FTXUI/include/ftxui/component/event.hpp	111;"	kind:function	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::is_cursor_shape	./FTXUI/include/ftxui/component/event.hpp	115;"	kind:function	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::is_mouse	./FTXUI/include/ftxui/component/event.hpp	107;"	kind:function	struct:ftxui::Event	access:public	signature:() const
ftxui::Event::j	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::j	./FTXUI/src/ftxui/component/event.cpp	338;"	kind:member	class:ftxui::Event	file:
ftxui::Event::k	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::k	./FTXUI/src/ftxui/component/event.cpp	339;"	kind:member	class:ftxui::Event	file:
ftxui::Event::l	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::l	./FTXUI/src/ftxui/component/event.cpp	340;"	kind:member	class:ftxui::Event	file:
ftxui::Event::m	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::m	./FTXUI/src/ftxui/component/event.cpp	341;"	kind:member	class:ftxui::Event	file:
ftxui::Event::mouse	./FTXUI/include/ftxui/component/event.hpp	108;"	kind:function	struct:ftxui::Event	access:public	signature:()
ftxui::Event::n	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::n	./FTXUI/src/ftxui/component/event.cpp	342;"	kind:member	class:ftxui::Event	file:
ftxui::Event::o	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::o	./FTXUI/src/ftxui/component/event.cpp	343;"	kind:member	class:ftxui::Event	file:
ftxui::Event::operator !=	./FTXUI/include/ftxui/component/event.hpp	99;"	kind:function	struct:ftxui::Event	access:public	signature:(const Event& other) const
ftxui::Event::operator <	./FTXUI/include/ftxui/component/event.hpp	100;"	kind:function	struct:ftxui::Event	access:public	signature:(const Event& other) const
ftxui::Event::operator ==	./FTXUI/include/ftxui/component/event.hpp	98;"	kind:function	struct:ftxui::Event	access:public	signature:(const Event& other) const
ftxui::Event::p	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::p	./FTXUI/src/ftxui/component/event.cpp	344;"	kind:member	class:ftxui::Event	file:
ftxui::Event::q	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::q	./FTXUI/src/ftxui/component/event.cpp	345;"	kind:member	class:ftxui::Event	file:
ftxui::Event::r	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::r	./FTXUI/src/ftxui/component/event.cpp	346;"	kind:member	class:ftxui::Event	file:
ftxui::Event::s	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::s	./FTXUI/src/ftxui/component/event.cpp	347;"	kind:member	class:ftxui::Event	file:
ftxui::Event::screen_	./FTXUI/include/ftxui/component/event.hpp	122;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::t	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::t	./FTXUI/src/ftxui/component/event.cpp	348;"	kind:member	class:ftxui::Event	file:
ftxui::Event::type_	./FTXUI/include/ftxui/component/event.hpp	134;"	kind:member	struct:ftxui::Event	access:private
ftxui::Event::u	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::u	./FTXUI/src/ftxui/component/event.cpp	349;"	kind:member	class:ftxui::Event	file:
ftxui::Event::v	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::v	./FTXUI/src/ftxui/component/event.cpp	350;"	kind:member	class:ftxui::Event	file:
ftxui::Event::w	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::w	./FTXUI/src/ftxui/component/event.cpp	351;"	kind:member	class:ftxui::Event	file:
ftxui::Event::x	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::x	./FTXUI/src/ftxui/component/event.cpp	352;"	kind:member	class:ftxui::Event	file:
ftxui::Event::y	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::y	./FTXUI/src/ftxui/component/event.cpp	353;"	kind:member	class:ftxui::Event	file:
ftxui::Event::z	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
ftxui::Event::z	./FTXUI/src/ftxui/component/event.cpp	354;"	kind:member	class:ftxui::Event	file:
ftxui::FlexboxConfig	./FTXUI/include/ftxui/dom/flexbox_config.hpp	15;"	kind:struct	namespace:ftxui
ftxui::FlexboxConfig::AlignContent	./FTXUI/include/ftxui/dom/flexbox_config.hpp	82;"	kind:class	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::AlignContent::Center	./FTXUI/include/ftxui/dom/flexbox_config.hpp	85;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
ftxui::FlexboxConfig::AlignContent::FlexEnd	./FTXUI/include/ftxui/dom/flexbox_config.hpp	84;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
ftxui::FlexboxConfig::AlignContent::FlexStart	./FTXUI/include/ftxui/dom/flexbox_config.hpp	83;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
ftxui::FlexboxConfig::AlignContent::SpaceAround	./FTXUI/include/ftxui/dom/flexbox_config.hpp	88;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
ftxui::FlexboxConfig::AlignContent::SpaceBetween	./FTXUI/include/ftxui/dom/flexbox_config.hpp	87;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
ftxui::FlexboxConfig::AlignContent::SpaceEvenly	./FTXUI/include/ftxui/dom/flexbox_config.hpp	90;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
ftxui::FlexboxConfig::AlignContent::Stretch	./FTXUI/include/ftxui/dom/flexbox_config.hpp	86;"	kind:member	class:ftxui::FlexboxConfig::AlignContent	access:private
ftxui::FlexboxConfig::AlignItems	./FTXUI/include/ftxui/dom/flexbox_config.hpp	71;"	kind:class	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::AlignItems::Center	./FTXUI/include/ftxui/dom/flexbox_config.hpp	74;"	kind:member	class:ftxui::FlexboxConfig::AlignItems	access:private
ftxui::FlexboxConfig::AlignItems::FlexEnd	./FTXUI/include/ftxui/dom/flexbox_config.hpp	73;"	kind:member	class:ftxui::FlexboxConfig::AlignItems	access:private
ftxui::FlexboxConfig::AlignItems::FlexStart	./FTXUI/include/ftxui/dom/flexbox_config.hpp	72;"	kind:member	class:ftxui::FlexboxConfig::AlignItems	access:private
ftxui::FlexboxConfig::AlignItems::Stretch	./FTXUI/include/ftxui/dom/flexbox_config.hpp	75;"	kind:member	class:ftxui::FlexboxConfig::AlignItems	access:private
ftxui::FlexboxConfig::Direction	./FTXUI/include/ftxui/dom/flexbox_config.hpp	20;"	kind:class	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::Direction::Column	./FTXUI/include/ftxui/dom/flexbox_config.hpp	23;"	kind:member	class:ftxui::FlexboxConfig::Direction	access:private
ftxui::FlexboxConfig::Direction::Row	./FTXUI/include/ftxui/dom/flexbox_config.hpp	21;"	kind:member	class:ftxui::FlexboxConfig::Direction	access:private
ftxui::FlexboxConfig::Direction::RowInversed	./FTXUI/include/ftxui/dom/flexbox_config.hpp	22;"	kind:member	class:ftxui::FlexboxConfig::Direction	access:private
ftxui::FlexboxConfig::JustifyContent	./FTXUI/include/ftxui/dom/flexbox_config.hpp	44;"	kind:class	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::JustifyContent::Center	./FTXUI/include/ftxui/dom/flexbox_config.hpp	50;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
ftxui::FlexboxConfig::JustifyContent::FlexEnd	./FTXUI/include/ftxui/dom/flexbox_config.hpp	48;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
ftxui::FlexboxConfig::JustifyContent::FlexStart	./FTXUI/include/ftxui/dom/flexbox_config.hpp	46;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
ftxui::FlexboxConfig::JustifyContent::SpaceAround	./FTXUI/include/ftxui/dom/flexbox_config.hpp	61;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
ftxui::FlexboxConfig::JustifyContent::SpaceBetween	./FTXUI/include/ftxui/dom/flexbox_config.hpp	55;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
ftxui::FlexboxConfig::JustifyContent::SpaceEvenly	./FTXUI/include/ftxui/dom/flexbox_config.hpp	64;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
ftxui::FlexboxConfig::JustifyContent::Stretch	./FTXUI/include/ftxui/dom/flexbox_config.hpp	52;"	kind:member	class:ftxui::FlexboxConfig::JustifyContent	access:private
ftxui::FlexboxConfig::Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	104;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::Direction)
ftxui::FlexboxConfig::Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	105;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::Wrap)
ftxui::FlexboxConfig::Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	106;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::JustifyContent)
ftxui::FlexboxConfig::Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	107;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::AlignItems)
ftxui::FlexboxConfig::Set	./FTXUI/include/ftxui/dom/flexbox_config.hpp	108;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(FlexboxConfig::AlignContent)
ftxui::FlexboxConfig::Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	10;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::Direction d)
ftxui::FlexboxConfig::Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	17;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::Wrap w)
ftxui::FlexboxConfig::Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	24;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::JustifyContent j)
ftxui::FlexboxConfig::Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	31;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::AlignItems a)
ftxui::FlexboxConfig::Set	./FTXUI/src/ftxui/dom/flexbox_config.cpp	38;"	kind:function	class:ftxui::FlexboxConfig	signature:(FlexboxConfig::AlignContent a)
ftxui::FlexboxConfig::SetGap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	109;"	kind:prototype	struct:ftxui::FlexboxConfig	access:public	signature:(int gap_x, int gap_y)
ftxui::FlexboxConfig::SetGap	./FTXUI/src/ftxui/dom/flexbox_config.cpp	45;"	kind:function	class:ftxui::FlexboxConfig	signature:(int x, int y)
ftxui::FlexboxConfig::Wrap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	31;"	kind:class	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::Wrap::NoWrap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	32;"	kind:member	class:ftxui::FlexboxConfig::Wrap	access:private
ftxui::FlexboxConfig::Wrap::Wrap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	33;"	kind:member	class:ftxui::FlexboxConfig::Wrap	access:private
ftxui::FlexboxConfig::Wrap::WrapInversed	./FTXUI/include/ftxui/dom/flexbox_config.hpp	34;"	kind:member	class:ftxui::FlexboxConfig::Wrap	access:private
ftxui::FlexboxConfig::align_content	./FTXUI/include/ftxui/dom/flexbox_config.hpp	93;"	kind:member	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::align_items	./FTXUI/include/ftxui/dom/flexbox_config.hpp	77;"	kind:member	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::direction	./FTXUI/include/ftxui/dom/flexbox_config.hpp	27;"	kind:member	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::gap_x	./FTXUI/include/ftxui/dom/flexbox_config.hpp	95;"	kind:member	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::gap_y	./FTXUI/include/ftxui/dom/flexbox_config.hpp	96;"	kind:member	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::justify_content	./FTXUI/include/ftxui/dom/flexbox_config.hpp	66;"	kind:member	struct:ftxui::FlexboxConfig	access:public
ftxui::FlexboxConfig::wrap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	37;"	kind:member	struct:ftxui::FlexboxConfig	access:public
ftxui::GREATER_THAN	./FTXUI/include/ftxui/dom/elements.hpp	154;"	kind:enumerator	enum:ftxui::Constraint
ftxui::GetColorInfo	./FTXUI/include/ftxui/screen/color_info.hpp	24;"	kind:prototype	namespace:ftxui	signature:(Color::Palette256 index)
ftxui::GetColorInfo	./FTXUI/include/ftxui/screen/color_info.hpp	25;"	kind:prototype	namespace:ftxui	signature:(Color::Palette16 index)
ftxui::GetColorInfo	./FTXUI/src/ftxui/screen/color_info.cpp	272;"	kind:function	namespace:ftxui	signature:(Color::Palette256 index)
ftxui::GetColorInfo	./FTXUI/src/ftxui/screen/color_info.cpp	276;"	kind:function	namespace:ftxui	signature:(Color::Palette16 index)
ftxui::GetNodeSelectedContent	./FTXUI/include/ftxui/dom/node.hpp	73;"	kind:prototype	namespace:ftxui	signature:(Screen& screen, Node* node, Selection& selection)
ftxui::GetNodeSelectedContent	./FTXUI/src/ftxui/dom/node.cpp	172;"	kind:function	namespace:ftxui	signature:(Screen& screen, Node* node, Selection& selection)
ftxui::GlyphCount	./FTXUI/src/ftxui/screen/string.cpp	1505;"	kind:function	namespace:ftxui	signature:(const std::string& input)
ftxui::GlyphCount	./FTXUI/src/ftxui/screen/string_internal.hpp	36;"	kind:prototype	namespace:ftxui	signature:(const std::string& input)
ftxui::GlyphIterate	./FTXUI/src/ftxui/screen/string.cpp	1450;"	kind:function	namespace:ftxui	signature:(const std::string& input, int glyph_offset, size_t start)
ftxui::GlyphIterate	./FTXUI/src/ftxui/screen/string_internal.hpp	31;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, int glyph_offset, size_t start = 0)
ftxui::GlyphNext	./FTXUI/src/ftxui/screen/string.cpp	1424;"	kind:function	namespace:ftxui	signature:(const std::string& input, size_t start)
ftxui::GlyphNext	./FTXUI/src/ftxui/screen/string_internal.hpp	27;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, size_t start)
ftxui::GlyphPrevious	./FTXUI/src/ftxui/screen/string.cpp	1399;"	kind:function	namespace:ftxui	signature:(const std::string& input, size_t start)
ftxui::GlyphPrevious	./FTXUI/src/ftxui/screen/string_internal.hpp	26;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, size_t start)
ftxui::HEAVY	./FTXUI/include/ftxui/dom/elements.hpp	30;"	kind:enumerator	enum:ftxui::BorderStyle
ftxui::HEIGHT	./FTXUI/include/ftxui/dom/elements.hpp	153;"	kind:enumerator	enum:ftxui::WidthOrHeight
ftxui::HorizontalContainer	./FTXUI/src/ftxui/component/container.cpp	181;"	kind:class	namespace:ftxui	file:	inherits:ContainerBase
ftxui::Hoverable	./FTXUI/include/ftxui/component/component.hpp	127;"	kind:prototype	namespace:ftxui	signature:(Component component, bool* hover)
ftxui::Hoverable	./FTXUI/include/ftxui/component/component.hpp	128;"	kind:prototype	namespace:ftxui	signature:(Component component, std::function<void()> on_enter, std::function<void()> on_leave)
ftxui::Hoverable	./FTXUI/include/ftxui/component/component.hpp	131;"	kind:prototype	namespace:ftxui	signature:(Component component, std::function<void(bool)> on_change)
ftxui::Hoverable	./FTXUI/include/ftxui/component/component.hpp	133;"	kind:prototype	namespace:ftxui	signature:(bool* hover)
ftxui::Hoverable	./FTXUI/include/ftxui/component/component.hpp	134;"	kind:prototype	namespace:ftxui	signature:(std::function<void()> on_enter, std::function<void()> on_leave)
ftxui::Hoverable	./FTXUI/include/ftxui/component/component.hpp	136;"	kind:prototype	namespace:ftxui	signature:(std::function<void(bool)> on_change)
ftxui::Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	141;"	kind:function	namespace:ftxui	signature:(bool* hover)
ftxui::Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	165;"	kind:function	namespace:ftxui	signature:(std::function<void()> on_enter, std::function<void()> on_leave)
ftxui::Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	188;"	kind:function	namespace:ftxui	signature:(Component component, std::function<void(bool)> on_change)
ftxui::Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	209;"	kind:function	namespace:ftxui	signature:(std::function<void(bool)> on_change)
ftxui::Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	43;"	kind:function	namespace:ftxui	signature:(Component component, bool* hover)
ftxui::Hoverable	./FTXUI/src/ftxui/component/hoverable.cpp	86;"	kind:function	namespace:ftxui	signature:(Component component, std::function<void()> on_enter, std::function<void()> on_leave)
ftxui::Image	./FTXUI/include/ftxui/screen/image.hpp	17;"	kind:class	namespace:ftxui
ftxui::Image::Clear	./FTXUI/include/ftxui/screen/image.hpp	36;"	kind:prototype	class:ftxui::Image	access:public	signature:()
ftxui::Image::Clear	./FTXUI/src/ftxui/screen/image.cpp	55;"	kind:function	class:ftxui::Image	signature:()
ftxui::Image::Image	./FTXUI/include/ftxui/screen/image.hpp	20;"	kind:prototype	class:ftxui::Image	access:public	signature:()
ftxui::Image::Image	./FTXUI/include/ftxui/screen/image.hpp	21;"	kind:prototype	class:ftxui::Image	access:public	signature:(int dimx, int dimy)
ftxui::Image::Image	./FTXUI/src/ftxui/screen/image.cpp	20;"	kind:function	class:ftxui::Image	signature:(int dimx, int dimy)
ftxui::Image::PixelAt	./FTXUI/include/ftxui/screen/image.hpp	28;"	kind:prototype	class:ftxui::Image	access:public	signature:(int x, int y)
ftxui::Image::PixelAt	./FTXUI/include/ftxui/screen/image.hpp	29;"	kind:prototype	class:ftxui::Image	access:public	signature:(int x, int y) const
ftxui::Image::PixelAt	./FTXUI/src/ftxui/screen/image.cpp	43;"	kind:function	class:ftxui::Image	signature:(int x, int y)
ftxui::Image::PixelAt	./FTXUI/src/ftxui/screen/image.cpp	50;"	kind:function	class:ftxui::Image	signature:(int x, int y) const
ftxui::Image::at	./FTXUI/include/ftxui/screen/image.hpp	24;"	kind:prototype	class:ftxui::Image	access:public	signature:(int x, int y)
ftxui::Image::at	./FTXUI/include/ftxui/screen/image.hpp	25;"	kind:prototype	class:ftxui::Image	access:public	signature:(int x, int y) const
ftxui::Image::at	./FTXUI/src/ftxui/screen/image.cpp	29;"	kind:function	class:ftxui::Image	signature:(int x, int y)
ftxui::Image::at	./FTXUI/src/ftxui/screen/image.cpp	36;"	kind:function	class:ftxui::Image	signature:(int x, int y) const
ftxui::Image::dimx	./FTXUI/include/ftxui/screen/image.hpp	32;"	kind:function	class:ftxui::Image	access:public	signature:() const
ftxui::Image::dimx_	./FTXUI/include/ftxui/screen/image.hpp	41;"	kind:member	class:ftxui::Image	access:protected
ftxui::Image::dimy	./FTXUI/include/ftxui/screen/image.hpp	33;"	kind:function	class:ftxui::Image	access:public	signature:() const
ftxui::Image::dimy_	./FTXUI/include/ftxui/screen/image.hpp	42;"	kind:member	class:ftxui::Image	access:protected
ftxui::Image::pixels_	./FTXUI/include/ftxui/screen/image.hpp	43;"	kind:member	class:ftxui::Image	access:protected
ftxui::Image::stencil	./FTXUI/include/ftxui/screen/image.hpp	38;"	kind:member	class:ftxui::Image	access:public
ftxui::Input	./FTXUI/include/ftxui/component/component.hpp	57;"	kind:prototype	namespace:ftxui	signature:(InputOption options = {})
ftxui::Input	./FTXUI/include/ftxui/component/component.hpp	58;"	kind:prototype	namespace:ftxui	signature:(StringRef content, InputOption options = {})
ftxui::Input	./FTXUI/include/ftxui/component/component.hpp	59;"	kind:prototype	namespace:ftxui	signature:(StringRef content, StringRef placeholder, InputOption options = {})
ftxui::Input	./FTXUI/src/ftxui/component/input.cpp	571;"	kind:function	namespace:ftxui	signature:(InputOption option)
ftxui::Input	./FTXUI/src/ftxui/component/input.cpp	599;"	kind:function	namespace:ftxui	signature:(StringRef content, InputOption option)
ftxui::Input	./FTXUI/src/ftxui/component/input.cpp	625;"	kind:function	namespace:ftxui	signature:(StringRef content, StringRef placeholder, InputOption option)
ftxui::InputOption	./FTXUI/include/ftxui/component/component_options.hpp	162;"	kind:struct	namespace:ftxui
ftxui::InputOption::Default	./FTXUI/include/ftxui/component/component_options.hpp	166;"	kind:prototype	struct:ftxui::InputOption	access:public	signature:()
ftxui::InputOption::Default	./FTXUI/src/ftxui/component/component_options.cpp	312;"	kind:function	class:ftxui::InputOption	signature:()
ftxui::InputOption::Spacious	./FTXUI/include/ftxui/component/component_options.hpp	168;"	kind:prototype	struct:ftxui::InputOption	access:public	signature:()
ftxui::InputOption::Spacious	./FTXUI/src/ftxui/component/component_options.cpp	335;"	kind:function	class:ftxui::InputOption	signature:()
ftxui::InputOption::content	./FTXUI/include/ftxui/component/component_options.hpp	171;"	kind:member	struct:ftxui::InputOption	access:public
ftxui::InputOption::cursor_position	./FTXUI/include/ftxui/component/component_options.hpp	188;"	kind:member	struct:ftxui::InputOption	access:public
ftxui::InputOption::insert	./FTXUI/include/ftxui/component/component_options.hpp	180;"	kind:member	struct:ftxui::InputOption	access:public
ftxui::InputOption::multiline	./FTXUI/include/ftxui/component/component_options.hpp	179;"	kind:member	struct:ftxui::InputOption	access:public
ftxui::InputOption::on_change	./FTXUI/include/ftxui/component/component_options.hpp	183;"	kind:member	struct:ftxui::InputOption	access:public
ftxui::InputOption::on_enter	./FTXUI/include/ftxui/component/component_options.hpp	185;"	kind:member	struct:ftxui::InputOption	access:public
ftxui::InputOption::password	./FTXUI/include/ftxui/component/component_options.hpp	178;"	kind:member	struct:ftxui::InputOption	access:public
ftxui::InputOption::placeholder	./FTXUI/include/ftxui/component/component_options.hpp	174;"	kind:member	struct:ftxui::InputOption	access:public
ftxui::InputOption::transform	./FTXUI/include/ftxui/component/component_options.hpp	177;"	kind:member	struct:ftxui::InputOption	access:public
ftxui::InputState	./FTXUI/include/ftxui/component/component_options.hpp	152;"	kind:struct	namespace:ftxui
ftxui::InputState::element	./FTXUI/include/ftxui/component/component_options.hpp	153;"	kind:member	struct:ftxui::InputState	access:public
ftxui::InputState::focused	./FTXUI/include/ftxui/component/component_options.hpp	155;"	kind:member	struct:ftxui::InputState	access:public
ftxui::InputState::hovered	./FTXUI/include/ftxui/component/component_options.hpp	154;"	kind:member	struct:ftxui::InputState	access:public
ftxui::InputState::is_placeholder	./FTXUI/include/ftxui/component/component_options.hpp	156;"	kind:member	struct:ftxui::InputState	access:public
ftxui::IsCombining	./FTXUI/src/ftxui/screen/string.cpp	1282;"	kind:function	namespace:ftxui	signature:(uint32_t ucs)
ftxui::IsCombining	./FTXUI/src/ftxui/screen/string_internal.hpp	22;"	kind:prototype	namespace:ftxui	signature:(uint32_t ucs)
ftxui::IsControl	./FTXUI/src/ftxui/screen/string.cpp	1293;"	kind:function	namespace:ftxui	signature:(uint32_t ucs)
ftxui::IsControl	./FTXUI/src/ftxui/screen/string_internal.hpp	24;"	kind:prototype	namespace:ftxui	signature:(uint32_t ucs)
ftxui::IsFullWidth	./FTXUI/src/ftxui/screen/string.cpp	1286;"	kind:function	namespace:ftxui	signature:(uint32_t ucs)
ftxui::IsFullWidth	./FTXUI/src/ftxui/screen/string_internal.hpp	23;"	kind:prototype	namespace:ftxui	signature:(uint32_t ucs)
ftxui::IsWordBreakingCharacter	./FTXUI/src/ftxui/screen/string_internal.hpp	64;"	kind:prototype	namespace:ftxui	signature:(const std::string& input, size_t glyph_index)
ftxui::LESS_THAN	./FTXUI/include/ftxui/dom/elements.hpp	154;"	kind:enumerator	enum:ftxui::Constraint
ftxui::LIGHT	./FTXUI/include/ftxui/dom/elements.hpp	28;"	kind:enumerator	enum:ftxui::BorderStyle
ftxui::LinearGradient	./FTXUI/include/ftxui/dom/linear_gradient.hpp	30;"	kind:struct	namespace:ftxui
ftxui::LinearGradient::Angle	./FTXUI/include/ftxui/dom/linear_gradient.hpp	44;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(float angle)
ftxui::LinearGradient::Angle	./FTXUI/src/ftxui/dom/linear_gradient.cpp	216;"	kind:function	class:ftxui::LinearGradient	signature:(float a)
ftxui::LinearGradient::LinearGradient	./FTXUI/include/ftxui/dom/linear_gradient.hpp	39;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:()
ftxui::LinearGradient::LinearGradient	./FTXUI/include/ftxui/dom/linear_gradient.hpp	40;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(Color begin, Color end)
ftxui::LinearGradient::LinearGradient	./FTXUI/include/ftxui/dom/linear_gradient.hpp	41;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(float angle, Color begin, Color end)
ftxui::LinearGradient::LinearGradient	./FTXUI/src/ftxui/dom/linear_gradient.cpp	199;"	kind:function	class:ftxui::LinearGradient	signature:(Color begin, Color end)
ftxui::LinearGradient::LinearGradient	./FTXUI/src/ftxui/dom/linear_gradient.cpp	207;"	kind:function	class:ftxui::LinearGradient	signature:(float a, Color begin, Color end)
ftxui::LinearGradient::Stop	./FTXUI/include/ftxui/dom/linear_gradient.hpp	32;"	kind:struct	struct:ftxui::LinearGradient	access:public
ftxui::LinearGradient::Stop	./FTXUI/include/ftxui/dom/linear_gradient.hpp	45;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(Color color, float position)
ftxui::LinearGradient::Stop	./FTXUI/include/ftxui/dom/linear_gradient.hpp	46;"	kind:prototype	struct:ftxui::LinearGradient	access:public	signature:(Color color)
ftxui::LinearGradient::Stop	./FTXUI/src/ftxui/dom/linear_gradient.cpp	225;"	kind:function	class:ftxui::LinearGradient	signature:(Color c, float p)
ftxui::LinearGradient::Stop	./FTXUI/src/ftxui/dom/linear_gradient.cpp	235;"	kind:function	class:ftxui::LinearGradient	signature:(Color c)
ftxui::LinearGradient::Stop::color	./FTXUI/include/ftxui/dom/linear_gradient.hpp	33;"	kind:member	struct:ftxui::LinearGradient::Stop	access:public
ftxui::LinearGradient::Stop::position	./FTXUI/include/ftxui/dom/linear_gradient.hpp	34;"	kind:member	struct:ftxui::LinearGradient::Stop	access:public
ftxui::LinearGradient::angle	./FTXUI/include/ftxui/dom/linear_gradient.hpp	31;"	kind:member	struct:ftxui::LinearGradient	access:public
ftxui::LinearGradient::stops	./FTXUI/include/ftxui/dom/linear_gradient.hpp	36;"	kind:member	struct:ftxui::LinearGradient	access:public
ftxui::Loop	./FTXUI/include/ftxui/component/loop.hpp	17;"	kind:class	namespace:ftxui
ftxui::Loop::HasQuitted	./FTXUI/include/ftxui/component/loop.hpp	22;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
ftxui::Loop::HasQuitted	./FTXUI/src/ftxui/component/loop.cpp	32;"	kind:function	class:ftxui::Loop	signature:()
ftxui::Loop::Loop	./FTXUI/include/ftxui/component/loop.hpp	19;"	kind:prototype	class:ftxui::Loop	access:public	signature:(ScreenInteractive* screen, Component component)
ftxui::Loop::Loop	./FTXUI/include/ftxui/component/loop.hpp	28;"	kind:prototype	class:ftxui::Loop	access:public	signature:(const Loop&)
ftxui::Loop::Loop	./FTXUI/include/ftxui/component/loop.hpp	29;"	kind:prototype	class:ftxui::Loop	access:public	signature:(Loop&&)
ftxui::Loop::Loop	./FTXUI/include/ftxui/component/loop.hpp	31;"	kind:prototype	class:ftxui::Loop	access:public	signature:(const ScreenInteractive&)
ftxui::Loop::Loop	./FTXUI/src/ftxui/component/loop.cpp	21;"	kind:function	class:ftxui::Loop	signature:(ScreenInteractive* screen, Component component)
ftxui::Loop::Run	./FTXUI/include/ftxui/component/loop.hpp	25;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
ftxui::Loop::Run	./FTXUI/src/ftxui/component/loop.cpp	51;"	kind:function	class:ftxui::Loop	signature:()
ftxui::Loop::RunOnce	./FTXUI/include/ftxui/component/loop.hpp	23;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
ftxui::Loop::RunOnce	./FTXUI/src/ftxui/component/loop.cpp	39;"	kind:function	class:ftxui::Loop	signature:()
ftxui::Loop::RunOnceBlocking	./FTXUI/include/ftxui/component/loop.hpp	24;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
ftxui::Loop::RunOnceBlocking	./FTXUI/src/ftxui/component/loop.cpp	45;"	kind:function	class:ftxui::Loop	signature:()
ftxui::Loop::component_	./FTXUI/include/ftxui/component/loop.hpp	36;"	kind:member	class:ftxui::Loop	access:private
ftxui::Loop::operator =	./FTXUI/include/ftxui/component/loop.hpp	30;"	kind:prototype	class:ftxui::Loop	access:public	signature:(Loop&&)
ftxui::Loop::operator =	./FTXUI/include/ftxui/component/loop.hpp	32;"	kind:prototype	class:ftxui::Loop	access:public	signature:(const Loop&)
ftxui::Loop::screen_	./FTXUI/include/ftxui/component/loop.hpp	35;"	kind:member	class:ftxui::Loop	access:private
ftxui::Loop::~Loop	./FTXUI/include/ftxui/component/loop.hpp	20;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
ftxui::Loop::~Loop	./FTXUI/src/ftxui/component/loop.cpp	26;"	kind:function	class:ftxui::Loop	signature:()
ftxui::Make	./FTXUI/include/ftxui/component/component.hpp	26;"	kind:function	namespace:ftxui	signature:(Args&&.... args)
ftxui::MakeReceiver	./FTXUI/include/ftxui/component/receiver.hpp	139;"	kind:function	namespace:ftxui	signature:()
ftxui::Maybe	./FTXUI/include/ftxui/component/component.hpp	115;"	kind:prototype	namespace:ftxui	signature:(Component, const bool* show)
ftxui::Maybe	./FTXUI/include/ftxui/component/component.hpp	116;"	kind:prototype	namespace:ftxui	signature:(Component, std::function<bool()>)
ftxui::Maybe	./FTXUI/include/ftxui/component/component.hpp	117;"	kind:prototype	namespace:ftxui	signature:(const bool* show)
ftxui::Maybe	./FTXUI/include/ftxui/component/component.hpp	118;"	kind:prototype	namespace:ftxui	signature:(std::function<bool()>)
ftxui::Maybe	./FTXUI/src/ftxui/component/maybe.cpp	21;"	kind:function	namespace:ftxui	signature:(Component child, std::function<bool()> show)
ftxui::Maybe	./FTXUI/src/ftxui/component/maybe.cpp	57;"	kind:function	namespace:ftxui	signature:(std::function<bool()> show)
ftxui::Maybe	./FTXUI/src/ftxui/component/maybe.cpp	74;"	kind:function	namespace:ftxui	signature:(Component child, const bool* show)
ftxui::Maybe	./FTXUI/src/ftxui/component/maybe.cpp	88;"	kind:function	namespace:ftxui	signature:(const bool* show)
ftxui::Menu	./FTXUI/include/ftxui/component/component.hpp	63;"	kind:prototype	namespace:ftxui	signature:(MenuOption options)
ftxui::Menu	./FTXUI/include/ftxui/component/component.hpp	64;"	kind:prototype	namespace:ftxui	signature:(ConstStringListRef entries, int* selected_, MenuOption options = MenuOption::Vertical())
ftxui::Menu	./FTXUI/src/ftxui/component/menu.cpp	512;"	kind:function	namespace:ftxui	signature:(MenuOption option)
ftxui::Menu	./FTXUI/src/ftxui/component/menu.cpp	543;"	kind:function	namespace:ftxui	signature:(ConstStringListRef entries, int* selected, MenuOption option)
ftxui::MenuBase	./FTXUI/src/ftxui/component/menu.cpp	69;"	kind:class	namespace:ftxui	file:	inherits:ComponentBase,MenuOption
ftxui::MenuBase::AnimatedColorStyle	./FTXUI/src/ftxui/component/menu.cpp	398;"	kind:function	class:ftxui::MenuBase	access:public	signature:(int i)
ftxui::MenuBase::Clamp	./FTXUI/src/ftxui/component/menu.cpp	86;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::FirstTarget	./FTXUI/src/ftxui/component/menu.cpp	447;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::IsHorizontal	./FTXUI/src/ftxui/component/menu.cpp	73;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::MenuBase	./FTXUI/src/ftxui/component/menu.cpp	71;"	kind:function	class:ftxui::MenuBase	access:public	signature:(const MenuOption& option)
ftxui::MenuBase::OnChange	./FTXUI/src/ftxui/component/menu.cpp	74;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::OnDown	./FTXUI/src/ftxui/component/menu.cpp	193;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::OnEnter	./FTXUI/src/ftxui/component/menu.cpp	80;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::OnLeft	./FTXUI/src/ftxui/component/menu.cpp	207;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::OnMouseEvent	./FTXUI/src/ftxui/component/menu.cpp	297;"	kind:function	class:ftxui::MenuBase	access:public	signature:(Event event)
ftxui::MenuBase::OnMouseWheel	./FTXUI/src/ftxui/component/menu.cpp	331;"	kind:function	class:ftxui::MenuBase	access:public	signature:(Event event)
ftxui::MenuBase::OnRight	./FTXUI/src/ftxui/component/menu.cpp	221;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::OnUp	./FTXUI/src/ftxui/component/menu.cpp	179;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::SecondTarget	./FTXUI/src/ftxui/component/menu.cpp	455;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::SelectedTakeFocus	./FTXUI/src/ftxui/component/menu.cpp	174;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::UpdateAnimationTarget	./FTXUI/src/ftxui/component/menu.cpp	353;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::UpdateColorTarget	./FTXUI/src/ftxui/component/menu.cpp	358;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::UpdateUnderlineTarget	./FTXUI/src/ftxui/component/menu.cpp	416;"	kind:function	class:ftxui::MenuBase	access:public	signature:()
ftxui::MenuBase::animation_background_	./FTXUI/src/ftxui/component/menu.cpp	479;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::animation_foreground_	./FTXUI/src/ftxui/component/menu.cpp	480;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::animator_background_	./FTXUI/src/ftxui/component/menu.cpp	477;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::animator_first_	./FTXUI/src/ftxui/component/menu.cpp	475;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::animator_foreground_	./FTXUI/src/ftxui/component/menu.cpp	478;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::animator_second_	./FTXUI/src/ftxui/component/menu.cpp	476;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::box_	./FTXUI/src/ftxui/component/menu.cpp	470;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::boxes_	./FTXUI/src/ftxui/component/menu.cpp	469;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::first_	./FTXUI/src/ftxui/component/menu.cpp	473;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::second_	./FTXUI/src/ftxui/component/menu.cpp	474;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::selected_focus_	./FTXUI/src/ftxui/component/menu.cpp	466;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::selected_previous_	./FTXUI/src/ftxui/component/menu.cpp	465;"	kind:member	class:ftxui::MenuBase	file:	access:protected
ftxui::MenuBase::size	./FTXUI/src/ftxui/component/menu.cpp	446;"	kind:function	class:ftxui::MenuBase	access:public	signature:() const
ftxui::MenuEntry	./FTXUI/include/ftxui/component/component.hpp	67;"	kind:prototype	namespace:ftxui	signature:(MenuEntryOption options)
ftxui::MenuEntry	./FTXUI/include/ftxui/component/component.hpp	68;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, MenuEntryOption options = {})
ftxui::MenuEntry	./FTXUI/src/ftxui/component/menu.cpp	584;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, MenuEntryOption option)
ftxui::MenuEntry	./FTXUI/src/ftxui/component/menu.cpp	614;"	kind:function	namespace:ftxui	signature:(MenuEntryOption option)
ftxui::MenuEntryOption	./FTXUI/include/ftxui/component/component_options.hpp	77;"	kind:struct	namespace:ftxui
ftxui::MenuEntryOption::animated_colors	./FTXUI/include/ftxui/component/component_options.hpp	80;"	kind:member	struct:ftxui::MenuEntryOption	access:public
ftxui::MenuEntryOption::label	./FTXUI/include/ftxui/component/component_options.hpp	78;"	kind:member	struct:ftxui::MenuEntryOption	access:public
ftxui::MenuEntryOption::transform	./FTXUI/include/ftxui/component/component_options.hpp	79;"	kind:member	struct:ftxui::MenuEntryOption	access:public
ftxui::MenuOption	./FTXUI/include/ftxui/component/component_options.hpp	85;"	kind:struct	namespace:ftxui
ftxui::MenuOption::Horizontal	./FTXUI/include/ftxui/component/component_options.hpp	87;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
ftxui::MenuOption::Horizontal	./FTXUI/src/ftxui/component/component_options.cpp	75;"	kind:function	class:ftxui::MenuOption	signature:()
ftxui::MenuOption::HorizontalAnimated	./FTXUI/include/ftxui/component/component_options.hpp	88;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
ftxui::MenuOption::HorizontalAnimated	./FTXUI/src/ftxui/component/component_options.cpp	100;"	kind:function	class:ftxui::MenuOption	signature:()
ftxui::MenuOption::Toggle	./FTXUI/include/ftxui/component/component_options.hpp	91;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
ftxui::MenuOption::Toggle	./FTXUI/src/ftxui/component/component_options.cpp	155;"	kind:function	class:ftxui::MenuOption	signature:()
ftxui::MenuOption::Vertical	./FTXUI/include/ftxui/component/component_options.hpp	89;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
ftxui::MenuOption::Vertical	./FTXUI/src/ftxui/component/component_options.cpp	110;"	kind:function	class:ftxui::MenuOption	signature:()
ftxui::MenuOption::VerticalAnimated	./FTXUI/include/ftxui/component/component_options.hpp	90;"	kind:prototype	struct:ftxui::MenuOption	access:public	signature:()
ftxui::MenuOption::VerticalAnimated	./FTXUI/src/ftxui/component/component_options.cpp	132;"	kind:function	class:ftxui::MenuOption	signature:()
ftxui::MenuOption::direction	./FTXUI/include/ftxui/component/component_options.hpp	99;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::elements_infix	./FTXUI/include/ftxui/component/component_options.hpp	101;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::elements_postfix	./FTXUI/include/ftxui/component/component_options.hpp	102;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::elements_prefix	./FTXUI/include/ftxui/component/component_options.hpp	100;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::entries	./FTXUI/include/ftxui/component/component_options.hpp	93;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::entries_option	./FTXUI/include/ftxui/component/component_options.hpp	98;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::focused_entry	./FTXUI/include/ftxui/component/component_options.hpp	107;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::on_change	./FTXUI/include/ftxui/component/component_options.hpp	105;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::on_enter	./FTXUI/include/ftxui/component/component_options.hpp	106;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::selected	./FTXUI/include/ftxui/component/component_options.hpp	94;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::MenuOption::underline	./FTXUI/include/ftxui/component/component_options.hpp	97;"	kind:member	struct:ftxui::MenuOption	access:public
ftxui::Merge	./FTXUI/include/ftxui/dom/take_any_args.hpp	13;"	kind:function	namespace:ftxui	signature:(Elements& , T )
ftxui::Merge	./FTXUI/include/ftxui/dom/take_any_args.hpp	16;"	kind:function	namespace:ftxui	signature:(Elements& container, Element element)
ftxui::Merge	./FTXUI/include/ftxui/dom/take_any_args.hpp	21;"	kind:function	namespace:ftxui	signature:(Elements& container, Elements elements)
ftxui::Modal	./FTXUI/include/ftxui/component/component.hpp	120;"	kind:prototype	namespace:ftxui	signature:(Component main, Component modal, const bool* show_modal)
ftxui::Modal	./FTXUI/include/ftxui/component/component.hpp	121;"	kind:prototype	namespace:ftxui	signature:(Component modal, const bool* show_modal)
ftxui::Modal	./FTXUI/src/ftxui/component/modal.cpp	18;"	kind:function	namespace:ftxui	signature:(Component main, Component modal, const bool* show_modal)
ftxui::Modal	./FTXUI/src/ftxui/component/modal.cpp	58;"	kind:function	namespace:ftxui	signature:(Component modal, const bool* show_modal)
ftxui::Mouse	./FTXUI/include/ftxui/component/mouse.hpp	11;"	kind:struct	namespace:ftxui
ftxui::Mouse::Button	./FTXUI/include/ftxui/component/mouse.hpp	12;"	kind:enum	struct:ftxui::Mouse	access:public
ftxui::Mouse::Left	./FTXUI/include/ftxui/component/mouse.hpp	13;"	kind:enumerator	enum:ftxui::Mouse::Button
ftxui::Mouse::Middle	./FTXUI/include/ftxui/component/mouse.hpp	14;"	kind:enumerator	enum:ftxui::Mouse::Button
ftxui::Mouse::Motion	./FTXUI/include/ftxui/component/mouse.hpp	23;"	kind:enum	struct:ftxui::Mouse	access:public
ftxui::Mouse::Moved	./FTXUI/include/ftxui/component/mouse.hpp	26;"	kind:enumerator	enum:ftxui::Mouse::Motion
ftxui::Mouse::None	./FTXUI/include/ftxui/component/mouse.hpp	16;"	kind:enumerator	enum:ftxui::Mouse::Button
ftxui::Mouse::Pressed	./FTXUI/include/ftxui/component/mouse.hpp	25;"	kind:enumerator	enum:ftxui::Mouse::Motion
ftxui::Mouse::Released	./FTXUI/include/ftxui/component/mouse.hpp	24;"	kind:enumerator	enum:ftxui::Mouse::Motion
ftxui::Mouse::Right	./FTXUI/include/ftxui/component/mouse.hpp	15;"	kind:enumerator	enum:ftxui::Mouse::Button
ftxui::Mouse::WheelDown	./FTXUI/include/ftxui/component/mouse.hpp	18;"	kind:enumerator	enum:ftxui::Mouse::Button
ftxui::Mouse::WheelLeft	./FTXUI/include/ftxui/component/mouse.hpp	19;"	kind:enumerator	enum:ftxui::Mouse::Button
ftxui::Mouse::WheelRight	./FTXUI/include/ftxui/component/mouse.hpp	20;"	kind:enumerator	enum:ftxui::Mouse::Button
ftxui::Mouse::WheelUp	./FTXUI/include/ftxui/component/mouse.hpp	17;"	kind:enumerator	enum:ftxui::Mouse::Button
ftxui::Mouse::button	./FTXUI/include/ftxui/component/mouse.hpp	30;"	kind:member	struct:ftxui::Mouse	access:public
ftxui::Mouse::control	./FTXUI/include/ftxui/component/mouse.hpp	38;"	kind:member	struct:ftxui::Mouse	access:public
ftxui::Mouse::meta	./FTXUI/include/ftxui/component/mouse.hpp	37;"	kind:member	struct:ftxui::Mouse	access:public
ftxui::Mouse::motion	./FTXUI/include/ftxui/component/mouse.hpp	33;"	kind:member	struct:ftxui::Mouse	access:public
ftxui::Mouse::shift	./FTXUI/include/ftxui/component/mouse.hpp	36;"	kind:member	struct:ftxui::Mouse	access:public
ftxui::Mouse::x	./FTXUI/include/ftxui/component/mouse.hpp	41;"	kind:member	struct:ftxui::Mouse	access:public
ftxui::Mouse::y	./FTXUI/include/ftxui/component/mouse.hpp	42;"	kind:member	struct:ftxui::Mouse	access:public
ftxui::Node	./FTXUI/include/ftxui/dom/node.hpp	23;"	kind:class	namespace:ftxui
ftxui::Node::Check	./FTXUI/include/ftxui/dom/node.hpp	60;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Status* status)
ftxui::Node::Check	./FTXUI/src/ftxui/dom/node.cpp	69;"	kind:function	class:ftxui::Node	signature:(Status* status)
ftxui::Node::ComputeRequirement	./FTXUI/include/ftxui/dom/node.hpp	37;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:()
ftxui::Node::ComputeRequirement	./FTXUI/src/ftxui/dom/node.cpp	21;"	kind:function	class:ftxui::Node	signature:()
ftxui::Node::GetSelectedContent	./FTXUI/include/ftxui/dom/node.hpp	51;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Selection& selection)
ftxui::Node::GetSelectedContent	./FTXUI/src/ftxui/dom/node.cpp	76;"	kind:function	class:ftxui::Node	signature:(Selection& selection)
ftxui::Node::Node	./FTXUI/include/ftxui/dom/node.hpp	25;"	kind:prototype	class:ftxui::Node	access:public	signature:()
ftxui::Node::Node	./FTXUI/include/ftxui/dom/node.hpp	26;"	kind:prototype	class:ftxui::Node	access:public	signature:(Elements children)
ftxui::Node::Node	./FTXUI/include/ftxui/dom/node.hpp	27;"	kind:prototype	class:ftxui::Node	access:public	signature:(const Node&)
ftxui::Node::Node	./FTXUI/include/ftxui/dom/node.hpp	28;"	kind:prototype	class:ftxui::Node	access:public	signature:(const Node&&)
ftxui::Node::Node	./FTXUI/src/ftxui/dom/node.cpp	15;"	kind:prototype	class:ftxui::Node	file:	signature:()
ftxui::Node::Node	./FTXUI/src/ftxui/dom/node.cpp	16;"	kind:function	class:ftxui::Node	signature:(Elements children)
ftxui::Node::Render	./FTXUI/include/ftxui/dom/node.hpp	49;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Screen& screen)
ftxui::Node::Render	./FTXUI/include/ftxui/dom/node.hpp	62;"	kind:prototype	class:ftxui::Node	access:friend	signature:(Screen& screen, Node* node, Selection& selection)
ftxui::Node::Render	./FTXUI/src/ftxui/dom/node.cpp	63;"	kind:function	class:ftxui::Node	signature:(Screen& screen)
ftxui::Node::Select	./FTXUI/include/ftxui/dom/node.hpp	46;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Selection& selection)
ftxui::Node::Select	./FTXUI/src/ftxui/dom/node.cpp	49;"	kind:function	class:ftxui::Node	signature:(Selection& selection)
ftxui::Node::SetBox	./FTXUI/include/ftxui/dom/node.hpp	42;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:(Box box)
ftxui::Node::SetBox	./FTXUI/src/ftxui/dom/node.cpp	43;"	kind:function	class:ftxui::Node	signature:(Box box)
ftxui::Node::Status	./FTXUI/include/ftxui/dom/node.hpp	56;"	kind:struct	class:ftxui::Node	access:public
ftxui::Node::Status::iteration	./FTXUI/include/ftxui/dom/node.hpp	57;"	kind:member	struct:ftxui::Node::Status	access:public
ftxui::Node::Status::need_iteration	./FTXUI/include/ftxui/dom/node.hpp	58;"	kind:member	struct:ftxui::Node::Status	access:public
ftxui::Node::box_	./FTXUI/include/ftxui/dom/node.hpp	67;"	kind:member	class:ftxui::Node	access:protected
ftxui::Node::children_	./FTXUI/include/ftxui/dom/node.hpp	65;"	kind:member	class:ftxui::Node	access:protected
ftxui::Node::operator =	./FTXUI/include/ftxui/dom/node.hpp	29;"	kind:prototype	class:ftxui::Node	access:public	signature:(const Node&)
ftxui::Node::operator =	./FTXUI/include/ftxui/dom/node.hpp	30;"	kind:prototype	class:ftxui::Node	access:public	signature:(const Node&&)
ftxui::Node::requirement	./FTXUI/include/ftxui/dom/node.hpp	38;"	kind:function	class:ftxui::Node	access:public	signature:()
ftxui::Node::requirement_	./FTXUI/include/ftxui/dom/node.hpp	66;"	kind:member	class:ftxui::Node	access:protected
ftxui::Node::~Node	./FTXUI/include/ftxui/dom/node.hpp	32;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:()
ftxui::Node::~Node	./FTXUI/src/ftxui/dom/node.cpp	17;"	kind:prototype	class:ftxui::Node	file:	signature:()
ftxui::NodeDecorator	./FTXUI/src/ftxui/dom/node_decorator.hpp	16;"	kind:class	namespace:ftxui	inherits:Node
ftxui::NodeDecorator::ComputeRequirement	./FTXUI/src/ftxui/dom/node_decorator.cpp	12;"	kind:function	class:ftxui::NodeDecorator	signature:()
ftxui::NodeDecorator::NodeDecorator	./FTXUI/src/ftxui/dom/node_decorator.hpp	18;"	kind:function	class:ftxui::NodeDecorator	access:public	signature:(Element child)
ftxui::NodeDecorator::SetBox	./FTXUI/src/ftxui/dom/node_decorator.cpp	17;"	kind:function	class:ftxui::NodeDecorator	signature:(Box box)
ftxui::NodeDecorator::override	./FTXUI/src/ftxui/dom/node_decorator.hpp	19;"	kind:member	class:ftxui::NodeDecorator	access:public
ftxui::NodeDecorator::override	./FTXUI/src/ftxui/dom/node_decorator.hpp	20;"	kind:member	class:ftxui::NodeDecorator	access:public
ftxui::Pixel	./FTXUI/include/ftxui/screen/pixel.hpp	15;"	kind:struct	namespace:ftxui
ftxui::Pixel::Pixel	./FTXUI/include/ftxui/screen/pixel.hpp	16;"	kind:function	struct:ftxui::Pixel	access:public	signature:()
ftxui::Pixel::automerge	./FTXUI/include/ftxui/screen/pixel.hpp	36;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::background_color	./FTXUI/include/ftxui/screen/pixel.hpp	48;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::blink	./FTXUI/include/ftxui/screen/pixel.hpp	28;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::bold	./FTXUI/include/ftxui/screen/pixel.hpp	29;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::character	./FTXUI/include/ftxui/screen/pixel.hpp	45;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::dim	./FTXUI/include/ftxui/screen/pixel.hpp	30;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::foreground_color	./FTXUI/include/ftxui/screen/pixel.hpp	49;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::hyperlink	./FTXUI/include/ftxui/screen/pixel.hpp	41;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::inverted	./FTXUI/include/ftxui/screen/pixel.hpp	32;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::italic	./FTXUI/include/ftxui/screen/pixel.hpp	31;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::strikethrough	./FTXUI/include/ftxui/screen/pixel.hpp	35;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::underlined	./FTXUI/include/ftxui/screen/pixel.hpp	33;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::Pixel::underlined_double	./FTXUI/include/ftxui/screen/pixel.hpp	34;"	kind:member	struct:ftxui::Pixel	access:public
ftxui::ROUNDED	./FTXUI/include/ftxui/dom/elements.hpp	32;"	kind:enumerator	enum:ftxui::BorderStyle
ftxui::Radiobox	./FTXUI/include/ftxui/component/component.hpp	70;"	kind:prototype	namespace:ftxui	signature:(RadioboxOption options)
ftxui::Radiobox	./FTXUI/include/ftxui/component/component.hpp	71;"	kind:prototype	namespace:ftxui	signature:(ConstStringListRef entries, int* selected_, RadioboxOption options = {})
ftxui::Radiobox	./FTXUI/src/ftxui/component/radiobox.cpp	204;"	kind:function	namespace:ftxui	signature:(RadioboxOption option)
ftxui::Radiobox	./FTXUI/src/ftxui/component/radiobox.cpp	236;"	kind:function	namespace:ftxui	signature:(ConstStringListRef entries, int* selected, RadioboxOption option)
ftxui::RadioboxOption	./FTXUI/include/ftxui/component/component_options.hpp	193;"	kind:struct	namespace:ftxui
ftxui::RadioboxOption::Simple	./FTXUI/include/ftxui/component/component_options.hpp	195;"	kind:prototype	struct:ftxui::RadioboxOption	access:public	signature:()
ftxui::RadioboxOption::Simple	./FTXUI/src/ftxui/component/component_options.cpp	287;"	kind:function	class:ftxui::RadioboxOption	signature:()
ftxui::RadioboxOption::entries	./FTXUI/include/ftxui/component/component_options.hpp	198;"	kind:member	struct:ftxui::RadioboxOption	access:public
ftxui::RadioboxOption::focused_entry	./FTXUI/include/ftxui/component/component_options.hpp	207;"	kind:member	struct:ftxui::RadioboxOption	access:public
ftxui::RadioboxOption::on_change	./FTXUI/include/ftxui/component/component_options.hpp	206;"	kind:member	struct:ftxui::RadioboxOption	access:public
ftxui::RadioboxOption::selected	./FTXUI/include/ftxui/component/component_options.hpp	199;"	kind:member	struct:ftxui::RadioboxOption	access:public
ftxui::RadioboxOption::transform	./FTXUI/include/ftxui/component/component_options.hpp	202;"	kind:member	struct:ftxui::RadioboxOption	access:public
ftxui::ReceiverImpl	./FTXUI/include/ftxui/component/receiver.hpp	71;"	kind:class	namespace:ftxui
ftxui::ReceiverImpl::HasPending	./FTXUI/include/ftxui/component/receiver.hpp	106;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:()
ftxui::ReceiverImpl::HasQuitted	./FTXUI/include/ftxui/component/receiver.hpp	111;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:()
ftxui::ReceiverImpl::MakeSender	./FTXUI/include/ftxui/component/receiver.hpp	73;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:()
ftxui::ReceiverImpl::Receive	./FTXUI/include/ftxui/component/receiver.hpp	119;"	kind:function	class:ftxui::ReceiverImpl	access:private	signature:(T t)
ftxui::ReceiverImpl::Receive	./FTXUI/include/ftxui/component/receiver.hpp	80;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:(T* t)
ftxui::ReceiverImpl::ReceiveNonBlocking	./FTXUI/include/ftxui/component/receiver.hpp	96;"	kind:function	class:ftxui::ReceiverImpl	access:public	signature:(T* t)
ftxui::ReceiverImpl::ReceiverImpl	./FTXUI/include/ftxui/component/receiver.hpp	78;"	kind:prototype	class:ftxui::ReceiverImpl	access:public	signature:()
ftxui::ReceiverImpl::ReleaseSender	./FTXUI/include/ftxui/component/receiver.hpp	127;"	kind:function	class:ftxui::ReceiverImpl	access:private	signature:()
ftxui::ReceiverImpl::mutex_	./FTXUI/include/ftxui/component/receiver.hpp	132;"	kind:member	class:ftxui::ReceiverImpl	access:private
ftxui::ReceiverImpl::notifier_	./FTXUI/include/ftxui/component/receiver.hpp	134;"	kind:member	class:ftxui::ReceiverImpl	access:private
ftxui::ReceiverImpl::queue_	./FTXUI/include/ftxui/component/receiver.hpp	133;"	kind:member	class:ftxui::ReceiverImpl	access:private
ftxui::Ref	./FTXUI/include/ftxui/util/ref.hpp	46;"	kind:class	namespace:ftxui
ftxui::Ref::Address	./FTXUI/include/ftxui/util/ref.hpp	70;"	kind:function	class:ftxui::Ref	access:private	signature:() const
ftxui::Ref::Address	./FTXUI/include/ftxui/util/ref.hpp	74;"	kind:function	class:ftxui::Ref	access:private	signature:()
ftxui::Ref::Ref	./FTXUI/include/ftxui/util/ref.hpp	48;"	kind:prototype	class:ftxui::Ref	access:public	signature:()
ftxui::Ref::Ref	./FTXUI/include/ftxui/util/ref.hpp	49;"	kind:function	class:ftxui::Ref	access:public	signature:(T t)
ftxui::Ref::Ref	./FTXUI/include/ftxui/util/ref.hpp	50;"	kind:function	class:ftxui::Ref	access:public	signature:(T* t)
ftxui::Ref::Ref	./FTXUI/include/ftxui/util/ref.hpp	53;"	kind:prototype	class:ftxui::Ref	access:public	signature:(const Ref<T>&)
ftxui::Ref::noexcept	./FTXUI/include/ftxui/util/ref.hpp	52;"	kind:member	class:ftxui::Ref	access:public
ftxui::Ref::noexcept	./FTXUI/include/ftxui/util/ref.hpp	54;"	kind:member	class:ftxui::Ref	access:public
ftxui::Ref::operator ()	./FTXUI/include/ftxui/util/ref.hpp	60;"	kind:function	class:ftxui::Ref	access:public	signature:()
ftxui::Ref::operator ()	./FTXUI/include/ftxui/util/ref.hpp	63;"	kind:function	class:ftxui::Ref	access:public	signature:() const
ftxui::Ref::operator *	./FTXUI/include/ftxui/util/ref.hpp	61;"	kind:function	class:ftxui::Ref	access:public	signature:()
ftxui::Ref::operator *	./FTXUI/include/ftxui/util/ref.hpp	64;"	kind:function	class:ftxui::Ref	access:public	signature:() const
ftxui::Ref::operator ->	./FTXUI/include/ftxui/util/ref.hpp	62;"	kind:function	class:ftxui::Ref	access:public	signature:()
ftxui::Ref::operator ->	./FTXUI/include/ftxui/util/ref.hpp	65;"	kind:function	class:ftxui::Ref	access:public	signature:() const
ftxui::Ref::operator =	./FTXUI/include/ftxui/util/ref.hpp	57;"	kind:prototype	class:ftxui::Ref	access:public	signature:(const Ref<T>&)
ftxui::Ref::variant_	./FTXUI/include/ftxui/util/ref.hpp	68;"	kind:member	class:ftxui::Ref	access:private
ftxui::Ref::~Ref	./FTXUI/include/ftxui/util/ref.hpp	51;"	kind:prototype	class:ftxui::Ref	access:public	signature:()
ftxui::Render	./FTXUI/include/ftxui/dom/node.hpp	70;"	kind:prototype	namespace:ftxui	signature:(Screen& screen, const Element& element)
ftxui::Render	./FTXUI/include/ftxui/dom/node.hpp	71;"	kind:prototype	namespace:ftxui	signature:(Screen& screen, Node* node)
ftxui::Render	./FTXUI/include/ftxui/dom/node.hpp	72;"	kind:prototype	namespace:ftxui	signature:(Screen& screen, Node* node, Selection& selection)
ftxui::Render	./FTXUI/src/ftxui/dom/node.cpp	100;"	kind:function	namespace:ftxui	signature:(Screen& screen, Node* node, Selection& selection)
ftxui::Render	./FTXUI/src/ftxui/dom/node.cpp	88;"	kind:function	namespace:ftxui	signature:(Screen& screen, const Element& element)
ftxui::Render	./FTXUI/src/ftxui/dom/node.cpp	95;"	kind:function	namespace:ftxui	signature:(Screen& screen, Node* node)
ftxui::Renderer	./FTXUI/include/ftxui/component/component.hpp	107;"	kind:prototype	namespace:ftxui	signature:(Component child, std::function<Element()>)
ftxui::Renderer	./FTXUI/include/ftxui/component/component.hpp	108;"	kind:prototype	namespace:ftxui	signature:(std::function<Element()>)
ftxui::Renderer	./FTXUI/include/ftxui/component/component.hpp	109;"	kind:prototype	namespace:ftxui	signature:(std::function<Element(bool )>)
ftxui::Renderer	./FTXUI/include/ftxui/component/component.hpp	110;"	kind:prototype	namespace:ftxui	signature:(ElementDecorator)
ftxui::Renderer	./FTXUI/src/ftxui/component/renderer.cpp	125;"	kind:function	namespace:ftxui	signature:(ElementDecorator decorator)
ftxui::Renderer	./FTXUI/src/ftxui/component/renderer.cpp	29;"	kind:function	namespace:ftxui	signature:(std::function<Element()> render)
ftxui::Renderer	./FTXUI/src/ftxui/component/renderer.cpp	61;"	kind:function	namespace:ftxui	signature:(Component child, std::function<Element()> render)
ftxui::Renderer	./FTXUI/src/ftxui/component/renderer.cpp	84;"	kind:function	namespace:ftxui	signature:(std::function<Element(bool)> render)
ftxui::Requirement	./FTXUI/include/ftxui/dom/requirement.hpp	13;"	kind:struct	namespace:ftxui
ftxui::Requirement::Focused	./FTXUI/include/ftxui/dom/requirement.hpp	25;"	kind:struct	struct:ftxui::Requirement	access:public
ftxui::Requirement::Focused::Prefer	./FTXUI/include/ftxui/dom/requirement.hpp	35;"	kind:function	struct:ftxui::Requirement::Focused	access:public	signature:(const Focused& other) const
ftxui::Requirement::Focused::box	./FTXUI/include/ftxui/dom/requirement.hpp	27;"	kind:member	struct:ftxui::Requirement::Focused	access:public
ftxui::Requirement::Focused::component_active	./FTXUI/include/ftxui/dom/requirement.hpp	32;"	kind:member	struct:ftxui::Requirement::Focused	access:public
ftxui::Requirement::Focused::cursor_shape	./FTXUI/include/ftxui/dom/requirement.hpp	29;"	kind:member	struct:ftxui::Requirement::Focused	access:public
ftxui::Requirement::Focused::enabled	./FTXUI/include/ftxui/dom/requirement.hpp	26;"	kind:member	struct:ftxui::Requirement::Focused	access:public
ftxui::Requirement::Focused::node	./FTXUI/include/ftxui/dom/requirement.hpp	28;"	kind:member	struct:ftxui::Requirement::Focused	access:public
ftxui::Requirement::flex_grow_x	./FTXUI/include/ftxui/dom/requirement.hpp	19;"	kind:member	struct:ftxui::Requirement	access:public
ftxui::Requirement::flex_grow_y	./FTXUI/include/ftxui/dom/requirement.hpp	20;"	kind:member	struct:ftxui::Requirement	access:public
ftxui::Requirement::flex_shrink_x	./FTXUI/include/ftxui/dom/requirement.hpp	21;"	kind:member	struct:ftxui::Requirement	access:public
ftxui::Requirement::flex_shrink_y	./FTXUI/include/ftxui/dom/requirement.hpp	22;"	kind:member	struct:ftxui::Requirement	access:public
ftxui::Requirement::focused	./FTXUI/include/ftxui/dom/requirement.hpp	46;"	kind:member	struct:ftxui::Requirement	access:public
ftxui::Requirement::min_x	./FTXUI/include/ftxui/dom/requirement.hpp	15;"	kind:member	struct:ftxui::Requirement	access:public
ftxui::Requirement::min_y	./FTXUI/include/ftxui/dom/requirement.hpp	16;"	kind:member	struct:ftxui::Requirement	access:public
ftxui::ResizableSplit	./FTXUI/include/ftxui/component/component.hpp	101;"	kind:prototype	namespace:ftxui	signature:(ResizableSplitOption options)
ftxui::ResizableSplit	./FTXUI/src/ftxui/component/resizable_split.cpp	186;"	kind:function	namespace:ftxui	signature:(ResizableSplitOption options)
ftxui::ResizableSplitBottom	./FTXUI/include/ftxui/component/component.hpp	105;"	kind:prototype	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ftxui::ResizableSplitBottom	./FTXUI/src/ftxui/component/resizable_split.cpp	317;"	kind:function	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ftxui::ResizableSplitLeft	./FTXUI/include/ftxui/component/component.hpp	102;"	kind:prototype	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ftxui::ResizableSplitLeft	./FTXUI/src/ftxui/component/resizable_split.cpp	215;"	kind:function	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ftxui::ResizableSplitOption	./FTXUI/include/ftxui/component/component_options.hpp	210;"	kind:struct	namespace:ftxui
ftxui::ResizableSplitOption::back	./FTXUI/include/ftxui/component/component_options.hpp	212;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
ftxui::ResizableSplitOption::direction	./FTXUI/include/ftxui/component/component_options.hpp	213;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
ftxui::ResizableSplitOption::main	./FTXUI/include/ftxui/component/component_options.hpp	211;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
ftxui::ResizableSplitOption::main_size	./FTXUI/include/ftxui/component/component_options.hpp	214;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
ftxui::ResizableSplitOption::separator_func	./FTXUI/include/ftxui/component/component_options.hpp	217;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
ftxui::ResizableSplitRight	./FTXUI/include/ftxui/component/component.hpp	103;"	kind:prototype	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ftxui::ResizableSplitRight	./FTXUI/src/ftxui/component/resizable_split.cpp	249;"	kind:function	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ftxui::ResizableSplitTop	./FTXUI/include/ftxui/component/component.hpp	104;"	kind:prototype	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ftxui::ResizableSplitTop	./FTXUI/src/ftxui/component/resizable_split.cpp	283;"	kind:function	namespace:ftxui	signature:(Component main, Component back, int* main_size)
ftxui::Screen	./FTXUI/include/ftxui/screen/screen.hpp	27;"	kind:class	namespace:ftxui	inherits:Image
ftxui::Screen::ApplyShader	./FTXUI/include/ftxui/screen/screen.hpp	46;"	kind:prototype	class:ftxui::Screen	access:public	signature:()
ftxui::Screen::ApplyShader	./FTXUI/src/ftxui/screen/screen.cpp	506;"	kind:function	class:ftxui::Screen	signature:()
ftxui::Screen::Clear	./FTXUI/include/ftxui/screen/screen.hpp	41;"	kind:prototype	class:ftxui::Screen	access:public	signature:()
ftxui::Screen::Clear	./FTXUI/src/ftxui/screen/screen.cpp	494;"	kind:function	class:ftxui::Screen	signature:()
ftxui::Screen::Create	./FTXUI/include/ftxui/screen/screen.hpp	31;"	kind:prototype	class:ftxui::Screen	access:public	signature:(Dimensions dimension)
ftxui::Screen::Create	./FTXUI/include/ftxui/screen/screen.hpp	32;"	kind:prototype	class:ftxui::Screen	access:public	signature:(Dimensions width, Dimensions height)
ftxui::Screen::Create	./FTXUI/src/ftxui/screen/screen.cpp	388;"	kind:function	class:ftxui::Screen	signature:(Dimensions width, Dimensions height)
ftxui::Screen::Create	./FTXUI/src/ftxui/screen/screen.cpp	394;"	kind:function	class:ftxui::Screen	signature:(Dimensions dimension)
ftxui::Screen::Cursor	./FTXUI/include/ftxui/screen/screen.hpp	48;"	kind:struct	class:ftxui::Screen	access:public
ftxui::Screen::Cursor::Bar	./FTXUI/include/ftxui/screen/screen.hpp	59;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
ftxui::Screen::Cursor::BarBlinking	./FTXUI/include/ftxui/screen/screen.hpp	58;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
ftxui::Screen::Cursor::Block	./FTXUI/include/ftxui/screen/screen.hpp	55;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
ftxui::Screen::Cursor::BlockBlinking	./FTXUI/include/ftxui/screen/screen.hpp	54;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
ftxui::Screen::Cursor::Hidden	./FTXUI/include/ftxui/screen/screen.hpp	53;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
ftxui::Screen::Cursor::Shape	./FTXUI/include/ftxui/screen/screen.hpp	52;"	kind:enum	struct:ftxui::Screen::Cursor	access:public
ftxui::Screen::Cursor::Underline	./FTXUI/include/ftxui/screen/screen.hpp	57;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
ftxui::Screen::Cursor::UnderlineBlinking	./FTXUI/include/ftxui/screen/screen.hpp	56;"	kind:enumerator	enum:ftxui::Screen::Cursor::Shape
ftxui::Screen::Cursor::shape	./FTXUI/include/ftxui/screen/screen.hpp	61;"	kind:member	struct:ftxui::Screen::Cursor	access:public
ftxui::Screen::Cursor::x	./FTXUI/include/ftxui/screen/screen.hpp	49;"	kind:member	struct:ftxui::Screen::Cursor	access:public
ftxui::Screen::Cursor::y	./FTXUI/include/ftxui/screen/screen.hpp	50;"	kind:member	struct:ftxui::Screen::Cursor	access:public
ftxui::Screen::GetSelectionStyle	./FTXUI/include/ftxui/screen/screen.hpp	73;"	kind:prototype	class:ftxui::Screen	access:public	signature:() const
ftxui::Screen::GetSelectionStyle	./FTXUI/src/ftxui/screen/screen.cpp	555;"	kind:function	class:ftxui::Screen	signature:() const
ftxui::Screen::Hyperlink	./FTXUI/include/ftxui/screen/screen.hpp	70;"	kind:prototype	class:ftxui::Screen	access:public	signature:(uint8_t id) const
ftxui::Screen::Hyperlink	./FTXUI/src/ftxui/screen/screen.cpp	546;"	kind:function	class:ftxui::Screen	signature:(std::uint8_t id) const
ftxui::Screen::Print	./FTXUI/include/ftxui/screen/screen.hpp	37;"	kind:prototype	class:ftxui::Screen	access:public	signature:() const
ftxui::Screen::Print	./FTXUI/src/ftxui/screen/screen.cpp	452;"	kind:function	class:ftxui::Screen	signature:() const
ftxui::Screen::RegisterHyperlink	./FTXUI/include/ftxui/screen/screen.hpp	69;"	kind:prototype	class:ftxui::Screen	access:public	signature:(const std::string& link)
ftxui::Screen::RegisterHyperlink	./FTXUI/src/ftxui/screen/screen.cpp	533;"	kind:function	class:ftxui::Screen	signature:(const std::string& link)
ftxui::Screen::ResetPosition	./FTXUI/include/ftxui/screen/screen.hpp	44;"	kind:prototype	class:ftxui::Screen	access:public	signature:(bool clear = false) const
ftxui::Screen::ResetPosition	./FTXUI/src/ftxui/screen/screen.cpp	475;"	kind:function	class:ftxui::Screen	signature:(bool clear) const
ftxui::Screen::Screen	./FTXUI/include/ftxui/screen/screen.hpp	30;"	kind:prototype	class:ftxui::Screen	access:public	signature:(int dimx, int dimy)
ftxui::Screen::Screen	./FTXUI/src/ftxui/screen/screen.cpp	398;"	kind:function	class:ftxui::Screen	signature:(int dimx, int dimy)
ftxui::Screen::SetCursor	./FTXUI/include/ftxui/screen/screen.hpp	65;"	kind:function	class:ftxui::Screen	access:public	signature:(Cursor cursor)
ftxui::Screen::SetSelectionStyle	./FTXUI/include/ftxui/screen/screen.hpp	74;"	kind:prototype	class:ftxui::Screen	access:public	signature:(SelectionStyle decorator)
ftxui::Screen::SetSelectionStyle	./FTXUI/src/ftxui/screen/screen.cpp	561;"	kind:function	class:ftxui::Screen	signature:(SelectionStyle decorator)
ftxui::Screen::ToString	./FTXUI/include/ftxui/screen/screen.hpp	34;"	kind:prototype	class:ftxui::Screen	access:public	signature:() const
ftxui::Screen::ToString	./FTXUI/src/ftxui/screen/screen.cpp	415;"	kind:function	class:ftxui::Screen	signature:() const
ftxui::Screen::cursor	./FTXUI/include/ftxui/screen/screen.hpp	64;"	kind:function	class:ftxui::Screen	access:public	signature:() const
ftxui::Screen::cursor_	./FTXUI/include/ftxui/screen/screen.hpp	77;"	kind:member	class:ftxui::Screen	access:protected
ftxui::Screen::hyperlinks_	./FTXUI/include/ftxui/screen/screen.hpp	78;"	kind:member	class:ftxui::Screen	access:protected
ftxui::Screen::selection_style_	./FTXUI/include/ftxui/screen/screen.hpp	81;"	kind:member	class:ftxui::Screen	access:protected
ftxui::ScreenInteractive	./FTXUI/include/ftxui/component/screen_interactive.hpp	30;"	kind:class	namespace:ftxui	inherits:Screen
ftxui::ScreenInteractive::Active	./FTXUI/include/ftxui/component/screen_interactive.hpp	44;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::Active	./FTXUI/src/ftxui/component/screen_interactive.cpp	594;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::CaptureMouse	./FTXUI/include/ftxui/component/screen_interactive.hpp	56;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::CaptureMouse	./FTXUI/src/ftxui/component/screen_interactive.cpp	483;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::Dimension	./FTXUI/include/ftxui/component/screen_interactive.hpp	98;"	kind:class	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::Dimension::FitComponent	./FTXUI/include/ftxui/component/screen_interactive.hpp	99;"	kind:member	class:ftxui::ScreenInteractive::Dimension	access:private
ftxui::ScreenInteractive::Dimension::Fixed	./FTXUI/include/ftxui/component/screen_interactive.hpp	100;"	kind:member	class:ftxui::ScreenInteractive::Dimension	access:private
ftxui::ScreenInteractive::Dimension::Fullscreen	./FTXUI/include/ftxui/component/screen_interactive.hpp	101;"	kind:member	class:ftxui::ScreenInteractive::Dimension	access:private
ftxui::ScreenInteractive::Dimension::TerminalOutput	./FTXUI/include/ftxui/component/screen_interactive.hpp	102;"	kind:member	class:ftxui::ScreenInteractive::Dimension	access:private
ftxui::ScreenInteractive::Draw	./FTXUI/include/ftxui/component/screen_interactive.hpp	92;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(Component component)
ftxui::ScreenInteractive::Draw	./FTXUI/src/ftxui/component/screen_interactive.cpp	905;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component)
ftxui::ScreenInteractive::Exit	./FTXUI/include/ftxui/component/screen_interactive.hpp	48;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::Exit	./FTXUI/src/ftxui/component/screen_interactive.cpp	1032;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::ExitLoopClosure	./FTXUI/include/ftxui/component/screen_interactive.hpp	49;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::ExitLoopClosure	./FTXUI/src/ftxui/component/screen_interactive.cpp	1026;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::ExitNow	./FTXUI/include/ftxui/component/screen_interactive.hpp	77;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ftxui::ScreenInteractive::ExitNow	./FTXUI/src/ftxui/component/screen_interactive.cpp	1037;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::FitComponent	./FTXUI/include/ftxui/component/screen_interactive.hpp	37;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::FitComponent	./FTXUI/src/ftxui/component/screen_interactive.cpp	416;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::FixedSize	./FTXUI/include/ftxui/component/screen_interactive.hpp	33;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(int dimx, int dimy)
ftxui::ScreenInteractive::FixedSize	./FTXUI/src/ftxui/component/screen_interactive.cpp	360;"	kind:function	class:ftxui::ScreenInteractive	signature:(int dimx, int dimy)
ftxui::ScreenInteractive::ForceHandleCtrlC	./FTXUI/include/ftxui/component/screen_interactive.hpp	69;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(bool force)
ftxui::ScreenInteractive::ForceHandleCtrlC	./FTXUI/src/ftxui/component/screen_interactive.cpp	570;"	kind:function	class:ftxui::ScreenInteractive	signature:(bool force)
ftxui::ScreenInteractive::ForceHandleCtrlZ	./FTXUI/include/ftxui/component/screen_interactive.hpp	70;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(bool force)
ftxui::ScreenInteractive::ForceHandleCtrlZ	./FTXUI/src/ftxui/component/screen_interactive.cpp	576;"	kind:function	class:ftxui::ScreenInteractive	signature:(bool force)
ftxui::ScreenInteractive::Fullscreen	./FTXUI/include/ftxui/component/screen_interactive.hpp	34;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::Fullscreen	./FTXUI/src/ftxui/component/screen_interactive.cpp	374;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::FullscreenAlternateScreen	./FTXUI/include/ftxui/component/screen_interactive.hpp	36;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::FullscreenAlternateScreen	./FTXUI/src/ftxui/component/screen_interactive.cpp	396;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::FullscreenPrimaryScreen	./FTXUI/include/ftxui/component/screen_interactive.hpp	35;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::FullscreenPrimaryScreen	./FTXUI/src/ftxui/component/screen_interactive.cpp	383;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::GetSelection	./FTXUI/include/ftxui/component/screen_interactive.hpp	73;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::GetSelection	./FTXUI/src/ftxui/component/screen_interactive.cpp	581;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::HandleSelection	./FTXUI/include/ftxui/component/screen_interactive.hpp	90;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(bool handled, Event event)
ftxui::ScreenInteractive::HandleSelection	./FTXUI/src/ftxui/component/screen_interactive.cpp	851;"	kind:function	class:ftxui::ScreenInteractive	signature:(bool handled, Event event)
ftxui::ScreenInteractive::HandleTask	./FTXUI/include/ftxui/component/screen_interactive.hpp	89;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(Component component, Task& task)
ftxui::ScreenInteractive::HandleTask	./FTXUI/src/ftxui/component/screen_interactive.cpp	779;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component, Task& task)
ftxui::ScreenInteractive::HasQuitted	./FTXUI/include/ftxui/component/screen_interactive.hpp	85;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ftxui::ScreenInteractive::HasQuitted	./FTXUI/src/ftxui/component/screen_interactive.cpp	502;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::Install	./FTXUI/include/ftxui/component/screen_interactive.hpp	79;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ftxui::ScreenInteractive::Install	./FTXUI/src/ftxui/component/screen_interactive.cpp	599;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::Loop	./FTXUI/include/ftxui/component/screen_interactive.hpp	47;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(Component)
ftxui::ScreenInteractive::Loop	./FTXUI/src/ftxui/component/screen_interactive.cpp	495;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component)
ftxui::ScreenInteractive::Post	./FTXUI/include/ftxui/component/screen_interactive.hpp	52;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(Task task)
ftxui::ScreenInteractive::Post	./FTXUI/src/ftxui/component/screen_interactive.cpp	448;"	kind:function	class:ftxui::ScreenInteractive	signature:(Task task)
ftxui::ScreenInteractive::PostEvent	./FTXUI/include/ftxui/component/screen_interactive.hpp	53;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(Event event)
ftxui::ScreenInteractive::PostEvent	./FTXUI/src/ftxui/component/screen_interactive.cpp	461;"	kind:function	class:ftxui::ScreenInteractive	signature:(Event event)
ftxui::ScreenInteractive::PostMain	./FTXUI/include/ftxui/component/screen_interactive.hpp	83;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ftxui::ScreenInteractive::PostMain	./FTXUI/src/ftxui/component/screen_interactive.cpp	529;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::PreMain	./FTXUI/include/ftxui/component/screen_interactive.hpp	82;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ftxui::ScreenInteractive::PreMain	./FTXUI/src/ftxui/component/screen_interactive.cpp	507;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::Private	./FTXUI/include/ftxui/component/screen_interactive.hpp	158;"	kind:class	class:ftxui::ScreenInteractive	access:public
ftxui::ScreenInteractive::Private::Signal	./FTXUI/include/ftxui/component/screen_interactive.hpp	160;"	kind:function	class:ftxui::ScreenInteractive::Private	access:public	signature:(ScreenInteractive& s, int signal)
ftxui::ScreenInteractive::RefreshSelection	./FTXUI/include/ftxui/component/screen_interactive.hpp	91;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ftxui::ScreenInteractive::RequestAnimationFrame	./FTXUI/include/ftxui/component/screen_interactive.hpp	54;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::RequestAnimationFrame	./FTXUI/src/ftxui/component/screen_interactive.cpp	467;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::ResetCursorPosition	./FTXUI/include/ftxui/component/screen_interactive.hpp	93;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ftxui::ScreenInteractive::ResetCursorPosition	./FTXUI/src/ftxui/component/screen_interactive.cpp	1019;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::RunOnce	./FTXUI/include/ftxui/component/screen_interactive.hpp	86;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(Component component)
ftxui::ScreenInteractive::RunOnce	./FTXUI/src/ftxui/component/screen_interactive.cpp	760;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component)
ftxui::ScreenInteractive::RunOnceBlocking	./FTXUI/include/ftxui/component/screen_interactive.hpp	87;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(Component component)
ftxui::ScreenInteractive::RunOnceBlocking	./FTXUI/src/ftxui/component/screen_interactive.cpp	750;"	kind:function	class:ftxui::ScreenInteractive	signature:(Component component)
ftxui::ScreenInteractive::ScreenInteractive	./FTXUI/include/ftxui/component/screen_interactive.hpp	106;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(int dimx, int dimy, Dimension dimension, bool use_alternative_screen)
ftxui::ScreenInteractive::ScreenInteractive	./FTXUI/src/ftxui/component/screen_interactive.cpp	349;"	kind:function	class:ftxui::ScreenInteractive	signature:(int dimx, int dimy, Dimension dimension, bool use_alternative_screen)
ftxui::ScreenInteractive::SelectionChange	./FTXUI/include/ftxui/component/screen_interactive.hpp	74;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(std::function<void()> callback)
ftxui::ScreenInteractive::SelectionChange	./FTXUI/src/ftxui/component/screen_interactive.cpp	588;"	kind:function	class:ftxui::ScreenInteractive	signature:(std::function<void()> callback)
ftxui::ScreenInteractive::SelectionData	./FTXUI/include/ftxui/component/screen_interactive.hpp	141;"	kind:struct	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::SelectionData::empty	./FTXUI/include/ftxui/component/screen_interactive.hpp	146;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
ftxui::ScreenInteractive::SelectionData::end_x	./FTXUI/include/ftxui/component/screen_interactive.hpp	144;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
ftxui::ScreenInteractive::SelectionData::end_y	./FTXUI/include/ftxui/component/screen_interactive.hpp	145;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
ftxui::ScreenInteractive::SelectionData::operator !=	./FTXUI/include/ftxui/component/screen_interactive.hpp	148;"	kind:prototype	struct:ftxui::ScreenInteractive::SelectionData	access:public	signature:(const SelectionData& other) const
ftxui::ScreenInteractive::SelectionData::operator !=	./FTXUI/src/ftxui/component/screen_interactive.cpp	1084;"	kind:function	class:ftxui::ScreenInteractive::SelectionData	signature:( const ScreenInteractive::SelectionData& other) const
ftxui::ScreenInteractive::SelectionData::operator ==	./FTXUI/include/ftxui/component/screen_interactive.hpp	147;"	kind:prototype	struct:ftxui::ScreenInteractive::SelectionData	access:public	signature:(const SelectionData& other) const
ftxui::ScreenInteractive::SelectionData::operator ==	./FTXUI/src/ftxui/component/screen_interactive.cpp	1072;"	kind:function	class:ftxui::ScreenInteractive::SelectionData	signature:( const ScreenInteractive::SelectionData& other) const
ftxui::ScreenInteractive::SelectionData::start_x	./FTXUI/include/ftxui/component/screen_interactive.hpp	142;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
ftxui::ScreenInteractive::SelectionData::start_y	./FTXUI/include/ftxui/component/screen_interactive.hpp	143;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
ftxui::ScreenInteractive::Signal	./FTXUI/include/ftxui/component/screen_interactive.hpp	95;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:(int signal)
ftxui::ScreenInteractive::Signal	./FTXUI/src/ftxui/component/screen_interactive.cpp	1043;"	kind:function	class:ftxui::ScreenInteractive	signature:(int signal)
ftxui::ScreenInteractive::TerminalOutput	./FTXUI/include/ftxui/component/screen_interactive.hpp	38;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:()
ftxui::ScreenInteractive::TerminalOutput	./FTXUI/src/ftxui/component/screen_interactive.cpp	406;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::TrackMouse	./FTXUI/include/ftxui/component/screen_interactive.hpp	41;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(bool enable = true)
ftxui::ScreenInteractive::TrackMouse	./FTXUI/src/ftxui/component/screen_interactive.cpp	441;"	kind:function	class:ftxui::ScreenInteractive	signature:(bool enable)
ftxui::ScreenInteractive::Uninstall	./FTXUI/include/ftxui/component/screen_interactive.hpp	80;"	kind:prototype	class:ftxui::ScreenInteractive	access:private	signature:()
ftxui::ScreenInteractive::Uninstall	./FTXUI/src/ftxui/component/screen_interactive.cpp	741;"	kind:function	class:ftxui::ScreenInteractive	signature:()
ftxui::ScreenInteractive::WithRestoredIO	./FTXUI/include/ftxui/component/screen_interactive.hpp	61;"	kind:prototype	class:ftxui::ScreenInteractive	access:public	signature:(Closure)
ftxui::ScreenInteractive::WithRestoredIO	./FTXUI/src/ftxui/component/screen_interactive.cpp	560;"	kind:function	class:ftxui::ScreenInteractive	signature:(Closure fn)
ftxui::ScreenInteractive::animation_listener_	./FTXUI/include/ftxui/component/screen_interactive.hpp	121;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::animation_requested_	./FTXUI/include/ftxui/component/screen_interactive.hpp	122;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::cursor_reset_shape_	./FTXUI/include/ftxui/component/screen_interactive.hpp	137;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::cursor_x_	./FTXUI/include/ftxui/component/screen_interactive.hpp	125;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::cursor_y_	./FTXUI/include/ftxui/component/screen_interactive.hpp	126;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::dimension_	./FTXUI/include/ftxui/component/screen_interactive.hpp	104;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::event_listener_	./FTXUI/include/ftxui/component/screen_interactive.hpp	120;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::force_handle_ctrl_c_	./FTXUI/include/ftxui/component/screen_interactive.hpp	133;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::force_handle_ctrl_z_	./FTXUI/include/ftxui/component/screen_interactive.hpp	134;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::frame_valid_	./FTXUI/include/ftxui/component/screen_interactive.hpp	131;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::mouse_captured	./FTXUI/include/ftxui/component/screen_interactive.hpp	128;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::previous_animation_time_	./FTXUI/include/ftxui/component/screen_interactive.hpp	123;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::previous_frame_resized_	./FTXUI/include/ftxui/component/screen_interactive.hpp	129;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::reset_cursor_position	./FTXUI/include/ftxui/component/screen_interactive.hpp	117;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::selection_	./FTXUI/include/ftxui/component/screen_interactive.hpp	152;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::selection_data_	./FTXUI/include/ftxui/component/screen_interactive.hpp	150;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::selection_data_previous_	./FTXUI/include/ftxui/component/screen_interactive.hpp	151;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::selection_on_change_	./FTXUI/include/ftxui/component/screen_interactive.hpp	153;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::selection_pending_	./FTXUI/include/ftxui/component/screen_interactive.hpp	140;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::set_cursor_position	./FTXUI/include/ftxui/component/screen_interactive.hpp	116;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::suspended_screen_	./FTXUI/include/ftxui/component/screen_interactive.hpp	97;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::task_receiver_	./FTXUI/include/ftxui/component/screen_interactive.hpp	114;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::task_sender_	./FTXUI/include/ftxui/component/screen_interactive.hpp	113;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::track_mouse_	./FTXUI/include/ftxui/component/screen_interactive.hpp	111;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::ScreenInteractive::use_alternative_screen_	./FTXUI/include/ftxui/component/screen_interactive.hpp	105;"	kind:member	class:ftxui::ScreenInteractive	access:private
ftxui::Selection	./FTXUI/include/ftxui/dom/selection.hpp	17;"	kind:class	namespace:ftxui
ftxui::Selection::AddPart	./FTXUI/include/ftxui/dom/selection.hpp	28;"	kind:prototype	class:ftxui::Selection	access:public	signature:(const std::string& part, int y, int left, int right)
ftxui::Selection::AddPart	./FTXUI/src/ftxui/dom/selection.cpp	146;"	kind:function	class:ftxui::Selection	signature:(const std::string& part, int y, int left, int right)
ftxui::Selection::GetBox	./FTXUI/include/ftxui/dom/selection.hpp	22;"	kind:prototype	class:ftxui::Selection	access:public	signature:() const
ftxui::Selection::GetBox	./FTXUI/src/ftxui/dom/selection.cpp	67;"	kind:function	class:ftxui::Selection	signature:() const
ftxui::Selection::GetParts	./FTXUI/include/ftxui/dom/selection.hpp	29;"	kind:function	class:ftxui::Selection	access:public	signature:()
ftxui::Selection::IsEmpty	./FTXUI/include/ftxui/dom/selection.hpp	26;"	kind:function	class:ftxui::Selection	access:public	signature:() const
ftxui::Selection::SaturateHorizontal	./FTXUI/include/ftxui/dom/selection.hpp	24;"	kind:prototype	class:ftxui::Selection	access:public	signature:(Box box)
ftxui::Selection::SaturateHorizontal	./FTXUI/src/ftxui/dom/selection.cpp	75;"	kind:function	class:ftxui::Selection	signature:(Box box)
ftxui::Selection::SaturateVertical	./FTXUI/include/ftxui/dom/selection.hpp	25;"	kind:prototype	class:ftxui::Selection	access:public	signature:(Box box)
ftxui::Selection::SaturateVertical	./FTXUI/src/ftxui/dom/selection.cpp	113;"	kind:function	class:ftxui::Selection	signature:(Box box)
ftxui::Selection::Selection	./FTXUI/include/ftxui/dom/selection.hpp	19;"	kind:prototype	class:ftxui::Selection	access:public	signature:()
ftxui::Selection::Selection	./FTXUI/include/ftxui/dom/selection.hpp	20;"	kind:prototype	class:ftxui::Selection	access:public	signature:(int start_x, int start_y, int end_x, int end_y)
ftxui::Selection::Selection	./FTXUI/include/ftxui/dom/selection.hpp	32;"	kind:prototype	class:ftxui::Selection	access:private	signature:(int start_x, int start_y, int end_x, int end_y, Selection* parent)
ftxui::Selection::Selection	./FTXUI/src/ftxui/dom/selection.cpp	34;"	kind:function	class:ftxui::Selection	signature:(int start_x, int start_y, int end_x, int end_y)
ftxui::Selection::Selection	./FTXUI/src/ftxui/dom/selection.cpp	47;"	kind:function	class:ftxui::Selection	signature:(int start_x, int start_y, int end_x, int end_y, Selection* parent)
ftxui::Selection::box_	./FTXUI/include/ftxui/dom/selection.hpp	38;"	kind:member	class:ftxui::Selection	access:private
ftxui::Selection::empty_	./FTXUI/include/ftxui/dom/selection.hpp	40;"	kind:member	class:ftxui::Selection	access:private
ftxui::Selection::end_x_	./FTXUI/include/ftxui/dom/selection.hpp	36;"	kind:member	class:ftxui::Selection	access:private
ftxui::Selection::end_y_	./FTXUI/include/ftxui/dom/selection.hpp	37;"	kind:member	class:ftxui::Selection	access:private
ftxui::Selection::parent_	./FTXUI/include/ftxui/dom/selection.hpp	39;"	kind:member	class:ftxui::Selection	access:private
ftxui::Selection::parts_	./FTXUI/include/ftxui/dom/selection.hpp	41;"	kind:member	class:ftxui::Selection	access:private
ftxui::Selection::start_x_	./FTXUI/include/ftxui/dom/selection.hpp	34;"	kind:member	class:ftxui::Selection	access:private
ftxui::Selection::start_y_	./FTXUI/include/ftxui/dom/selection.hpp	35;"	kind:member	class:ftxui::Selection	access:private
ftxui::Selection::x_	./FTXUI/include/ftxui/dom/selection.hpp	44;"	kind:member	class:ftxui::Selection	access:private
ftxui::Selection::y_	./FTXUI/include/ftxui/dom/selection.hpp	45;"	kind:member	class:ftxui::Selection	access:private
ftxui::SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	53;"	kind:class	namespace:ftxui
ftxui::SenderImpl::Clone	./FTXUI/include/ftxui/component/receiver.hpp	62;"	kind:function	class:ftxui::SenderImpl	access:public	signature:()
ftxui::SenderImpl::Send	./FTXUI/include/ftxui/component/receiver.hpp	59;"	kind:function	class:ftxui::SenderImpl	access:public	signature:(T t)
ftxui::SenderImpl::SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	55;"	kind:prototype	class:ftxui::SenderImpl	access:public	signature:(const SenderImpl&)
ftxui::SenderImpl::SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	56;"	kind:prototype	class:ftxui::SenderImpl	access:public	signature:(SenderImpl&&)
ftxui::SenderImpl::SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	66;"	kind:function	class:ftxui::SenderImpl	access:private	signature:(ReceiverImpl<T>* consumer)
ftxui::SenderImpl::operator =	./FTXUI/include/ftxui/component/receiver.hpp	57;"	kind:prototype	class:ftxui::SenderImpl	access:public	signature:(const SenderImpl&)
ftxui::SenderImpl::operator =	./FTXUI/include/ftxui/component/receiver.hpp	58;"	kind:prototype	class:ftxui::SenderImpl	access:public	signature:(SenderImpl&&)
ftxui::SenderImpl::receiver_	./FTXUI/include/ftxui/component/receiver.hpp	67;"	kind:member	class:ftxui::SenderImpl	access:private
ftxui::SenderImpl::~SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	60;"	kind:function	class:ftxui::SenderImpl	access:public	signature:()
ftxui::Slider	./FTXUI/include/ftxui/component/component.hpp	82;"	kind:prototype	namespace:ftxui	signature:(SliderOption<T> options)
ftxui::Slider	./FTXUI/include/ftxui/component/component.hpp	85;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, Ref<int> value, ConstRef<int> min = 0, ConstRef<int> max = 100, ConstRef<int> increment = 5)
ftxui::Slider	./FTXUI/include/ftxui/component/component.hpp	90;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, Ref<float> value, ConstRef<float> min = 0.f, ConstRef<float> max = 100.f, ConstRef<float> increment = 5.f)
ftxui::Slider	./FTXUI/include/ftxui/component/component.hpp	95;"	kind:prototype	namespace:ftxui	signature:(ConstStringRef label, Ref<long> value, ConstRef<long> min = 0L, ConstRef<long> max = 100L, ConstRef<long> increment = 5L)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	289;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, Ref<int> value, ConstRef<int> min, ConstRef<int> max, ConstRef<int> increment)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	303;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, Ref<float> value, ConstRef<float> min, ConstRef<float> max, ConstRef<float> increment)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	316;"	kind:function	namespace:ftxui	signature:(ConstStringRef label, Ref<long> value, ConstRef<long> min, ConstRef<long> max, ConstRef<long> increment)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	346;"	kind:function	namespace:ftxui	signature:(SliderOption<T> options)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	350;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<int8_t>)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	351;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<int16_t>)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	352;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<int32_t>)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	353;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<int64_t>)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	355;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<uint8_t>)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	356;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<uint16_t>)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	357;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<uint32_t>)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	358;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<uint64_t>)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	360;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<float>)
ftxui::Slider	./FTXUI/src/ftxui/component/slider.cpp	361;"	kind:prototype	namespace:ftxui	file:	signature:(SliderOption<double>)
ftxui::SliderOption	./FTXUI/include/ftxui/component/component_options.hpp	223;"	kind:struct	namespace:ftxui
ftxui::SliderOption::color_active	./FTXUI/include/ftxui/component/component_options.hpp	229;"	kind:member	struct:ftxui::SliderOption	access:public
ftxui::SliderOption::color_inactive	./FTXUI/include/ftxui/component/component_options.hpp	230;"	kind:member	struct:ftxui::SliderOption	access:public
ftxui::SliderOption::direction	./FTXUI/include/ftxui/component/component_options.hpp	228;"	kind:member	struct:ftxui::SliderOption	access:public
ftxui::SliderOption::increment	./FTXUI/include/ftxui/component/component_options.hpp	227;"	kind:member	struct:ftxui::SliderOption	access:public
ftxui::SliderOption::max	./FTXUI/include/ftxui/component/component_options.hpp	226;"	kind:member	struct:ftxui::SliderOption	access:public
ftxui::SliderOption::min	./FTXUI/include/ftxui/component/component_options.hpp	225;"	kind:member	struct:ftxui::SliderOption	access:public
ftxui::SliderOption::on_change	./FTXUI/include/ftxui/component/component_options.hpp	231;"	kind:member	struct:ftxui::SliderOption	access:public
ftxui::SliderOption::value	./FTXUI/include/ftxui/component/component_options.hpp	224;"	kind:member	struct:ftxui::SliderOption	access:public
ftxui::StackedContainer	./FTXUI/src/ftxui/component/container.cpp	241;"	kind:class	namespace:ftxui	file:	inherits:ContainerBase
ftxui::StackedContainer::StackedContainer	./FTXUI/src/ftxui/component/container.cpp	243;"	kind:function	class:ftxui::StackedContainer	access:public	signature:(Components children)
ftxui::StringRef	./FTXUI/include/ftxui/util/ref.hpp	82;"	kind:class	namespace:ftxui	inherits:Ref
ftxui::StringRef::StringRef	./FTXUI/include/ftxui/util/ref.hpp	86;"	kind:function	class:ftxui::StringRef	access:public	signature:(const wchar_t* ref)
ftxui::StringRef::StringRef	./FTXUI/include/ftxui/util/ref.hpp	88;"	kind:function	class:ftxui::StringRef	access:public	signature:(const char* ref)
ftxui::TEST	./FTXUI/src/ftxui/component/animation_test.cpp	13;"	kind:function	namespace:ftxui	signature:(AnimationTest, StartAndEnd)
ftxui::TEST	./FTXUI/src/ftxui/component/button_test.cpp	38;"	kind:function	namespace:ftxui	signature:(ButtonTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/component/button_test.cpp	97;"	kind:function	namespace:ftxui	signature:(ButtonTest, Animation)
ftxui::TEST	./FTXUI/src/ftxui/component/collapsible_test.cpp	14;"	kind:function	namespace:ftxui	signature:(CollapsibleTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/component/component_test.cpp	101;"	kind:function	namespace:ftxui	signature:(ContainerTest, Add)
ftxui::TEST	./FTXUI/src/ftxui/component/component_test.cpp	129;"	kind:function	namespace:ftxui	signature:(ContainerTest, ChildAt)
ftxui::TEST	./FTXUI/src/ftxui/component/component_test.cpp	159;"	kind:function	namespace:ftxui	signature:(ComponentTest, NonFocusableAreNotFocused)
ftxui::TEST	./FTXUI/src/ftxui/component/component_test.cpp	20;"	kind:function	namespace:ftxui	signature:(ContainerTest, DeleteParentFirst)
ftxui::TEST	./FTXUI/src/ftxui/component/component_test.cpp	28;"	kind:function	namespace:ftxui	signature:(ContainerTest, DeleteChildFirst)
ftxui::TEST	./FTXUI/src/ftxui/component/component_test.cpp	36;"	kind:function	namespace:ftxui	signature:(ContainerTest, Detach)
ftxui::TEST	./FTXUI/src/ftxui/component/component_test.cpp	79;"	kind:function	namespace:ftxui	signature:(ContainerTest, DetachAllChildren)
ftxui::TEST	./FTXUI/src/ftxui/component/container_test.cpp	173;"	kind:function	namespace:ftxui	signature:(ContainerTest, SetActiveChild)
ftxui::TEST	./FTXUI/src/ftxui/component/container_test.cpp	21;"	kind:function	namespace:ftxui	signature:(ContainerTest, HorizontalEvent)
ftxui::TEST	./FTXUI/src/ftxui/component/container_test.cpp	227;"	kind:function	namespace:ftxui	signature:(ContainerTest, TakeFocus)
ftxui::TEST	./FTXUI/src/ftxui/component/container_test.cpp	309;"	kind:function	namespace:ftxui	signature:(ContainerTest, TabFocusable)
ftxui::TEST	./FTXUI/src/ftxui/component/container_test.cpp	97;"	kind:function	namespace:ftxui	signature:(ContainerTest, VerticalEvent)
ftxui::TEST	./FTXUI/src/ftxui/component/dropdown_test.cpp	12;"	kind:function	namespace:ftxui	signature:(DropdownTest, Empty)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	119;"	kind:function	namespace:ftxui	signature:(InputTest, ArrowUpDown)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	191;"	kind:function	namespace:ftxui	signature:(InputTest, Insert)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	19;"	kind:function	namespace:ftxui	signature:(InputTest, Init)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	227;"	kind:function	namespace:ftxui	signature:(InputTest, Home)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	252;"	kind:function	namespace:ftxui	signature:(InputTest, End)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	275;"	kind:function	namespace:ftxui	signature:(InputTest, Delete)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	29;"	kind:function	namespace:ftxui	signature:(InputTest, Type)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	336;"	kind:function	namespace:ftxui	signature:(InputTest, Backspace)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	393;"	kind:function	namespace:ftxui	signature:(InputTest, CtrlArrow)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	474;"	kind:function	namespace:ftxui	signature:(InputTest, CtrlArrowLeft2)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	504;"	kind:function	namespace:ftxui	signature:(InputTest, CtrlArrowRight)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	540;"	kind:function	namespace:ftxui	signature:(InputTest, CtrlArrowRight2)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	568;"	kind:function	namespace:ftxui	signature:(InputTest, TypePassword)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	593;"	kind:function	namespace:ftxui	signature:(InputTest, MouseClick)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	62;"	kind:function	namespace:ftxui	signature:(InputTest, ArrowLeftRight)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	688;"	kind:function	namespace:ftxui	signature:(InputTest, MouseClickComplex)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	744;"	kind:function	namespace:ftxui	signature:(InputTest, OnEnter)
ftxui::TEST	./FTXUI/src/ftxui/component/input_test.cpp	756;"	kind:function	namespace:ftxui	signature:(InputTest, InsertMode)
ftxui::TEST	./FTXUI/src/ftxui/component/menu_test.cpp	105;"	kind:function	namespace:ftxui	signature:(MenuTest, DirectionsRight)
ftxui::TEST	./FTXUI/src/ftxui/component/menu_test.cpp	129;"	kind:function	namespace:ftxui	signature:(MenuTest, DirectionsLeft)
ftxui::TEST	./FTXUI/src/ftxui/component/menu_test.cpp	153;"	kind:function	namespace:ftxui	signature:(MenuTest, AnimationsHorizontal)
ftxui::TEST	./FTXUI/src/ftxui/component/menu_test.cpp	189;"	kind:function	namespace:ftxui	signature:(MenuTest, AnimationsVertical)
ftxui::TEST	./FTXUI/src/ftxui/component/menu_test.cpp	229;"	kind:function	namespace:ftxui	signature:(MenuTest, EntryIndex)
ftxui::TEST	./FTXUI/src/ftxui/component/menu_test.cpp	23;"	kind:function	namespace:ftxui	signature:(MenuTest, RemoveEntries)
ftxui::TEST	./FTXUI/src/ftxui/component/menu_test.cpp	249;"	kind:function	namespace:ftxui	signature:(MenuTest, MenuEntryIndex)
ftxui::TEST	./FTXUI/src/ftxui/component/menu_test.cpp	54;"	kind:function	namespace:ftxui	signature:(MenuTest, DirectionDown)
ftxui::TEST	./FTXUI/src/ftxui/component/menu_test.cpp	81;"	kind:function	namespace:ftxui	signature:(MenuTest, DirectionsUp)
ftxui::TEST	./FTXUI/src/ftxui/component/modal_test.cpp	15;"	kind:function	namespace:ftxui	signature:(ModalTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	139;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationHome)
ftxui::TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	169;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationPageDown)
ftxui::TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	198;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationPageUp)
ftxui::TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	20;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationArrow)
ftxui::TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	227;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationEnd)
ftxui::TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	259;"	kind:function	namespace:ftxui	signature:(RadioboxTest, EventSpace)
ftxui::TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	279;"	kind:function	namespace:ftxui	signature:(RadioboxTest, RemoveEntries)
ftxui::TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	55;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationArrowVim)
ftxui::TEST	./FTXUI/src/ftxui/component/radiobox_test.cpp	89;"	kind:function	namespace:ftxui	signature:(RadioboxTest, NavigationTab)
ftxui::TEST	./FTXUI/src/ftxui/component/receiver_test.cpp	13;"	kind:function	namespace:ftxui	signature:(Receiver, Basic)
ftxui::TEST	./FTXUI/src/ftxui/component/receiver_test.cpp	33;"	kind:function	namespace:ftxui	signature:(Receiver, BasicWithThread)
ftxui::TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	104;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicRightWithCustomSeparator)
ftxui::TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	129;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicTop)
ftxui::TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	144;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicTopWithCustomSeparator)
ftxui::TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	169;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicBottom)
ftxui::TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	184;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicBottomWithCustomSeparator)
ftxui::TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	209;"	kind:function	namespace:ftxui	signature:(ResizableSplit, NavigationVertical)
ftxui::TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	49;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicLeft)
ftxui::TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	64;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicLeftWithCustomSeparator)
ftxui::TEST	./FTXUI/src/ftxui/component/resizable_split_test.cpp	89;"	kind:function	namespace:ftxui	signature:(ResizableSplit, BasicRight)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	107;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, CtrlC_NotForced)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	34;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGTERM)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	37;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGSEGV)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	40;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGINT)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	43;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGILL)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	46;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGABRT)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	49;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, Signal_SIGFPE)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	55;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, PostEventToNonActive)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	62;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, PostTaskToNonActive)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	67;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, CtrlC)
ftxui::TEST	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	80;"	kind:function	namespace:ftxui	signature:(ScreenInteractive, CtrlC_Forced)
ftxui::TEST	./FTXUI/src/ftxui/component/slider_test.cpp	111;"	kind:function	namespace:ftxui	signature:(SliderTest, Down)
ftxui::TEST	./FTXUI/src/ftxui/component/slider_test.cpp	144;"	kind:function	namespace:ftxui	signature:(SliderTest, Up)
ftxui::TEST	./FTXUI/src/ftxui/component/slider_test.cpp	176;"	kind:function	namespace:ftxui	signature:(SliderTest, Focus)
ftxui::TEST	./FTXUI/src/ftxui/component/slider_test.cpp	47;"	kind:function	namespace:ftxui	signature:(SliderTest, Right)
ftxui::TEST	./FTXUI/src/ftxui/component/slider_test.cpp	79;"	kind:function	namespace:ftxui	signature:(SliderTest, Left)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	122;"	kind:function	namespace:ftxui	signature:(Event, MouseLeftMoved)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	149;"	kind:function	namespace:ftxui	signature:(Event, MouseLeftClickReleased)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	175;"	kind:function	namespace:ftxui	signature:(Event, MouseReporting)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	18;"	kind:function	namespace:ftxui	signature:(Event, Character)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	197;"	kind:function	namespace:ftxui	signature:(Event, MouseMiddleClick)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	223;"	kind:function	namespace:ftxui	signature:(Event, MouseRightClick)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	249;"	kind:function	namespace:ftxui	signature:(Event, UTF8)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	41;"	kind:function	namespace:ftxui	signature:(Event, EscapeKeyWithoutWaiting)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	52;"	kind:function	namespace:ftxui	signature:(Event, EscapeKeyNotEnoughWait)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	64;"	kind:function	namespace:ftxui	signature:(Event, EscapeKeyEnoughWait)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	78;"	kind:function	namespace:ftxui	signature:(Event, EscapeFast)
ftxui::TEST	./FTXUI/src/ftxui/component/terminal_input_parser_test.cpp	96;"	kind:function	namespace:ftxui	signature:(Event, MouseLeftClickPressed)
ftxui::TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	118;"	kind:function	namespace:ftxui	signature:(ToggleTest, OnEnter)
ftxui::TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	154;"	kind:function	namespace:ftxui	signature:(ToggleTest, RemoveEntries)
ftxui::TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	18;"	kind:function	namespace:ftxui	signature:(ToggleTest, leftRightArrow)
ftxui::TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	62;"	kind:function	namespace:ftxui	signature:(ToggleTest, Tab)
ftxui::TEST	./FTXUI/src/ftxui/component/toggle_test.cpp	89;"	kind:function	namespace:ftxui	signature:(ToggleTest, OnChange)
ftxui::TEST	./FTXUI/src/ftxui/dom/blink_test.cpp	14;"	kind:function	namespace:ftxui	signature:(BlinkTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/dom/bold_test.cpp	14;"	kind:function	namespace:ftxui	signature:(BoldTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/dom/border_test.cpp	14;"	kind:function	namespace:ftxui	signature:(BorderTest, Default)
ftxui::TEST	./FTXUI/src/ftxui/dom/border_test.cpp	24;"	kind:function	namespace:ftxui	signature:(BorderTest, Light)
ftxui::TEST	./FTXUI/src/ftxui/dom/border_test.cpp	34;"	kind:function	namespace:ftxui	signature:(BorderTest, Double)
ftxui::TEST	./FTXUI/src/ftxui/dom/border_test.cpp	44;"	kind:function	namespace:ftxui	signature:(BorderTest, Rounded)
ftxui::TEST	./FTXUI/src/ftxui/dom/border_test.cpp	54;"	kind:function	namespace:ftxui	signature:(BorderTest, Heavy)
ftxui::TEST	./FTXUI/src/ftxui/dom/border_test.cpp	64;"	kind:function	namespace:ftxui	signature:(BorderTest, Empty)
ftxui::TEST	./FTXUI/src/ftxui/dom/border_test.cpp	74;"	kind:function	namespace:ftxui	signature:(BorderTest, Styled)
ftxui::TEST	./FTXUI/src/ftxui/dom/border_test.cpp	84;"	kind:function	namespace:ftxui	signature:(BorderTest, WithPixel)
ftxui::TEST	./FTXUI/src/ftxui/dom/border_test.cpp	96;"	kind:function	namespace:ftxui	signature:(BorderTest, Window)
ftxui::TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	29;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldPoint)
ftxui::TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	47;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldPointColor)
ftxui::TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	62;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldBlock)
ftxui::TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	80;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldBlockColor)
ftxui::TEST	./FTXUI/src/ftxui/dom/canvas_test.cpp	95;"	kind:function	namespace:ftxui	signature:(CanvasTest, GoldText)
ftxui::TEST	./FTXUI/src/ftxui/dom/color_test.cpp	15;"	kind:function	namespace:ftxui	signature:(ColorTest, Foreground)
ftxui::TEST	./FTXUI/src/ftxui/dom/color_test.cpp	23;"	kind:function	namespace:ftxui	signature:(ColorTest, Background)
ftxui::TEST	./FTXUI/src/ftxui/dom/dbox_test.cpp	14;"	kind:function	namespace:ftxui	signature:(DBoxTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/dom/dim_test.cpp	14;"	kind:function	namespace:ftxui	signature:(DimTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_helper_test.cpp	122;"	kind:function	namespace:ftxui	signature:(FlexboxHelperTest, BasicRowInversed)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_helper_test.cpp	12;"	kind:function	namespace:ftxui	signature:(FlexboxHelperTest, BasicRow)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_helper_test.cpp	177;"	kind:function	namespace:ftxui	signature:(FlexboxHelperTest, BasicColumnInversed)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_helper_test.cpp	67;"	kind:function	namespace:ftxui	signature:(FlexboxHelperTest, BasicColumn)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	109;"	kind:function	namespace:ftxui	signature:(FlexboxTest, JustifyContentSpaceBetween)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	129;"	kind:function	namespace:ftxui	signature:(FlexboxTest, JustifyContentSpaceAround)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	151;"	kind:function	namespace:ftxui	signature:(FlexboxTest, JustifyContentSpaceEvenly)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	15;"	kind:function	namespace:ftxui	signature:(FlexboxTest, BasicRow)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	173;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignItemsFlexEnd)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	198;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignItemsCenter)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	223;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentFlexEnd)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	246;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentCenter)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	269;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentSpaceBetween)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	297;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentSpaceAround)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	325;"	kind:function	namespace:ftxui	signature:(FlexboxTest, AlignContentSpaceEvenly)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	33;"	kind:function	namespace:ftxui	signature:(FlexboxTest, BasicRowInversed)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	353;"	kind:function	namespace:ftxui	signature:(FlexboxTest, GapX)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	381;"	kind:function	namespace:ftxui	signature:(FlexboxTest, GapX2)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	409;"	kind:function	namespace:ftxui	signature:(FlexboxTest, GapY)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	437;"	kind:function	namespace:ftxui	signature:(FlexboxTest, Focus)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	51;"	kind:function	namespace:ftxui	signature:(FlexboxTest, BasicColumn)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	70;"	kind:function	namespace:ftxui	signature:(FlexboxTest, BasicColumnInversed)
ftxui::TEST	./FTXUI/src/ftxui/dom/flexbox_test.cpp	89;"	kind:function	namespace:ftxui	signature:(FlexboxTest, JustifyContentCenter)
ftxui::TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	13;"	kind:function	namespace:ftxui	signature:(GaugeTest, ZeroHorizontal)
ftxui::TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	21;"	kind:function	namespace:ftxui	signature:(GaugeTest, HalfHorizontal)
ftxui::TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	33;"	kind:function	namespace:ftxui	signature:(GaugeTest, OneHorizontal)
ftxui::TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	41;"	kind:function	namespace:ftxui	signature:(GaugeTest, ZeroVertical)
ftxui::TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	61;"	kind:function	namespace:ftxui	signature:(GaugeTest, HalfVertical)
ftxui::TEST	./FTXUI/src/ftxui/dom/gauge_test.cpp	81;"	kind:function	namespace:ftxui	signature:(GaugeTest, OneVertical)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	109;"	kind:function	namespace:ftxui	signature:(GridboxTest, CenterShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	133;"	kind:function	namespace:ftxui	signature:(GridboxTest, CenterShrinkColumn)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	157;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	187;"	kind:function	namespace:ftxui	signature:(GridboxTest, Vertical_NoFlex_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	215;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexGrow_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	245;"	kind:function	namespace:ftxui	signature:(GridboxTest, Vertical_FlexGrow_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	273;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_FlexGrow_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	29;"	kind:function	namespace:ftxui	signature:(GridboxTest, UnfilledRectangular)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	303;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_NoFlex_FlexGrow)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	333;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexGrow_NoFlex_FlexGrow)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	365;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexGrow_FlexGrow_FlexGrow)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	37;"	kind:function	namespace:ftxui	signature:(GridboxTest, DifferentSize)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	401;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexShrink_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	431;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_FlexShrink_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	461;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_NoFlex_NoFlex_FlexShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	491;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexShrink_NoFlex_FlexShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	520;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexShrink_FlexShrink_FlexShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	551;"	kind:function	namespace:ftxui	signature:(GridboxTest, Horizontal_FlexGrow_NoFlex_FlewShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	583;"	kind:function	namespace:ftxui	signature:(GridboxTest, MissingCells)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	601;"	kind:function	namespace:ftxui	signature:(GridboxTest, Focus)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	61;"	kind:function	namespace:ftxui	signature:(GridboxTest, CenterFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/gridbox_test.cpp	85;"	kind:function	namespace:ftxui	signature:(GridboxTest, CenterFlexCross)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	100;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_NoFlex_FlexGrow)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	128;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexGrow_NoFlex_FlexGrow)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	158;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexGrow_FlexGrow_FlexGrow)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	16;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	192;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexShrink_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	220;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_FlexShrink_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	248;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_NoFlex_FlexShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	276;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexShrink_NoFlex_FlexShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	303;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexShrink_FlexShrink_FlexShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	332;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexGrow_NoFlex_FlewShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	44;"	kind:function	namespace:ftxui	signature:(HBoxTest, FlexGrow_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/hbox_test.cpp	72;"	kind:function	namespace:ftxui	signature:(HBoxTest, NoFlex_FlexGrow_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/hyperlink_test.cpp	13;"	kind:function	namespace:ftxui	signature:(HyperlinkTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/dom/italic_test.cpp	14;"	kind:function	namespace:ftxui	signature:(ItalicTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	15;"	kind:function	namespace:ftxui	signature:(ColorTest, API_default)
ftxui::TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	21;"	kind:function	namespace:ftxui	signature:(ColorTest, API_builder)
ftxui::TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	37;"	kind:function	namespace:ftxui	signature:(ColorTest, API_constructor_bicolor)
ftxui::TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	47;"	kind:function	namespace:ftxui	signature:(ColorTest, API_constructor_bicolor_angle)
ftxui::TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	57;"	kind:function	namespace:ftxui	signature:(ColorTest, GradientForeground)
ftxui::TEST	./FTXUI/src/ftxui/dom/linear_gradient_test.cpp	73;"	kind:function	namespace:ftxui	signature:(ColorTest, GradientBackground)
ftxui::TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	130;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, VerticalColorable)
ftxui::TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	147;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, VerticalBackgroundColorable)
ftxui::TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	164;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, VerticalFullColorable)
ftxui::TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	182;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, BasicHorizontal)
ftxui::TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	232;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, HorizontalColorable)
ftxui::TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	247;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, HorizontalBackgroundColorable)
ftxui::TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	262;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, HorizontalFullColorable)
ftxui::TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	57;"	kind:function	namespace:ftxui	signature:(ScrollIndicator, BasicVertical)
ftxui::TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	105;"	kind:function	namespace:ftxui	signature:(SelectionTest, SelectionOnChangeSquashedEvents)
ftxui::TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	129;"	kind:function	namespace:ftxui	signature:(SelectionTest, StyleSelection)
ftxui::TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	157;"	kind:function	namespace:ftxui	signature:(SelectionTest, VBoxSelection)
ftxui::TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	174;"	kind:function	namespace:ftxui	signature:(SelectionTest, VBoxSaturatedSelection)
ftxui::TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	192;"	kind:function	namespace:ftxui	signature:(SelectionTest, HBoxSelection)
ftxui::TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	206;"	kind:function	namespace:ftxui	signature:(SelectionTest, HBoxSaturatedSelection)
ftxui::TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	58;"	kind:function	namespace:ftxui	signature:(SelectionTest, DefaultSelection)
ftxui::TEST	./FTXUI/src/ftxui/dom/selection_test.cpp	70;"	kind:function	namespace:ftxui	signature:(SelectionTest, SelectionChange)
ftxui::TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	112;"	kind:function	namespace:ftxui	signature:(SeparatorTest, WithPixel)
ftxui::TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	14;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Default)
ftxui::TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	28;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Light)
ftxui::TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	42;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Dashed)
ftxui::TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	56;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Double)
ftxui::TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	70;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Heavy)
ftxui::TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	84;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Empty)
ftxui::TEST	./FTXUI/src/ftxui/dom/separator_test.cpp	98;"	kind:function	namespace:ftxui	signature:(SeparatorTest, Styled)
ftxui::TEST	./FTXUI/src/ftxui/dom/spinner_test.cpp	13;"	kind:function	namespace:ftxui	signature:(SpinnerTest, Spinner1)
ftxui::TEST	./FTXUI/src/ftxui/dom/spinner_test.cpp	20;"	kind:function	namespace:ftxui	signature:(SpinnerTest, Spinner2)
ftxui::TEST	./FTXUI/src/ftxui/dom/spinner_test.cpp	27;"	kind:function	namespace:ftxui	signature:(SpinnerTest, Spinner3)
ftxui::TEST	./FTXUI/src/ftxui/dom/spinner_test.cpp	34;"	kind:function	namespace:ftxui	signature:(SpinnerTest, Spinner4)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	122;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorVerticalLight)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	146;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorLight)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	14;"	kind:function	namespace:ftxui	signature:(TableTest, Empty)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	170;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorVerticalHorizontalLight)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	195;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorHorizontalVerticalLight)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	220;"	kind:function	namespace:ftxui	signature:(TableTest, BorderLight)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	244;"	kind:function	namespace:ftxui	signature:(TableTest, BorderSeparatorLight)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	269;"	kind:function	namespace:ftxui	signature:(TableTest, SelectRow)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	27;"	kind:function	namespace:ftxui	signature:(TableTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	293;"	kind:function	namespace:ftxui	signature:(TableTest, SelectRowNegative)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	317;"	kind:function	namespace:ftxui	signature:(TableTest, SelectColumn)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	341;"	kind:function	namespace:ftxui	signature:(TableTest, SelectColumnNegative)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	365;"	kind:function	namespace:ftxui	signature:(TableTest, CrossingBorders)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	390;"	kind:function	namespace:ftxui	signature:(TableTest, CrossingBordersLightAndDouble)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	415;"	kind:function	namespace:ftxui	signature:(TableTest, SelectColumns)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	439;"	kind:function	namespace:ftxui	signature:(TableTest, SelectRows)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	463;"	kind:function	namespace:ftxui	signature:(TableTest, SelectRectangle)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	487;"	kind:function	namespace:ftxui	signature:(TableTest, SelectColumnsNegative)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	50;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorVerticalEmpty)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	511;"	kind:function	namespace:ftxui	signature:(TableTest, SelectInverted)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	535;"	kind:function	namespace:ftxui	signature:(TableTest, ColumnFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	561;"	kind:function	namespace:ftxui	signature:(TableTest, ColumnFlexCenter)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	588;"	kind:function	namespace:ftxui	signature:(TableTest, ColumnCenter)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	614;"	kind:function	namespace:ftxui	signature:(TableTest, ColumnFlexTwo)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	641;"	kind:function	namespace:ftxui	signature:(TableTest, RowFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	677;"	kind:function	namespace:ftxui	signature:(TableTest, RowFlexTwo)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	714;"	kind:function	namespace:ftxui	signature:(TableTest, Merge)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	736;"	kind:function	namespace:ftxui	signature:(TableTest, Issue912)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	74;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorHorizontalEmpty)
ftxui::TEST	./FTXUI/src/ftxui/dom/table_test.cpp	98;"	kind:function	namespace:ftxui	signature:(TableTest, SeparatorHorizontalLight)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	107;"	kind:function	namespace:ftxui	signature:(TextTest, CombiningCharactersWithSpace)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	14;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenHeightSmaller)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	22;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenSmaller)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	30;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenFit)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	38;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenBigger)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	46;"	kind:function	namespace:ftxui	signature:(TextTest, ScreenBigger2)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	55;"	kind:function	namespace:ftxui	signature:(TextTest, CJK)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	67;"	kind:function	namespace:ftxui	signature:(TextTest, CJK_2)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	79;"	kind:function	namespace:ftxui	signature:(TextTest, CJK_3)
ftxui::TEST	./FTXUI/src/ftxui/dom/text_test.cpp	90;"	kind:function	namespace:ftxui	signature:(TextTest, CombiningCharacters)
ftxui::TEST	./FTXUI/src/ftxui/dom/underlined_test.cpp	14;"	kind:function	namespace:ftxui	signature:(UnderlinedTest, Basic)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	110;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_NoFlex_FlexGrow)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	138;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexGrow_NoFlex_FlexGrow)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	168;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexGrow_FlexGrow_FlexGrow)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	202;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexShrink_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	230;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_FlexShrink_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	258;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_NoFlex_FlexShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	26;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	286;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexShrink_NoFlex_FlexShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	313;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexShrink_FlexShrink_FlexShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	342;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexGrow_NoFlex_FlewShrink)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	54;"	kind:function	namespace:ftxui	signature:(VBoxText, FlexGrow_NoFlex_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/dom/vbox_test.cpp	82;"	kind:function	namespace:ftxui	signature:(VBoxText, NoFlex_FlexGrow_NoFlex)
ftxui::TEST	./FTXUI/src/ftxui/screen/color_test.cpp	10;"	kind:function	namespace:ftxui	signature:(ColorTest, PrintTransparent)
ftxui::TEST	./FTXUI/src/ftxui/screen/color_test.cpp	16;"	kind:function	namespace:ftxui	signature:(ColorTest, PrintColor16)
ftxui::TEST	./FTXUI/src/ftxui/screen/color_test.cpp	22;"	kind:function	namespace:ftxui	signature:(ColorTest, PrintColor256)
ftxui::TEST	./FTXUI/src/ftxui/screen/color_test.cpp	28;"	kind:function	namespace:ftxui	signature:(ColorTest, PrintTrueCOlor)
ftxui::TEST	./FTXUI/src/ftxui/screen/color_test.cpp	34;"	kind:function	namespace:ftxui	signature:(ColorTest, FallbackTo256)
ftxui::TEST	./FTXUI/src/ftxui/screen/color_test.cpp	39;"	kind:function	namespace:ftxui	signature:(ColorTest, FallbackTo16)
ftxui::TEST	./FTXUI/src/ftxui/screen/color_test.cpp	44;"	kind:function	namespace:ftxui	signature:(ColorTest, Litterals)
ftxui::TEST	./FTXUI/src/ftxui/screen/color_test.cpp	50;"	kind:function	namespace:ftxui	signature:(ColorTest, Interpolate)
ftxui::TEST	./FTXUI/src/ftxui/screen/color_test.cpp	81;"	kind:function	namespace:ftxui	signature:(ColorTest, HSV)
ftxui::TEST	./FTXUI/src/ftxui/screen/string_test.cpp	105;"	kind:function	namespace:ftxui	signature:(StringTest, CellToGlyphIndex)
ftxui::TEST	./FTXUI/src/ftxui/screen/string_test.cpp	11;"	kind:function	namespace:ftxui	signature:(StringTest, StringWidth)
ftxui::TEST	./FTXUI/src/ftxui/screen/string_test.cpp	129;"	kind:function	namespace:ftxui	signature:(StringTest, Utf8ToWordBreakProperty)
ftxui::TEST	./FTXUI/src/ftxui/screen/string_test.cpp	145;"	kind:function	namespace:ftxui	signature:(StringTest, to_string)
ftxui::TEST	./FTXUI/src/ftxui/screen/string_test.cpp	156;"	kind:function	namespace:ftxui	signature:(StringTest, to_wstring)
ftxui::TEST	./FTXUI/src/ftxui/screen/string_test.cpp	33;"	kind:function	namespace:ftxui	signature:(StringTest, Utf8ToGlyphs)
ftxui::TEST	./FTXUI/src/ftxui/screen/string_test.cpp	51;"	kind:function	namespace:ftxui	signature:(StringTest, GlyphCount)
ftxui::TEST	./FTXUI/src/ftxui/screen/string_test.cpp	68;"	kind:function	namespace:ftxui	signature:(StringTest, GlyphIterate)
ftxui::TEST	./FTXUI/src/ftxui/util/ref_test.cpp	23;"	kind:function	namespace:ftxui	signature:(ConstStringListRef, Copy)
ftxui::TEST	./FTXUI/src/ftxui/util/ref_test.cpp	33;"	kind:function	namespace:ftxui	signature:(ConstStringListRef, Ref)
ftxui::TEST	./FTXUI/src/ftxui/util/ref_test.cpp	43;"	kind:function	namespace:ftxui	signature:(ConstStringListRef, Adapter)
ftxui::TEST	./FTXUI/src/ftxui/util/ref_test.cpp	55;"	kind:function	namespace:ftxui	signature:(ConstStringListRef, UniquePtrAdapter)
ftxui::TabContainer	./FTXUI/src/ftxui/component/container.cpp	217;"	kind:class	namespace:ftxui	file:	inherits:ContainerBase
ftxui::Table	./FTXUI/include/ftxui/dom/table.hpp	36;"	kind:class	namespace:ftxui
ftxui::Table::Initialize	./FTXUI/include/ftxui/dom/table.hpp	55;"	kind:prototype	class:ftxui::Table	access:private	signature:(std::vector<std::vector<Element>>)
ftxui::Table::Initialize	./FTXUI/src/ftxui/dom/table.cpp	93;"	kind:function	class:ftxui::Table	signature:(std::vector<std::vector<Element>> input)
ftxui::Table::Render	./FTXUI/include/ftxui/dom/table.hpp	52;"	kind:prototype	class:ftxui::Table	access:public	signature:()
ftxui::Table::Render	./FTXUI/src/ftxui/dom/table.cpp	224;"	kind:function	class:ftxui::Table	signature:()
ftxui::Table::SelectAll	./FTXUI/include/ftxui/dom/table.hpp	42;"	kind:prototype	class:ftxui::Table	access:public	signature:()
ftxui::Table::SelectAll	./FTXUI/src/ftxui/dom/table.cpp	211;"	kind:function	class:ftxui::Table	signature:()
ftxui::Table::SelectCell	./FTXUI/include/ftxui/dom/table.hpp	43;"	kind:prototype	class:ftxui::Table	access:public	signature:(int column, int row)
ftxui::Table::SelectCell	./FTXUI/src/ftxui/dom/table.cpp	178;"	kind:function	class:ftxui::Table	signature:(int column, int row)
ftxui::Table::SelectColumn	./FTXUI/include/ftxui/dom/table.hpp	46;"	kind:prototype	class:ftxui::Table	access:public	signature:(int column_index)
ftxui::Table::SelectColumn	./FTXUI/src/ftxui/dom/table.cpp	160;"	kind:function	class:ftxui::Table	signature:(int index)
ftxui::Table::SelectColumns	./FTXUI/include/ftxui/dom/table.hpp	47;"	kind:prototype	class:ftxui::Table	access:public	signature:(int column_min, int column_max)
ftxui::Table::SelectColumns	./FTXUI/src/ftxui/dom/table.cpp	169;"	kind:function	class:ftxui::Table	signature:(int column_min, int column_max)
ftxui::Table::SelectRectangle	./FTXUI/include/ftxui/dom/table.hpp	48;"	kind:prototype	class:ftxui::Table	access:public	signature:(int column_min, int column_max, int row_min, int row_max)
ftxui::Table::SelectRectangle	./FTXUI/src/ftxui/dom/table.cpp	189;"	kind:function	class:ftxui::Table	signature:(int column_min, int column_max, int row_min, int row_max)
ftxui::Table::SelectRow	./FTXUI/include/ftxui/dom/table.hpp	44;"	kind:prototype	class:ftxui::Table	access:public	signature:(int row_index)
ftxui::Table::SelectRow	./FTXUI/src/ftxui/dom/table.cpp	143;"	kind:function	class:ftxui::Table	signature:(int index)
ftxui::Table::SelectRows	./FTXUI/include/ftxui/dom/table.hpp	45;"	kind:prototype	class:ftxui::Table	access:public	signature:(int row_min, int row_max)
ftxui::Table::SelectRows	./FTXUI/src/ftxui/dom/table.cpp	152;"	kind:function	class:ftxui::Table	signature:(int row_min, int row_max)
ftxui::Table::Table	./FTXUI/include/ftxui/dom/table.hpp	38;"	kind:prototype	class:ftxui::Table	access:public	signature:()
ftxui::Table::Table	./FTXUI/include/ftxui/dom/table.hpp	39;"	kind:prototype	class:ftxui::Table	access:public	signature:(std::vector<std::vector<std::string>>)
ftxui::Table::Table	./FTXUI/include/ftxui/dom/table.hpp	40;"	kind:prototype	class:ftxui::Table	access:public	signature:(std::vector<std::vector<Element>>)
ftxui::Table::Table	./FTXUI/include/ftxui/dom/table.hpp	41;"	kind:prototype	class:ftxui::Table	access:public	signature:(std::initializer_list<std::vector<std::string>> init)
ftxui::Table::Table	./FTXUI/src/ftxui/dom/table.cpp	48;"	kind:function	class:ftxui::Table	signature:()
ftxui::Table::Table	./FTXUI/src/ftxui/dom/table.cpp	55;"	kind:function	class:ftxui::Table	signature:(std::vector<std::vector<std::string>> input)
ftxui::Table::Table	./FTXUI/src/ftxui/dom/table.cpp	72;"	kind:function	class:ftxui::Table	signature:(std::vector<std::vector<Element>> input)
ftxui::Table::Table	./FTXUI/src/ftxui/dom/table.cpp	79;"	kind:function	class:ftxui::Table	signature:(std::initializer_list<std::vector<std::string>> init)
ftxui::Table::dim_x_	./FTXUI/include/ftxui/dom/table.hpp	60;"	kind:member	class:ftxui::Table	access:private
ftxui::Table::dim_y_	./FTXUI/include/ftxui/dom/table.hpp	61;"	kind:member	class:ftxui::Table	access:private
ftxui::Table::elements_	./FTXUI/include/ftxui/dom/table.hpp	57;"	kind:member	class:ftxui::Table	access:private
ftxui::Table::input_dim_x_	./FTXUI/include/ftxui/dom/table.hpp	58;"	kind:member	class:ftxui::Table	access:private
ftxui::Table::input_dim_y_	./FTXUI/include/ftxui/dom/table.hpp	59;"	kind:member	class:ftxui::Table	access:private
ftxui::TableSelection	./FTXUI/include/ftxui/dom/table.hpp	64;"	kind:class	namespace:ftxui
ftxui::TableSelection::Border	./FTXUI/include/ftxui/dom/table.hpp	74;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
ftxui::TableSelection::Border	./FTXUI/src/ftxui/dom/table.cpp	363;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
ftxui::TableSelection::BorderBottom	./FTXUI/include/ftxui/dom/table.hpp	78;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
ftxui::TableSelection::BorderBottom	./FTXUI/src/ftxui/dom/table.cpp	456;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
ftxui::TableSelection::BorderLeft	./FTXUI/include/ftxui/dom/table.hpp	75;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
ftxui::TableSelection::BorderLeft	./FTXUI/src/ftxui/dom/table.cpp	426;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
ftxui::TableSelection::BorderRight	./FTXUI/include/ftxui/dom/table.hpp	76;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
ftxui::TableSelection::BorderRight	./FTXUI/src/ftxui/dom/table.cpp	436;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
ftxui::TableSelection::BorderTop	./FTXUI/include/ftxui/dom/table.hpp	77;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
ftxui::TableSelection::BorderTop	./FTXUI/src/ftxui/dom/table.cpp	446;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
ftxui::TableSelection::Decorate	./FTXUI/include/ftxui/dom/table.hpp	66;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator)
ftxui::TableSelection::Decorate	./FTXUI/src/ftxui/dom/table.cpp	255;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator)
ftxui::TableSelection::DecorateAlternateColumn	./FTXUI/include/ftxui/dom/table.hpp	68;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator, int modulo = 2, int shift = 0)
ftxui::TableSelection::DecorateAlternateColumn	./FTXUI/src/ftxui/dom/table.cpp	287;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator, int modulo, int shift)
ftxui::TableSelection::DecorateAlternateRow	./FTXUI/include/ftxui/dom/table.hpp	67;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator, int modulo = 2, int shift = 0)
ftxui::TableSelection::DecorateAlternateRow	./FTXUI/src/ftxui/dom/table.cpp	307;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator, int modulo, int shift)
ftxui::TableSelection::DecorateCells	./FTXUI/include/ftxui/dom/table.hpp	70;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator)
ftxui::TableSelection::DecorateCells	./FTXUI/src/ftxui/dom/table.cpp	269;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator)
ftxui::TableSelection::DecorateCellsAlternateColumn	./FTXUI/include/ftxui/dom/table.hpp	71;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator, int modulo = 2, int shift = 0)
ftxui::TableSelection::DecorateCellsAlternateColumn	./FTXUI/src/ftxui/dom/table.cpp	327;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator, int modulo, int shift)
ftxui::TableSelection::DecorateCellsAlternateRow	./FTXUI/include/ftxui/dom/table.hpp	72;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(Decorator, int modulo = 2, int shift = 0)
ftxui::TableSelection::DecorateCellsAlternateRow	./FTXUI/src/ftxui/dom/table.cpp	347;"	kind:function	class:ftxui::TableSelection	signature:(Decorator decorator, int modulo, int shift)
ftxui::TableSelection::Separator	./FTXUI/include/ftxui/dom/table.hpp	80;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
ftxui::TableSelection::Separator	./FTXUI/src/ftxui/dom/table.cpp	382;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
ftxui::TableSelection::SeparatorHorizontal	./FTXUI/include/ftxui/dom/table.hpp	82;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
ftxui::TableSelection::SeparatorHorizontal	./FTXUI/src/ftxui/dom/table.cpp	412;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
ftxui::TableSelection::SeparatorVertical	./FTXUI/include/ftxui/dom/table.hpp	81;"	kind:prototype	class:ftxui::TableSelection	access:public	signature:(BorderStyle border = LIGHT)
ftxui::TableSelection::SeparatorVertical	./FTXUI/src/ftxui/dom/table.cpp	398;"	kind:function	class:ftxui::TableSelection	signature:(BorderStyle border)
ftxui::TableSelection::table_	./FTXUI/include/ftxui/dom/table.hpp	86;"	kind:member	class:ftxui::TableSelection	access:private
ftxui::TableSelection::x_max_	./FTXUI/include/ftxui/dom/table.hpp	88;"	kind:member	class:ftxui::TableSelection	access:private
ftxui::TableSelection::x_min_	./FTXUI/include/ftxui/dom/table.hpp	87;"	kind:member	class:ftxui::TableSelection	access:private
ftxui::TableSelection::y_max_	./FTXUI/include/ftxui/dom/table.hpp	90;"	kind:member	class:ftxui::TableSelection	access:private
ftxui::TableSelection::y_min_	./FTXUI/include/ftxui/dom/table.hpp	89;"	kind:member	class:ftxui::TableSelection	access:private
ftxui::Terminal::Color	./FTXUI/include/ftxui/screen/terminal.hpp	17;"	kind:enum	namespace:ftxui::Terminal
ftxui::Terminal::ColorSupport	./FTXUI/include/ftxui/screen/terminal.hpp	23;"	kind:prototype	namespace:ftxui::Terminal	signature:()
ftxui::Terminal::ColorSupport	./FTXUI/src/ftxui/screen/terminal.cpp	130;"	kind:function	namespace:ftxui::Terminal	signature:()
ftxui::Terminal::Palette1	./FTXUI/include/ftxui/screen/terminal.hpp	18;"	kind:enumerator	enum:ftxui::Terminal::Color
ftxui::Terminal::Palette16	./FTXUI/include/ftxui/screen/terminal.hpp	19;"	kind:enumerator	enum:ftxui::Terminal::Color
ftxui::Terminal::Palette256	./FTXUI/include/ftxui/screen/terminal.hpp	20;"	kind:enumerator	enum:ftxui::Terminal::Color
ftxui::Terminal::SetColorSupport	./FTXUI/include/ftxui/screen/terminal.hpp	24;"	kind:prototype	namespace:ftxui::Terminal	signature:(Color color)
ftxui::Terminal::SetColorSupport	./FTXUI/src/ftxui/screen/terminal.cpp	140;"	kind:function	namespace:ftxui::Terminal	signature:(Color color)
ftxui::Terminal::SetFallbackSize	./FTXUI/include/ftxui/screen/terminal.hpp	15;"	kind:prototype	namespace:ftxui::Terminal	signature:(const Dimensions& fallbackSize)
ftxui::Terminal::SetFallbackSize	./FTXUI/src/ftxui/screen/terminal.cpp	124;"	kind:function	namespace:ftxui::Terminal	signature:(const Dimensions& fallbackSize)
ftxui::Terminal::Size	./FTXUI/include/ftxui/screen/terminal.hpp	14;"	kind:prototype	namespace:ftxui::Terminal	signature:()
ftxui::Terminal::Size	./FTXUI/src/ftxui/screen/terminal.cpp	94;"	kind:function	namespace:ftxui::Terminal	signature:()
ftxui::Terminal::TrueColor	./FTXUI/include/ftxui/screen/terminal.hpp	21;"	kind:enumerator	enum:ftxui::Terminal::Color
ftxui::TerminalInputParser	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	18;"	kind:class	namespace:ftxui
ftxui::TerminalInputParser::Add	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	108;"	kind:function	class:ftxui::TerminalInputParser	signature:(char c)
ftxui::TerminalInputParser::Add	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	22;"	kind:prototype	class:ftxui::TerminalInputParser	access:public	signature:(char c)
ftxui::TerminalInputParser::CHARACTER	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	31;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
ftxui::TerminalInputParser::CURSOR_POSITION	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	33;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
ftxui::TerminalInputParser::CURSOR_SHAPE	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	34;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
ftxui::TerminalInputParser::Current	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	115;"	kind:function	class:ftxui::TerminalInputParser	signature:()
ftxui::TerminalInputParser::Current	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	25;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ftxui::TerminalInputParser::CursorPosition	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	38;"	kind:struct	class:ftxui::TerminalInputParser	access:private
ftxui::TerminalInputParser::CursorPosition::x	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	39;"	kind:member	struct:ftxui::TerminalInputParser::CursorPosition	access:public
ftxui::TerminalInputParser::CursorPosition::y	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	40;"	kind:member	struct:ftxui::TerminalInputParser::CursorPosition	access:public
ftxui::TerminalInputParser::DROP	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	30;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
ftxui::TerminalInputParser::Eat	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	119;"	kind:function	class:ftxui::TerminalInputParser	signature:()
ftxui::TerminalInputParser::Eat	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	26;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ftxui::TerminalInputParser::MOUSE	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	32;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
ftxui::TerminalInputParser::Output	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	43;"	kind:struct	class:ftxui::TerminalInputParser	access:private
ftxui::TerminalInputParser::Output::Output	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	51;"	kind:function	struct:ftxui::TerminalInputParser::Output	access:public	signature:(Type t)
ftxui::TerminalInputParser::Output::__anon60::cursor_shape	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	48;"	kind:member	union:ftxui::TerminalInputParser::Output::__anon60	access:public
ftxui::TerminalInputParser::Output::__anon60::mouse	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	46;"	kind:member	union:ftxui::TerminalInputParser::Output::__anon60	access:public
ftxui::TerminalInputParser::Output::type	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	44;"	kind:member	struct:ftxui::TerminalInputParser::Output	access:public
ftxui::TerminalInputParser::Parse	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	168;"	kind:function	class:ftxui::TerminalInputParser	signature:()
ftxui::TerminalInputParser::Parse	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	56;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ftxui::TerminalInputParser::ParseCSI	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	60;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ftxui::TerminalInputParser::ParseCursorPosition	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	63;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:(std::vector<int> arguments)
ftxui::TerminalInputParser::ParseDCS	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	59;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ftxui::TerminalInputParser::ParseESC	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	58;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ftxui::TerminalInputParser::ParseMouse	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	62;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:(bool altered, bool pressed, std::vector<int> arguments)
ftxui::TerminalInputParser::ParseOSC	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	61;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ftxui::TerminalInputParser::ParseUTF8	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	204;"	kind:function	class:ftxui::TerminalInputParser	signature:()
ftxui::TerminalInputParser::ParseUTF8	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	57;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:()
ftxui::TerminalInputParser::SPECIAL	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	35;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
ftxui::TerminalInputParser::Send	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	124;"	kind:function	class:ftxui::TerminalInputParser	signature:(TerminalInputParser::Output output)
ftxui::TerminalInputParser::Send	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	55;"	kind:prototype	class:ftxui::TerminalInputParser	access:private	signature:(Output output)
ftxui::TerminalInputParser::TerminalInputParser	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	93;"	kind:function	class:ftxui::TerminalInputParser	signature:(Sender<Task> out)
ftxui::TerminalInputParser::TerminalInputParser	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	20;"	kind:prototype	class:ftxui::TerminalInputParser	access:public	signature:(Sender<Task> out)
ftxui::TerminalInputParser::Timeout	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	96;"	kind:function	class:ftxui::TerminalInputParser	signature:(int time)
ftxui::TerminalInputParser::Timeout	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	21;"	kind:prototype	class:ftxui::TerminalInputParser	access:public	signature:(int time)
ftxui::TerminalInputParser::Type	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	28;"	kind:enum	class:ftxui::TerminalInputParser	access:private
ftxui::TerminalInputParser::UNCOMPLETED	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	29;"	kind:enumerator	enum:ftxui::TerminalInputParser::Type
ftxui::TerminalInputParser::out_	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	65;"	kind:member	class:ftxui::TerminalInputParser	access:private
ftxui::TerminalInputParser::pending_	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	68;"	kind:member	class:ftxui::TerminalInputParser	access:private
ftxui::TerminalInputParser::position_	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	66;"	kind:member	class:ftxui::TerminalInputParser	access:private
ftxui::TerminalInputParser::timeout_	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	67;"	kind:member	class:ftxui::TerminalInputParser	access:private
ftxui::Toggle	./FTXUI/include/ftxui/component/component.hpp	78;"	kind:prototype	namespace:ftxui	signature:(ConstStringListRef entries, int* selected)
ftxui::Toggle	./FTXUI/src/ftxui/component/menu.cpp	554;"	kind:function	namespace:ftxui	signature:(ConstStringListRef entries, int* selected)
ftxui::UnderlineOption	./FTXUI/include/ftxui/component/component_options.hpp	31;"	kind:struct	namespace:ftxui
ftxui::UnderlineOption::SetAnimation	./FTXUI/include/ftxui/component/component_options.hpp	47;"	kind:prototype	struct:ftxui::UnderlineOption	access:public	signature:(animation::Duration d, animation::easing::Function f)
ftxui::UnderlineOption::SetAnimation	./FTXUI/src/ftxui/component/component_options.cpp	36;"	kind:function	class:ftxui::UnderlineOption	signature:(animation::Duration d, animation::easing::Function f)
ftxui::UnderlineOption::SetAnimationDuration	./FTXUI/include/ftxui/component/component_options.hpp	48;"	kind:prototype	struct:ftxui::UnderlineOption	access:public	signature:(animation::Duration d)
ftxui::UnderlineOption::SetAnimationDuration	./FTXUI/src/ftxui/component/component_options.cpp	45;"	kind:function	class:ftxui::UnderlineOption	signature:(animation::Duration d)
ftxui::UnderlineOption::SetAnimationFunction	./FTXUI/include/ftxui/component/component_options.hpp	49;"	kind:prototype	struct:ftxui::UnderlineOption	access:public	signature:(animation::easing::Function f)
ftxui::UnderlineOption::SetAnimationFunction	./FTXUI/include/ftxui/component/component_options.hpp	50;"	kind:prototype	struct:ftxui::UnderlineOption	access:public	signature:(animation::easing::Function f_leader, animation::easing::Function f_follower)
ftxui::UnderlineOption::SetAnimationFunction	./FTXUI/src/ftxui/component/component_options.cpp	53;"	kind:function	class:ftxui::UnderlineOption	signature:(animation::easing::Function f)
ftxui::UnderlineOption::SetAnimationFunction	./FTXUI/src/ftxui/component/component_options.cpp	64;"	kind:function	class:ftxui::UnderlineOption	signature:( animation::easing::Function f_leader, animation::easing::Function f_follower)
ftxui::UnderlineOption::color_active	./FTXUI/include/ftxui/component/component_options.hpp	34;"	kind:member	struct:ftxui::UnderlineOption	access:public
ftxui::UnderlineOption::color_inactive	./FTXUI/include/ftxui/component/component_options.hpp	35;"	kind:member	struct:ftxui::UnderlineOption	access:public
ftxui::UnderlineOption::enabled	./FTXUI/include/ftxui/component/component_options.hpp	32;"	kind:member	struct:ftxui::UnderlineOption	access:public
ftxui::UnderlineOption::follower_delay	./FTXUI/include/ftxui/component/component_options.hpp	45;"	kind:member	struct:ftxui::UnderlineOption	access:public
ftxui::UnderlineOption::follower_duration	./FTXUI/include/ftxui/component/component_options.hpp	44;"	kind:member	struct:ftxui::UnderlineOption	access:public
ftxui::UnderlineOption::follower_function	./FTXUI/include/ftxui/component/component_options.hpp	39;"	kind:member	struct:ftxui::UnderlineOption	access:public
ftxui::UnderlineOption::leader_delay	./FTXUI/include/ftxui/component/component_options.hpp	43;"	kind:member	struct:ftxui::UnderlineOption	access:public
ftxui::UnderlineOption::leader_duration	./FTXUI/include/ftxui/component/component_options.hpp	42;"	kind:member	struct:ftxui::UnderlineOption	access:public
ftxui::UnderlineOption::leader_function	./FTXUI/include/ftxui/component/component_options.hpp	37;"	kind:member	struct:ftxui::UnderlineOption	access:public
ftxui::Utf8ToGlyphs	./FTXUI/include/ftxui/screen/string.hpp	23;"	kind:prototype	namespace:ftxui	signature:(const std::string& input)
ftxui::Utf8ToGlyphs	./FTXUI/src/ftxui/screen/string.cpp	1357;"	kind:function	namespace:ftxui	signature:(const std::string& input)
ftxui::Utf8ToWordBreakProperty	./FTXUI/src/ftxui/screen/string.cpp	1533;"	kind:function	namespace:ftxui	signature:( const std::string& input)
ftxui::Utf8ToWordBreakProperty	./FTXUI/src/ftxui/screen/string_internal.hpp	61;"	kind:prototype	namespace:ftxui	signature:( const std::string& input)
ftxui::VerticalContainer	./FTXUI/src/ftxui/component/container.cpp	97;"	kind:class	namespace:ftxui	file:	inherits:ContainerBase
ftxui::VerticalContainer::box_	./FTXUI/src/ftxui/component/container.cpp	178;"	kind:member	class:ftxui::VerticalContainer	file:	access:public
ftxui::WIDTH	./FTXUI/include/ftxui/dom/elements.hpp	153;"	kind:enumerator	enum:ftxui::WidthOrHeight
ftxui::WidthOrHeight	./FTXUI/include/ftxui/dom/elements.hpp	153;"	kind:enum	namespace:ftxui
ftxui::Window	./FTXUI/include/ftxui/component/component.hpp	138;"	kind:prototype	namespace:ftxui	signature:(WindowOptions option)
ftxui::Window	./FTXUI/src/ftxui/component/window.cpp	312;"	kind:function	namespace:ftxui	signature:(WindowOptions option)
ftxui::WindowOptions	./FTXUI/include/ftxui/component/component_options.hpp	249;"	kind:struct	namespace:ftxui
ftxui::WindowOptions::height	./FTXUI/include/ftxui/component/component_options.hpp	256;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::inner	./FTXUI/include/ftxui/component/component_options.hpp	250;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::left	./FTXUI/include/ftxui/component/component_options.hpp	253;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::render	./FTXUI/include/ftxui/component/component_options.hpp	264;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::resize_down	./FTXUI/include/ftxui/component/component_options.hpp	261;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::resize_left	./FTXUI/include/ftxui/component/component_options.hpp	258;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::resize_right	./FTXUI/include/ftxui/component/component_options.hpp	259;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::resize_top	./FTXUI/include/ftxui/component/component_options.hpp	260;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::title	./FTXUI/include/ftxui/component/component_options.hpp	251;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::top	./FTXUI/include/ftxui/component/component_options.hpp	254;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowOptions::width	./FTXUI/include/ftxui/component/component_options.hpp	255;"	kind:member	struct:ftxui::WindowOptions	access:public
ftxui::WindowRenderState	./FTXUI/include/ftxui/component/component_options.hpp	235;"	kind:struct	namespace:ftxui
ftxui::WindowRenderState::active	./FTXUI/include/ftxui/component/component_options.hpp	238;"	kind:member	struct:ftxui::WindowRenderState	access:public
ftxui::WindowRenderState::drag	./FTXUI/include/ftxui/component/component_options.hpp	239;"	kind:member	struct:ftxui::WindowRenderState	access:public
ftxui::WindowRenderState::hover_down	./FTXUI/include/ftxui/component/component_options.hpp	244;"	kind:member	struct:ftxui::WindowRenderState	access:public
ftxui::WindowRenderState::hover_left	./FTXUI/include/ftxui/component/component_options.hpp	241;"	kind:member	struct:ftxui::WindowRenderState	access:public
ftxui::WindowRenderState::hover_right	./FTXUI/include/ftxui/component/component_options.hpp	242;"	kind:member	struct:ftxui::WindowRenderState	access:public
ftxui::WindowRenderState::hover_top	./FTXUI/include/ftxui/component/component_options.hpp	243;"	kind:member	struct:ftxui::WindowRenderState	access:public
ftxui::WindowRenderState::inner	./FTXUI/include/ftxui/component/component_options.hpp	236;"	kind:member	struct:ftxui::WindowRenderState	access:public
ftxui::WindowRenderState::resize	./FTXUI/include/ftxui/component/component_options.hpp	240;"	kind:member	struct:ftxui::WindowRenderState	access:public
ftxui::WindowRenderState::title	./FTXUI/include/ftxui/component/component_options.hpp	237;"	kind:member	struct:ftxui::WindowRenderState	access:public
ftxui::WordBreakProperty	./FTXUI/src/ftxui/screen/string_internal.hpp	40;"	kind:class	namespace:ftxui	inherits:int8_t
ftxui::WordBreakProperty::ALetter	./FTXUI/src/ftxui/screen/string_internal.hpp	41;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::CR	./FTXUI/src/ftxui/screen/string_internal.hpp	42;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::Double_Quote	./FTXUI/src/ftxui/screen/string_internal.hpp	43;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::Extend	./FTXUI/src/ftxui/screen/string_internal.hpp	44;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::ExtendNumLet	./FTXUI/src/ftxui/screen/string_internal.hpp	45;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::Format	./FTXUI/src/ftxui/screen/string_internal.hpp	46;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::Hebrew_Letter	./FTXUI/src/ftxui/screen/string_internal.hpp	47;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::Katakana	./FTXUI/src/ftxui/screen/string_internal.hpp	48;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::LF	./FTXUI/src/ftxui/screen/string_internal.hpp	49;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::MidLetter	./FTXUI/src/ftxui/screen/string_internal.hpp	50;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::MidNum	./FTXUI/src/ftxui/screen/string_internal.hpp	51;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::MidNumLet	./FTXUI/src/ftxui/screen/string_internal.hpp	52;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::Newline	./FTXUI/src/ftxui/screen/string_internal.hpp	53;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::Numeric	./FTXUI/src/ftxui/screen/string_internal.hpp	54;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::Regional_Indicator	./FTXUI/src/ftxui/screen/string_internal.hpp	55;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::Single_Quote	./FTXUI/src/ftxui/screen/string_internal.hpp	56;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::WSegSpace	./FTXUI/src/ftxui/screen/string_internal.hpp	57;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::WordBreakProperty::ZWJ	./FTXUI/src/ftxui/screen/string_internal.hpp	58;"	kind:member	class:ftxui::WordBreakProperty	access:private
ftxui::__anon10::Size	./FTXUI/src/ftxui/dom/size.cpp	16;"	kind:class	namespace:ftxui::__anon10	file:	inherits:Node
ftxui::__anon10::Size::Size	./FTXUI/src/ftxui/dom/size.cpp	18;"	kind:function	class:ftxui::__anon10::Size	access:public	signature:(Element child, WidthOrHeight direction, Constraint constraint, int value)
ftxui::__anon10::Size::constraint_	./FTXUI/src/ftxui/dom/size.cpp	78;"	kind:member	class:ftxui::__anon10::Size	file:	access:private
ftxui::__anon10::Size::direction_	./FTXUI/src/ftxui/dom/size.cpp	77;"	kind:member	class:ftxui::__anon10::Size	file:	access:private
ftxui::__anon10::Size::value_	./FTXUI/src/ftxui/dom/size.cpp	79;"	kind:member	class:ftxui::__anon10::Size	file:	access:private
ftxui::__anon11::HBox	./FTXUI/src/ftxui/dom/hbox.cpp	19;"	kind:class	namespace:ftxui::__anon11	file:	inherits:Node
ftxui::__anon11::HBox::HBox	./FTXUI/src/ftxui/dom/hbox.cpp	21;"	kind:function	class:ftxui::__anon11::HBox	access:public	signature:(Elements children)
ftxui::__anon12::BgColor	./FTXUI/src/ftxui/dom/color.cpp	16;"	kind:class	namespace:ftxui::__anon12	file:	inherits:NodeDecorator
ftxui::__anon12::BgColor::BgColor	./FTXUI/src/ftxui/dom/color.cpp	18;"	kind:function	class:ftxui::__anon12::BgColor	access:public	signature:(Element child, Color color)
ftxui::__anon12::BgColor::color_	./FTXUI/src/ftxui/dom/color.cpp	39;"	kind:member	class:ftxui::__anon12::BgColor	file:	access:public
ftxui::__anon12::FgColor	./FTXUI/src/ftxui/dom/color.cpp	42;"	kind:class	namespace:ftxui::__anon12	file:	inherits:NodeDecorator
ftxui::__anon12::FgColor::FgColor	./FTXUI/src/ftxui/dom/color.cpp	44;"	kind:function	class:ftxui::__anon12::FgColor	access:public	signature:(Element child, Color color)
ftxui::__anon12::FgColor::color_	./FTXUI/src/ftxui/dom/color.cpp	65;"	kind:member	class:ftxui::__anon12::FgColor	file:	access:public
ftxui::__anon13::Flex	./FTXUI/src/ftxui/dom/flex.cpp	68;"	kind:class	namespace:ftxui::__anon13	file:	inherits:Node
ftxui::__anon13::Flex::Flex	./FTXUI/src/ftxui/dom/flex.cpp	70;"	kind:function	class:ftxui::__anon13::Flex	access:public	signature:(FlexFunction f)
ftxui::__anon13::Flex::Flex	./FTXUI/src/ftxui/dom/flex.cpp	71;"	kind:function	class:ftxui::__anon13::Flex	access:public	signature:(FlexFunction f, Element child)
ftxui::__anon13::Flex::f_	./FTXUI/src/ftxui/dom/flex.cpp	90;"	kind:member	class:ftxui::__anon13::Flex	file:	access:public
ftxui::__anon13::function_flex	./FTXUI/src/ftxui/dom/flex.cpp	44;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon13::function_flex_grow	./FTXUI/src/ftxui/dom/flex.cpp	18;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon13::function_flex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	31;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon13::function_not_flex	./FTXUI/src/ftxui/dom/flex.cpp	61;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon13::function_xflex	./FTXUI/src/ftxui/dom/flex.cpp	51;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon13::function_xflex_grow	./FTXUI/src/ftxui/dom/flex.cpp	23;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon13::function_xflex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	36;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon13::function_yflex	./FTXUI/src/ftxui/dom/flex.cpp	56;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon13::function_yflex_grow	./FTXUI/src/ftxui/dom/flex.cpp	27;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon13::function_yflex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	40;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
ftxui::__anon15::SelectionStyle	./FTXUI/src/ftxui/dom/selection_style.cpp	31;"	kind:class	namespace:ftxui::__anon15	file:	inherits:NodeDecorator
ftxui::__anon15::SelectionStyle::SelectionStyle	./FTXUI/src/ftxui/dom/selection_style.cpp	33;"	kind:function	class:ftxui::__anon15::SelectionStyle	access:public	signature:(Element child, const std::function<void(Pixel&)>& style)
ftxui::__anon15::SelectionStyle::style_	./FTXUI/src/ftxui/dom/selection_style.cpp	47;"	kind:member	class:ftxui::__anon15::SelectionStyle	file:	access:public
ftxui::__anon15::SelectionStyleReset	./FTXUI/src/ftxui/dom/selection_style.cpp	18;"	kind:class	namespace:ftxui::__anon15	file:	inherits:NodeDecorator
ftxui::__anon15::SelectionStyleReset::SelectionStyleReset	./FTXUI/src/ftxui/dom/selection_style.cpp	20;"	kind:function	class:ftxui::__anon15::SelectionStyleReset	access:public	signature:(Element child)
ftxui::__anon16::GridBox	./FTXUI/src/ftxui/dom/gridbox.cpp	35;"	kind:class	namespace:ftxui::__anon16	file:	inherits:Node
ftxui::__anon16::GridBox::GridBox	./FTXUI/src/ftxui/dom/gridbox.cpp	37;"	kind:function	class:ftxui::__anon16::GridBox	access:public	signature:(std::vector<Elements> lines)
ftxui::__anon16::GridBox::lines_	./FTXUI/src/ftxui/dom/gridbox.cpp	143;"	kind:member	class:ftxui::__anon16::GridBox	file:	access:public
ftxui::__anon16::GridBox::x_size	./FTXUI/src/ftxui/dom/gridbox.cpp	141;"	kind:member	class:ftxui::__anon16::GridBox	file:	access:public
ftxui::__anon16::GridBox::y_size	./FTXUI/src/ftxui/dom/gridbox.cpp	142;"	kind:member	class:ftxui::__anon16::GridBox	file:	access:public
ftxui::__anon16::Integrate	./FTXUI/src/ftxui/dom/gridbox.cpp	25;"	kind:function	namespace:ftxui::__anon16	signature:(std::vector<int>& elements)
ftxui::__anon17::Interpolate	./FTXUI/src/ftxui/dom/linear_gradient.cpp	96;"	kind:function	namespace:ftxui::__anon17	signature:(const LinearGradientNormalized& gradient, float t)
ftxui::__anon17::LinearGradientColor	./FTXUI/src/ftxui/dom/linear_gradient.cpp	126;"	kind:class	namespace:ftxui::__anon17	file:	inherits:NodeDecorator
ftxui::__anon17::LinearGradientColor::LinearGradientColor	./FTXUI/src/ftxui/dom/linear_gradient.cpp	128;"	kind:function	class:ftxui::__anon17::LinearGradientColor	access:public	signature:(Element child, const LinearGradient& gradient, bool background_color)
ftxui::__anon17::LinearGradientColor::background_color_	./FTXUI/src/ftxui/dom/linear_gradient.cpp	176;"	kind:member	class:ftxui::__anon17::LinearGradientColor	file:	access:private
ftxui::__anon17::LinearGradientColor::gradient_	./FTXUI/src/ftxui/dom/linear_gradient.cpp	175;"	kind:member	class:ftxui::__anon17::LinearGradientColor	file:	access:private
ftxui::__anon17::LinearGradientNormalized	./FTXUI/src/ftxui/dom/linear_gradient.cpp	22;"	kind:struct	namespace:ftxui::__anon17	file:
ftxui::__anon17::LinearGradientNormalized::angle	./FTXUI/src/ftxui/dom/linear_gradient.cpp	23;"	kind:member	struct:ftxui::__anon17::LinearGradientNormalized	file:	access:public
ftxui::__anon17::LinearGradientNormalized::colors	./FTXUI/src/ftxui/dom/linear_gradient.cpp	24;"	kind:member	struct:ftxui::__anon17::LinearGradientNormalized	file:	access:public
ftxui::__anon17::LinearGradientNormalized::positions	./FTXUI/src/ftxui/dom/linear_gradient.cpp	25;"	kind:member	struct:ftxui::__anon17::LinearGradientNormalized	file:	access:public
ftxui::__anon17::Normalize	./FTXUI/src/ftxui/dom/linear_gradient.cpp	29;"	kind:function	namespace:ftxui::__anon17	signature:(LinearGradient gradient)
ftxui::__anon18::Blink	./FTXUI/src/ftxui/dom/blink.cpp	16;"	kind:class	namespace:ftxui::__anon18	file:	inherits:NodeDecorator
ftxui::__anon19::DBox	./FTXUI/src/ftxui/dom/dbox.cpp	19;"	kind:class	namespace:ftxui::__anon19	file:	inherits:Node
ftxui::__anon19::DBox::DBox	./FTXUI/src/ftxui/dom/dbox.cpp	21;"	kind:function	class:ftxui::__anon19::DBox	access:public	signature:(Elements children)
ftxui::__anon20::Flexbox	./FTXUI/src/ftxui/dom/flexbox.cpp	55;"	kind:class	namespace:ftxui::__anon20	file:	inherits:Node
ftxui::__anon20::Flexbox::Flexbox	./FTXUI/src/ftxui/dom/flexbox.cpp	57;"	kind:function	class:ftxui::__anon20::Flexbox	access:public	signature:(Elements children, FlexboxConfig config)
ftxui::__anon20::Flexbox::IsColumnOriented	./FTXUI/src/ftxui/dom/flexbox.cpp	69;"	kind:function	class:ftxui::__anon20::Flexbox	access:public	signature:() const
ftxui::__anon20::Flexbox::Layout	./FTXUI/src/ftxui/dom/flexbox.cpp	74;"	kind:function	class:ftxui::__anon20::Flexbox	access:public	signature:(flexbox_helper::Global& global, bool compute_requirement = false)
ftxui::__anon20::Flexbox::asked_	./FTXUI/src/ftxui/dom/flexbox.cpp	222;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
ftxui::__anon20::Flexbox::config_	./FTXUI/src/ftxui/dom/flexbox.cpp	224;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
ftxui::__anon20::Flexbox::config_normalized_	./FTXUI/src/ftxui/dom/flexbox.cpp	225;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
ftxui::__anon20::Flexbox::global_	./FTXUI/src/ftxui/dom/flexbox.cpp	226;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
ftxui::__anon20::Flexbox::need_iteration_	./FTXUI/src/ftxui/dom/flexbox.cpp	223;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
ftxui::__anon20::Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	22;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig::Direction& direction)
ftxui::__anon20::Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	35;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig::AlignContent& align_content)
ftxui::__anon20::Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	39;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig::JustifyContent& justify_content)
ftxui::__anon20::Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	43;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig::Wrap& wrap)
ftxui::__anon20::Normalize	./FTXUI/src/ftxui/dom/flexbox.cpp	47;"	kind:function	namespace:ftxui::__anon20	signature:(FlexboxConfig config)
ftxui::__anon21::Text	./FTXUI/src/ftxui/dom/text.cpp	24;"	kind:class	namespace:ftxui::__anon21	file:	inherits:Node
ftxui::__anon21::Text::Text	./FTXUI/src/ftxui/dom/text.cpp	26;"	kind:function	class:ftxui::__anon21::Text	access:public	signature:(std::string text)
ftxui::__anon21::Text::has_selection	./FTXUI/src/ftxui/dom/text.cpp	89;"	kind:member	class:ftxui::__anon21::Text	file:	access:private
ftxui::__anon21::Text::selection_end_	./FTXUI/src/ftxui/dom/text.cpp	91;"	kind:member	class:ftxui::__anon21::Text	file:	access:private
ftxui::__anon21::Text::selection_start_	./FTXUI/src/ftxui/dom/text.cpp	90;"	kind:member	class:ftxui::__anon21::Text	file:	access:private
ftxui::__anon21::Text::text_	./FTXUI/src/ftxui/dom/text.cpp	88;"	kind:member	class:ftxui::__anon21::Text	file:	access:private
ftxui::__anon21::VText	./FTXUI/src/ftxui/dom/text.cpp	94;"	kind:class	namespace:ftxui::__anon21	file:	inherits:Node
ftxui::__anon21::VText::VText	./FTXUI/src/ftxui/dom/text.cpp	96;"	kind:function	class:ftxui::__anon21::VText	access:public	signature:(std::string text)
ftxui::__anon21::VText::text_	./FTXUI/src/ftxui/dom/text.cpp	120;"	kind:member	class:ftxui::__anon21::VText	file:	access:private
ftxui::__anon21::VText::width_	./FTXUI/src/ftxui/dom/text.cpp	121;"	kind:member	class:ftxui::__anon21::VText	file:	access:private
ftxui::__anon22::compose	./FTXUI/src/ftxui/dom/util.cpp	19;"	kind:function	namespace:ftxui::__anon22	signature:(Decorator a, Decorator b)
ftxui::__anon23::elements	./FTXUI/src/ftxui/dom/spinner.cpp	15;"	kind:member	namespace:ftxui::__anon23	file:
ftxui::__anon24::Gauge	./FTXUI/src/ftxui/dom/gauge.cpp	46;"	kind:class	namespace:ftxui::__anon24	file:	inherits:Node
ftxui::__anon24::Gauge::Gauge	./FTXUI/src/ftxui/dom/gauge.cpp	48;"	kind:function	class:ftxui::__anon24::Gauge	access:public	signature:(float progress, Direction direction)
ftxui::__anon24::Gauge::RenderHorizontal	./FTXUI/src/ftxui/dom/gauge.cpp	97;"	kind:function	class:ftxui::__anon24::Gauge	access:public	signature:(Screen& screen, bool invert)
ftxui::__anon24::Gauge::RenderVertical	./FTXUI/src/ftxui/dom/gauge.cpp	127;"	kind:function	class:ftxui::__anon24::Gauge	access:public	signature:(Screen& screen, bool invert)
ftxui::__anon24::Gauge::direction_	./FTXUI/src/ftxui/dom/gauge.cpp	159;"	kind:member	class:ftxui::__anon24::Gauge	file:	access:private
ftxui::__anon24::Gauge::progress_	./FTXUI/src/ftxui/dom/gauge.cpp	158;"	kind:member	class:ftxui::__anon24::Gauge	file:	access:private
ftxui::__anon24::charset_horizontal	./FTXUI/src/ftxui/dom/gauge.cpp	18;"	kind:member	namespace:ftxui::__anon24	file:
ftxui::__anon24::charset_vertical	./FTXUI/src/ftxui/dom/gauge.cpp	31;"	kind:member	namespace:ftxui::__anon24	file:
ftxui::__anon25::Graph	./FTXUI/src/ftxui/dom/graph.cpp	29;"	kind:class	namespace:ftxui::__anon25	file:	inherits:Node
ftxui::__anon25::Graph::Graph	./FTXUI/src/ftxui/dom/graph.cpp	31;"	kind:function	class:ftxui::__anon25::Graph	access:public	signature:(GraphFunction graph_function)
ftxui::__anon25::Graph::graph_function_	./FTXUI/src/ftxui/dom/graph.cpp	64;"	kind:member	class:ftxui::__anon25::Graph	file:	access:private
ftxui::__anon25::charset	./FTXUI/src/ftxui/dom/graph.cpp	20;"	kind:member	namespace:ftxui::__anon25	file:
ftxui::__anon26::rotate	./FTXUI/src/ftxui/dom/vbox_test.cpp	18;"	kind:function	namespace:ftxui::__anon26	signature:(std::string str)
ftxui::__anon27::Unselectable	./FTXUI/src/ftxui/dom/selection.cpp	15;"	kind:class	namespace:ftxui::__anon27	file:	inherits:NodeDecorator
ftxui::__anon29::IsCell	./FTXUI/src/ftxui/dom/table.cpp	17;"	kind:function	namespace:ftxui::__anon29	signature:(int x, int y)
ftxui::__anon29::Order	./FTXUI/src/ftxui/dom/table.cpp	38;"	kind:function	namespace:ftxui::__anon29	signature:(int& a, int& b)
ftxui::__anon29::Wrap	./FTXUI/src/ftxui/dom/table.cpp	31;"	kind:function	namespace:ftxui::__anon29	signature:(int input, int modulo)
ftxui::__anon29::charset	./FTXUI/src/ftxui/dom/table.cpp	22;"	kind:member	namespace:ftxui::__anon29	file:
ftxui::__anon2::Bold	./FTXUI/src/ftxui/dom/bold.cpp	16;"	kind:class	namespace:ftxui::__anon2	file:	inherits:NodeDecorator
ftxui::__anon30::cell	./FTXUI/src/ftxui/dom/gridbox_test.cpp	24;"	kind:function	namespace:ftxui::__anon30	signature:(const char* t)
ftxui::__anon30::rotate	./FTXUI/src/ftxui/dom/gridbox_test.cpp	18;"	kind:function	namespace:ftxui::__anon30	signature:(std::string str)
ftxui::__anon31::Split	./FTXUI/src/ftxui/dom/paragraph.cpp	15;"	kind:function	namespace:ftxui::__anon31	signature:(const std::string& the_text)
ftxui::__anon31::Split	./FTXUI/src/ftxui/dom/paragraph.cpp	25;"	kind:function	namespace:ftxui::__anon31	signature:(const std::string& paragraph, const std::function<Element(std::string)>& f)
ftxui::__anon32::Hyperlink	./FTXUI/src/ftxui/dom/hyperlink.cpp	17;"	kind:class	namespace:ftxui::__anon32	file:	inherits:NodeDecorator
ftxui::__anon32::Hyperlink::Hyperlink	./FTXUI/src/ftxui/dom/hyperlink.cpp	19;"	kind:function	class:ftxui::__anon32::Hyperlink	access:public	signature:(Element child, std::string link)
ftxui::__anon32::Hyperlink::link_	./FTXUI/src/ftxui/dom/hyperlink.cpp	32;"	kind:member	class:ftxui::__anon32::Hyperlink	file:	access:public
ftxui::__anon33::Focus	./FTXUI/src/ftxui/dom/frame.cpp	18;"	kind:class	namespace:ftxui::__anon33	file:	inherits:Node
ftxui::__anon33::Focus::Focus	./FTXUI/src/ftxui/dom/frame.cpp	20;"	kind:function	class:ftxui::__anon33::Focus	access:public	signature:(Elements children)
ftxui::__anon33::FocusCursor	./FTXUI/src/ftxui/dom/frame.cpp	83;"	kind:class	namespace:ftxui::__anon33	file:	inherits:Focus
ftxui::__anon33::FocusCursor::FocusCursor	./FTXUI/src/ftxui/dom/frame.cpp	85;"	kind:function	class:ftxui::__anon33::FocusCursor	access:public	signature:(Elements children, Screen::Cursor::Shape shape)
ftxui::__anon33::FocusCursor::shape_	./FTXUI/src/ftxui/dom/frame.cpp	93;"	kind:member	class:ftxui::__anon33::FocusCursor	file:	access:private
ftxui::__anon33::Frame	./FTXUI/src/ftxui/dom/frame.cpp	39;"	kind:class	namespace:ftxui::__anon33	file:	inherits:Node
ftxui::__anon33::Frame::Frame	./FTXUI/src/ftxui/dom/frame.cpp	41;"	kind:function	class:ftxui::__anon33::Frame	access:public	signature:(Elements children, bool x_frame, bool y_frame)
ftxui::__anon33::Frame::x_frame_	./FTXUI/src/ftxui/dom/frame.cpp	79;"	kind:member	class:ftxui::__anon33::Frame	file:	access:private
ftxui::__anon33::Frame::y_frame_	./FTXUI/src/ftxui/dom/frame.cpp	80;"	kind:member	class:ftxui::__anon33::Frame	file:	access:private
ftxui::__anon34::g_map_block	./FTXUI/src/ftxui/dom/canvas.cpp	70;"	kind:member	namespace:ftxui::__anon34	file:
ftxui::__anon34::g_map_block_inversed	./FTXUI/src/ftxui/dom/canvas.cpp	76;"	kind:member	namespace:ftxui::__anon34	file:
ftxui::__anon34::g_map_braille	./FTXUI/src/ftxui/dom/canvas.cpp	54;"	kind:member	namespace:ftxui::__anon34	file:
ftxui::__anon34::nostyle	./FTXUI/src/ftxui/dom/canvas.cpp	83;"	kind:member	namespace:ftxui::__anon34	file:
ftxui::__anon35::CanvasNodeBase	./FTXUI/src/ftxui/dom/canvas.cpp	869;"	kind:class	namespace:ftxui::__anon35	file:	inherits:Node
ftxui::__anon35::CanvasNodeBase::CanvasNodeBase	./FTXUI/src/ftxui/dom/canvas.cpp	871;"	kind:prototype	class:ftxui::__anon35::CanvasNodeBase	file:	access:public	signature:()
ftxui::__anon35::CanvasNodeBase::canvas	./FTXUI/src/ftxui/dom/canvas.cpp	884;"	kind:prototype	class:ftxui::__anon35::CanvasNodeBase	file:	access:public	implementation:pure virtual	signature:()
ftxui::__anon36::MouseMove	./FTXUI/src/ftxui/dom/selection_test.cpp	44;"	kind:function	namespace:ftxui::__anon36	signature:(int x, int y)
ftxui::__anon36::MousePressed	./FTXUI/src/ftxui/dom/selection_test.cpp	20;"	kind:function	namespace:ftxui::__anon36	signature:(int x, int y)
ftxui::__anon36::MouseReleased	./FTXUI/src/ftxui/dom/selection_test.cpp	32;"	kind:function	namespace:ftxui::__anon36	signature:(int x, int y)
ftxui::__anon37::ClearUnder	./FTXUI/src/ftxui/dom/clear_under.cpp	18;"	kind:class	namespace:ftxui::__anon37	file:	inherits:NodeDecorator
ftxui::__anon38::Border	./FTXUI/src/ftxui/dom/border.cpp	35;"	kind:class	namespace:ftxui::__anon38	file:	inherits:Node
ftxui::__anon38::Border::Border	./FTXUI/src/ftxui/dom/border.cpp	37;"	kind:function	class:ftxui::__anon38::Border	access:public	signature:(Elements children, BorderStyle style, std::optional<Color> foreground_color = std::nullopt)
ftxui::__anon38::Border::charset_	./FTXUI/src/ftxui/dom/border.cpp	45;"	kind:member	class:ftxui::__anon38::Border	file:	access:public
ftxui::__anon38::Border::foreground_color_	./FTXUI/src/ftxui/dom/border.cpp	46;"	kind:member	class:ftxui::__anon38::Border	file:	access:public
ftxui::__anon38::BorderPixel	./FTXUI/src/ftxui/dom/border.cpp	132;"	kind:class	namespace:ftxui::__anon38	file:	inherits:Node
ftxui::__anon38::BorderPixel::BorderPixel	./FTXUI/src/ftxui/dom/border.cpp	134;"	kind:function	class:ftxui::__anon38::BorderPixel	access:public	signature:(Elements children, Pixel pixel)
ftxui::__anon38::BorderPixel::pixel_	./FTXUI/src/ftxui/dom/border.cpp	138;"	kind:member	class:ftxui::__anon38::BorderPixel	file:	access:private
ftxui::__anon38::simple_border_charset	./FTXUI/src/ftxui/dom/border.cpp	25;"	kind:member	namespace:ftxui::__anon38	file:
ftxui::__anon39::Dim	./FTXUI/src/ftxui/dom/dim.cpp	16;"	kind:class	namespace:ftxui::__anon39	file:	inherits:NodeDecorator
ftxui::__anon3::MakeHorizontalList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	29;"	kind:function	namespace:ftxui::__anon3	signature:(int focused_index, int n)
ftxui::__anon3::MakeVerticalList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	17;"	kind:function	namespace:ftxui::__anon3	signature:(int focused_index, int n)
ftxui::__anon3::PrintHorizontalList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	48;"	kind:function	namespace:ftxui::__anon3	signature:(int focused_index, int n)
ftxui::__anon3::PrintVerticalList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	41;"	kind:function	namespace:ftxui::__anon3	signature:(int focused_index, int n)
ftxui::__anon40::VBox	./FTXUI/src/ftxui/dom/vbox.cpp	20;"	kind:class	namespace:ftxui::__anon40	file:	inherits:Node
ftxui::__anon40::VBox::VBox	./FTXUI/src/ftxui/dom/vbox.cpp	22;"	kind:function	class:ftxui::__anon40::VBox	access:public	signature:(Elements children)
ftxui::__anon41::BasicComponent	./FTXUI/src/ftxui/component/resizable_split_test.cpp	20;"	kind:function	namespace:ftxui::__anon41	signature:()
ftxui::__anon41::MousePressed	./FTXUI/src/ftxui/component/resizable_split_test.cpp	24;"	kind:function	namespace:ftxui::__anon41	signature:(int x, int y)
ftxui::__anon41::MouseReleased	./FTXUI/src/ftxui/component/resizable_split_test.cpp	36;"	kind:function	namespace:ftxui::__anon41	signature:(int x, int y)
ftxui::__anon43::Post	./FTXUI/src/ftxui/component/hoverable.cpp	19;"	kind:function	namespace:ftxui::__anon43	signature:(std::function<void()> f)
ftxui::__anon44::BasicComponent	./FTXUI/src/ftxui/component/hoverable_test.cpp	31;"	kind:function	namespace:ftxui::__anon44	signature:()
ftxui::__anon44::HoverEvent	./FTXUI/src/ftxui/component/hoverable_test.cpp	19;"	kind:function	namespace:ftxui::__anon44	signature:(int x, int y)
ftxui::__anon44::TEST	./FTXUI/src/ftxui/component/hoverable_test.cpp	115;"	kind:function	namespace:ftxui::__anon44	signature:(HoverableTest, BasicBoolCallback)
ftxui::__anon44::TEST	./FTXUI/src/ftxui/component/hoverable_test.cpp	147;"	kind:function	namespace:ftxui::__anon44	signature:(HoverableTest, Coverage)
ftxui::__anon44::TEST	./FTXUI/src/ftxui/component/hoverable_test.cpp	35;"	kind:function	namespace:ftxui::__anon44	signature:(HoverableTest, BasicBool)
ftxui::__anon44::TEST	./FTXUI/src/ftxui/component/hoverable_test.cpp	67;"	kind:function	namespace:ftxui::__anon44	signature:(HoverableTest, BasicCallback)
ftxui::__anon45::Make	./FTXUI/src/ftxui/component/component_test.cpp	13;"	kind:function	namespace:ftxui::__anon45	signature:()
ftxui::__anon46::DefaultOptionTransform	./FTXUI/src/ftxui/component/menu.cpp	29;"	kind:function	namespace:ftxui::__anon46	signature:(const EntryState& state)
ftxui::__anon46::IsHorizontal	./FTXUI/src/ftxui/component/menu.cpp	53;"	kind:function	namespace:ftxui::__anon46	signature:(Direction direction)
ftxui::__anon46::IsInverted	./FTXUI/src/ftxui/component/menu.cpp	41;"	kind:function	namespace:ftxui::__anon46	signature:(Direction direction)
ftxui::__anon48::AnimationListener	./FTXUI/src/ftxui/component/screen_interactive.cpp	338;"	kind:function	namespace:ftxui::__anon48	signature:(std::atomic<bool>* quit, Sender<Task> out)
ftxui::__anon48::CSI	./FTXUI/src/ftxui/component/screen_interactive.cpp	261;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::CapturedMouseImpl	./FTXUI/src/ftxui/component/screen_interactive.cpp	324;"	kind:class	namespace:ftxui::__anon48	file:	inherits:CapturedMouseInterface
ftxui::__anon48::CapturedMouseImpl::CapturedMouseImpl	./FTXUI/src/ftxui/component/screen_interactive.cpp	326;"	kind:function	class:ftxui::__anon48::CapturedMouseImpl	access:public	signature:(std::function<void(void)> callback)
ftxui::__anon48::CapturedMouseImpl::CapturedMouseImpl	./FTXUI/src/ftxui/component/screen_interactive.cpp	329;"	kind:prototype	class:ftxui::__anon48::CapturedMouseImpl	file:	access:public	signature:(const CapturedMouseImpl&)
ftxui::__anon48::CapturedMouseImpl::CapturedMouseImpl	./FTXUI/src/ftxui/component/screen_interactive.cpp	330;"	kind:prototype	class:ftxui::__anon48::CapturedMouseImpl	file:	access:public	signature:(CapturedMouseImpl&&)
ftxui::__anon48::CapturedMouseImpl::callback_	./FTXUI/src/ftxui/component/screen_interactive.cpp	335;"	kind:member	class:ftxui::__anon48::CapturedMouseImpl	file:	access:private
ftxui::__anon48::CapturedMouseImpl::operator =	./FTXUI/src/ftxui/component/screen_interactive.cpp	331;"	kind:prototype	class:ftxui::__anon48::CapturedMouseImpl	file:	access:public	signature:(const CapturedMouseImpl&)
ftxui::__anon48::CapturedMouseImpl::operator =	./FTXUI/src/ftxui/component/screen_interactive.cpp	332;"	kind:prototype	class:ftxui::__anon48::CapturedMouseImpl	file:	access:public	signature:(CapturedMouseImpl&&)
ftxui::__anon48::CheckStdinReady	./FTXUI/src/ftxui/component/screen_interactive.cpp	165;"	kind:function	namespace:ftxui::__anon48	signature:(int usec_timeout)
ftxui::__anon48::DCS	./FTXUI/src/ftxui/component/screen_interactive.cpp	264;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::DECMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	273;"	kind:class	namespace:ftxui::__anon48	file:	inherits:std::uint16_t
ftxui::__anon48::DECMode::kAlternateScreen	./FTXUI/src/ftxui/component/screen_interactive.cpp	288;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kCursor	./FTXUI/src/ftxui/component/screen_interactive.cpp	275;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kLineWrap	./FTXUI/src/ftxui/component/screen_interactive.cpp	274;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kMouseAnyEvent	./FTXUI/src/ftxui/component/screen_interactive.cpp	282;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kMouseBtnEventMouse	./FTXUI/src/ftxui/component/screen_interactive.cpp	281;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kMouseSgrExtMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	285;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kMouseSgrPixelsMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	287;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kMouseUrxvtMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	286;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kMouseUtf8	./FTXUI/src/ftxui/component/screen_interactive.cpp	284;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kMouseVt200	./FTXUI/src/ftxui/component/screen_interactive.cpp	278;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kMouseVt200Highlight	./FTXUI/src/ftxui/component/screen_interactive.cpp	279;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECMode::kMouseX10	./FTXUI/src/ftxui/component/screen_interactive.cpp	277;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
ftxui::__anon48::DECRQSS_DECSCUSR	./FTXUI/src/ftxui/component/screen_interactive.cpp	270;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::DSRMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	292;"	kind:class	namespace:ftxui::__anon48	file:	inherits:std::uint8_t
ftxui::__anon48::DSRMode::kCursor	./FTXUI/src/ftxui/component/screen_interactive.cpp	293;"	kind:member	class:ftxui::__anon48::DSRMode	file:	access:private
ftxui::__anon48::DeviceStatusReport	./FTXUI/src/ftxui/component/screen_interactive.cpp	320;"	kind:function	namespace:ftxui::__anon48	signature:(DSRMode ps)
ftxui::__anon48::EventListener	./FTXUI/src/ftxui/component/screen_interactive.cpp	139;"	kind:function	namespace:ftxui::__anon48	signature:(std::atomic<bool>* quit, Sender<Task> out)
ftxui::__anon48::EventListener	./FTXUI/src/ftxui/component/screen_interactive.cpp	175;"	kind:function	namespace:ftxui::__anon48	signature:(std::atomic<bool>* quit, Sender<Task> out)
ftxui::__anon48::EventListener	./FTXUI/src/ftxui/component/screen_interactive.cpp	85;"	kind:function	namespace:ftxui::__anon48	signature:(std::atomic<bool>* quit, Sender<Task> out)
ftxui::__anon48::ExecuteSignalHandlers	./FTXUI/src/ftxui/component/screen_interactive.cpp	235;"	kind:function	namespace:ftxui::__anon48	signature:()
ftxui::__anon48::Flush	./FTXUI/src/ftxui/component/screen_interactive.cpp	75;"	kind:function	namespace:ftxui::__anon48	signature:()
ftxui::__anon48::InstallSignalHandler	./FTXUI/src/ftxui/component/screen_interactive.cpp	254;"	kind:function	namespace:ftxui::__anon48	signature:(int sig)
ftxui::__anon48::OnExit	./FTXUI/src/ftxui/component/screen_interactive.cpp	195;"	kind:function	namespace:ftxui::__anon48	signature:()
ftxui::__anon48::RecordSignal	./FTXUI/src/ftxui/component/screen_interactive.cpp	209;"	kind:function	namespace:ftxui::__anon48	signature:(int signal)
ftxui::__anon48::Reset	./FTXUI/src/ftxui/component/screen_interactive.cpp	315;"	kind:function	namespace:ftxui::__anon48	signature:(const std::vector<DECMode>& parameters)
ftxui::__anon48::ST	./FTXUI/src/ftxui/component/screen_interactive.cpp	266;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::Serialize	./FTXUI/src/ftxui/component/screen_interactive.cpp	296;"	kind:function	namespace:ftxui::__anon48	signature:(const std::vector<DECMode>& parameters)
ftxui::__anon48::Set	./FTXUI/src/ftxui/component/screen_interactive.cpp	310;"	kind:function	namespace:ftxui::__anon48	signature:(const std::vector<DECMode>& parameters)
ftxui::__anon48::ftxui_on_resize	./FTXUI/src/ftxui/component/screen_interactive.cpp	154;"	kind:function	signature:(int columns, int rows)
ftxui::__anon48::g_active_screen	./FTXUI/src/ftxui/component/screen_interactive.cpp	73;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::g_signal_exit_count	./FTXUI/src/ftxui/component/screen_interactive.cpp	202;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::g_signal_resize_count	./FTXUI/src/ftxui/component/screen_interactive.cpp	205;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::g_signal_stop_count	./FTXUI/src/ftxui/component/screen_interactive.cpp	204;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::on_exit_functions	./FTXUI/src/ftxui/component/screen_interactive.cpp	194;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::timeout_microseconds	./FTXUI/src/ftxui/component/screen_interactive.cpp	81;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon48::timeout_milliseconds	./FTXUI/src/ftxui/component/screen_interactive.cpp	80;"	kind:member	namespace:ftxui::__anon48	file:
ftxui::__anon49::ResizableSplitBase	./FTXUI/src/ftxui/component/resizable_split.cpp	21;"	kind:class	namespace:ftxui::__anon49	file:	inherits:ComponentBase
ftxui::__anon49::ResizableSplitBase::OnMouseEvent	./FTXUI/src/ftxui/component/resizable_split.cpp	60;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:(Event event)
ftxui::__anon49::ResizableSplitBase::RenderBottom	./FTXUI/src/ftxui/component/resizable_split.cpp	142;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:()
ftxui::__anon49::ResizableSplitBase::RenderLeft	./FTXUI/src/ftxui/component/resizable_split.cpp	112;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:()
ftxui::__anon49::ResizableSplitBase::RenderRight	./FTXUI/src/ftxui/component/resizable_split.cpp	122;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:()
ftxui::__anon49::ResizableSplitBase::RenderTop	./FTXUI/src/ftxui/component/resizable_split.cpp	132;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:()
ftxui::__anon49::ResizableSplitBase::ResizableSplitBase	./FTXUI/src/ftxui/component/resizable_split.cpp	23;"	kind:function	class:ftxui::__anon49::ResizableSplitBase	access:public	signature:(ResizableSplitOption options)
ftxui::__anon49::ResizableSplitBase::box_	./FTXUI/src/ftxui/component/resizable_split.cpp	156;"	kind:member	class:ftxui::__anon49::ResizableSplitBase	file:	access:private
ftxui::__anon49::ResizableSplitBase::captured_mouse_	./FTXUI/src/ftxui/component/resizable_split.cpp	154;"	kind:member	class:ftxui::__anon49::ResizableSplitBase	file:	access:private
ftxui::__anon49::ResizableSplitBase::options_	./FTXUI/src/ftxui/component/resizable_split.cpp	153;"	kind:member	class:ftxui::__anon49::ResizableSplitBase	file:	access:private
ftxui::__anon49::ResizableSplitBase::separator_box_	./FTXUI/src/ftxui/component/resizable_split.cpp	155;"	kind:member	class:ftxui::__anon49::ResizableSplitBase	file:	access:private
ftxui::__anon4::MakeHorizontalFlexboxList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	280;"	kind:function	namespace:ftxui::__anon4	signature:(int n)
ftxui::__anon4::PrintHorizontalFlexboxList	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	288;"	kind:function	namespace:ftxui::__anon4	signature:(int n)
ftxui::__anon4::TEST	./FTXUI/src/ftxui/dom/scroll_indicator_test.cpp	295;"	kind:function	namespace:ftxui::__anon4	signature:(ScrollIndicator, HorizontalFlexbox)
ftxui::__anon50::SliderBase	./FTXUI/src/ftxui/component/slider.cpp	37;"	kind:class	namespace:ftxui::__anon50	file:	inherits:SliderOption,ComponentBase
ftxui::__anon50::SliderBase::OnCapturedMouseEvent	./FTXUI/src/ftxui/component/slider.cpp	136;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:(Event event)
ftxui::__anon50::SliderBase::OnDown	./FTXUI/src/ftxui/component/slider.cpp	92;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:()
ftxui::__anon50::SliderBase::OnLeft	./FTXUI/src/ftxui/component/slider.cpp	50;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:()
ftxui::__anon50::SliderBase::OnMouseEvent	./FTXUI/src/ftxui/component/slider.cpp	179;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:(Event event)
ftxui::__anon50::SliderBase::OnRight	./FTXUI/src/ftxui/component/slider.cpp	64;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:()
ftxui::__anon50::SliderBase::OnUp	./FTXUI/src/ftxui/component/slider.cpp	78;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:()
ftxui::__anon50::SliderBase::SliderBase	./FTXUI/src/ftxui/component/slider.cpp	39;"	kind:function	class:ftxui::__anon50::SliderBase	access:public	signature:(SliderOption<T> options)
ftxui::__anon50::SliderBase::captured_mouse_	./FTXUI/src/ftxui/component/slider.cpp	209;"	kind:member	class:ftxui::__anon50::SliderBase	file:	access:private
ftxui::__anon50::SliderBase::gauge_box_	./FTXUI/src/ftxui/component/slider.cpp	208;"	kind:member	class:ftxui::__anon50::SliderBase	file:	access:private
ftxui::__anon50::SliderWithLabel	./FTXUI/src/ftxui/component/slider.cpp	212;"	kind:class	namespace:ftxui::__anon50	file:	inherits:ComponentBase
ftxui::__anon50::SliderWithLabel::SliderWithLabel	./FTXUI/src/ftxui/component/slider.cpp	214;"	kind:function	class:ftxui::__anon50::SliderWithLabel	access:public	signature:(ConstStringRef label, Component inner)
ftxui::__anon50::SliderWithLabel::box_	./FTXUI/src/ftxui/component/slider.cpp	261;"	kind:member	class:ftxui::__anon50::SliderWithLabel	file:	access:private
ftxui::__anon50::SliderWithLabel::label_	./FTXUI/src/ftxui/component/slider.cpp	260;"	kind:member	class:ftxui::__anon50::SliderWithLabel	file:	access:private
ftxui::__anon50::SliderWithLabel::mouse_hover_	./FTXUI/src/ftxui/component/slider.cpp	262;"	kind:member	class:ftxui::__anon50::SliderWithLabel	file:	access:private
ftxui::__anon50::flexDirection	./FTXUI/src/ftxui/component/slider.cpp	24;"	kind:function	namespace:ftxui::__anon50	signature:(Direction direction)
ftxui::__anon51::MousePressed	./FTXUI/src/ftxui/component/slider_test.cpp	22;"	kind:function	namespace:ftxui::__anon51	signature:(int x, int y)
ftxui::__anon51::MouseReleased	./FTXUI/src/ftxui/component/slider_test.cpp	34;"	kind:function	namespace:ftxui::__anon51	signature:(int x, int y)
ftxui::__anon52::Focusable	./FTXUI/src/ftxui/component/container_test.cpp	13;"	kind:function	namespace:ftxui::__anon52	signature:()
ftxui::__anon52::NonFocusable	./FTXUI/src/ftxui/component/container_test.cpp	16;"	kind:function	namespace:ftxui::__anon52	signature:()
ftxui::__anon53::MousePressed	./FTXUI/src/ftxui/component/button_test.cpp	22;"	kind:function	namespace:ftxui::__anon53	signature:(int x, int y)
ftxui::__anon54::DefaultRenderState	./FTXUI/src/ftxui/component/window.cpp	94;"	kind:function	namespace:ftxui::__anon54	signature:(const WindowRenderState& state)
ftxui::__anon54::PositionAndSize	./FTXUI/src/ftxui/component/window.cpp	21;"	kind:function	namespace:ftxui::__anon54	signature:(int left, int top, int width, int height)
ftxui::__anon54::ResizeDecorator	./FTXUI/src/ftxui/component/window.cpp	39;"	kind:class	namespace:ftxui::__anon54	file:	inherits:NodeDecorator
ftxui::__anon54::ResizeDecorator::ResizeDecorator	./FTXUI/src/ftxui/component/window.cpp	41;"	kind:function	class:ftxui::__anon54::ResizeDecorator	access:public	signature:(Element child, bool resize_left, bool resize_right, bool resize_top, bool resize_down, Color color)
ftxui::__anon54::ResizeDecorator::color_	./FTXUI/src/ftxui/component/window.cpp	87;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
ftxui::__anon54::ResizeDecorator::resize_down_	./FTXUI/src/ftxui/component/window.cpp	91;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
ftxui::__anon54::ResizeDecorator::resize_left_	./FTXUI/src/ftxui/component/window.cpp	88;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
ftxui::__anon54::ResizeDecorator::resize_right_	./FTXUI/src/ftxui/component/window.cpp	89;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
ftxui::__anon54::ResizeDecorator::resize_top_	./FTXUI/src/ftxui/component/window.cpp	90;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
ftxui::__anon54::WindowImpl	./FTXUI/src/ftxui/component/window.cpp	117;"	kind:class	namespace:ftxui::__anon54	file:	inherits:ComponentBase,WindowOptions
ftxui::__anon54::WindowImpl::WindowImpl	./FTXUI/src/ftxui/component/window.cpp	119;"	kind:function	class:ftxui::__anon54::WindowImpl	access:public	signature:(WindowOptions option)
ftxui::__anon54::WindowImpl::box_	./FTXUI/src/ftxui/component/window.cpp	263;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::box_window_	./FTXUI/src/ftxui/component/window.cpp	264;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::captured_mouse_	./FTXUI/src/ftxui/component/window.cpp	266;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::drag_	./FTXUI/src/ftxui/component/window.cpp	273;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::drag_start_x	./FTXUI/src/ftxui/component/window.cpp	267;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::drag_start_y	./FTXUI/src/ftxui/component/window.cpp	268;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::mouse_hover_	./FTXUI/src/ftxui/component/window.cpp	272;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_down_	./FTXUI/src/ftxui/component/window.cpp	276;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_down_hover_	./FTXUI/src/ftxui/component/window.cpp	281;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_left_	./FTXUI/src/ftxui/component/window.cpp	275;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_left_hover_	./FTXUI/src/ftxui/component/window.cpp	280;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_right_	./FTXUI/src/ftxui/component/window.cpp	277;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_right_hover_	./FTXUI/src/ftxui/component/window.cpp	282;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_start_x	./FTXUI/src/ftxui/component/window.cpp	269;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_start_y	./FTXUI/src/ftxui/component/window.cpp	270;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_top_	./FTXUI/src/ftxui/component/window.cpp	274;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon54::WindowImpl::resize_top_hover_	./FTXUI/src/ftxui/component/window.cpp	279;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
ftxui::__anon55::RadioboxBase	./FTXUI/src/ftxui/component/radiobox.cpp	25;"	kind:class	namespace:ftxui::__anon55	file:	inherits:ComponentBase,RadioboxOption
ftxui::__anon55::RadioboxBase::Clamp	./FTXUI/src/ftxui/component/radiobox.cpp	157;"	kind:function	class:ftxui::__anon55::RadioboxBase	file:	access:private	signature:()
ftxui::__anon55::RadioboxBase::OnMouseEvent	./FTXUI/src/ftxui/component/radiobox.cpp	108;"	kind:function	class:ftxui::__anon55::RadioboxBase	file:	access:private	signature:(Event event)
ftxui::__anon55::RadioboxBase::OnMouseWheel	./FTXUI/src/ftxui/component/radiobox.cpp	134;"	kind:function	class:ftxui::__anon55::RadioboxBase	file:	access:private	signature:(Event event)
ftxui::__anon55::RadioboxBase::RadioboxBase	./FTXUI/src/ftxui/component/radiobox.cpp	27;"	kind:function	class:ftxui::__anon55::RadioboxBase	access:public	signature:(const RadioboxOption& option)
ftxui::__anon55::RadioboxBase::box_	./FTXUI/src/ftxui/component/radiobox.cpp	169;"	kind:member	class:ftxui::__anon55::RadioboxBase	file:	access:private
ftxui::__anon55::RadioboxBase::boxes_	./FTXUI/src/ftxui/component/radiobox.cpp	168;"	kind:member	class:ftxui::__anon55::RadioboxBase	file:	access:private
ftxui::__anon55::RadioboxBase::hovered_	./FTXUI/src/ftxui/component/radiobox.cpp	167;"	kind:member	class:ftxui::__anon55::RadioboxBase	file:	access:private
ftxui::__anon55::RadioboxBase::size	./FTXUI/src/ftxui/component/radiobox.cpp	165;"	kind:function	class:ftxui::__anon55::RadioboxBase	file:	access:private	signature:() const
ftxui::__anon57::CheckboxBase	./FTXUI/src/ftxui/component/checkbox.cpp	19;"	kind:class	namespace:ftxui::__anon57	file:	inherits:ComponentBase,CheckboxOption
ftxui::__anon57::CheckboxBase::CheckboxBase	./FTXUI/src/ftxui/component/checkbox.cpp	21;"	kind:function	class:ftxui::__anon57::CheckboxBase	access:public	signature:(CheckboxOption option)
ftxui::__anon57::CheckboxBase::OnMouseEvent	./FTXUI/src/ftxui/component/checkbox.cpp	58;"	kind:function	class:ftxui::__anon57::CheckboxBase	file:	access:private	signature:(Event event)
ftxui::__anon57::CheckboxBase::box_	./FTXUI/src/ftxui/component/checkbox.cpp	82;"	kind:member	class:ftxui::__anon57::CheckboxBase	file:	access:private
ftxui::__anon57::CheckboxBase::hovered_	./FTXUI/src/ftxui/component/checkbox.cpp	81;"	kind:member	class:ftxui::__anon57::CheckboxBase	file:	access:private
ftxui::__anon58::GlyphWidth	./FTXUI/src/ftxui/component/input.cpp	43;"	kind:function	namespace:ftxui::__anon58	signature:(const std::string& input, size_t iter)
ftxui::__anon58::InputBase	./FTXUI/src/ftxui/component/input.cpp	92;"	kind:class	namespace:ftxui::__anon58	file:	inherits:ComponentBase,InputOption
ftxui::__anon58::InputBase::CursorColumn	./FTXUI/src/ftxui/component/input.cpp	247;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::DeleteImpl	./FTXUI/src/ftxui/component/input.cpp	209;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleArrowDown	./FTXUI/src/ftxui/component/input.cpp	312;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleArrowLeft	./FTXUI/src/ftxui/component/input.cpp	227;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleArrowRight	./FTXUI/src/ftxui/component/input.cpp	237;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleArrowUp	./FTXUI/src/ftxui/component/input.cpp	277;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleBackspace	./FTXUI/src/ftxui/component/input.cpp	197;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleCharacter	./FTXUI/src/ftxui/component/input.cpp	355;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:(const std::string& character)
ftxui::__anon58::InputBase::HandleDelete	./FTXUI/src/ftxui/component/input.cpp	219;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleEnd	./FTXUI/src/ftxui/component/input.cpp	342;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleHome	./FTXUI/src/ftxui/component/input.cpp	337;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleInsert	./FTXUI/src/ftxui/component/input.cpp	533;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleLeftCtrl	./FTXUI/src/ftxui/component/input.cpp	414;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleMouse	./FTXUI/src/ftxui/component/input.cpp	463;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:(Event event)
ftxui::__anon58::InputBase::HandleReturn	./FTXUI/src/ftxui/component/input.cpp	347;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::HandleRightCtrl	./FTXUI/src/ftxui/component/input.cpp	438;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:()
ftxui::__anon58::InputBase::InputBase	./FTXUI/src/ftxui/component/input.cpp	95;"	kind:function	class:ftxui::__anon58::InputBase	access:public	signature:(InputOption option)
ftxui::__anon58::InputBase::MoveCursorColumn	./FTXUI/src/ftxui/component/input.cpp	264;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:(int columns)
ftxui::__anon58::InputBase::Text	./FTXUI/src/ftxui/component/input.cpp	184;"	kind:function	class:ftxui::__anon58::InputBase	file:	access:private	signature:(const std::string& input)
ftxui::__anon58::InputBase::box_	./FTXUI/src/ftxui/component/input.cpp	542;"	kind:member	class:ftxui::__anon58::InputBase	file:	access:private
ftxui::__anon58::InputBase::cursor_box_	./FTXUI/src/ftxui/component/input.cpp	543;"	kind:member	class:ftxui::__anon58::InputBase	file:	access:private
ftxui::__anon58::InputBase::hovered_	./FTXUI/src/ftxui/component/input.cpp	540;"	kind:member	class:ftxui::__anon58::InputBase	file:	access:private
ftxui::__anon58::IsWordCharacter	./FTXUI/src/ftxui/component/input.cpp	82;"	kind:function	namespace:ftxui::__anon58	signature:(const std::string& input, size_t iter)
ftxui::__anon58::IsWordCodePoint	./FTXUI/src/ftxui/component/input.cpp	54;"	kind:function	namespace:ftxui::__anon58	signature:(uint32_t codepoint)
ftxui::__anon58::Split	./FTXUI/src/ftxui/component/input.cpp	30;"	kind:function	namespace:ftxui::__anon58	signature:(const std::string& input)
ftxui::__anon59::TestSignal	./FTXUI/src/ftxui/component/screen_interactive_test.cpp	16;"	kind:function	namespace:ftxui::__anon59	signature:(int signal)
ftxui::__anon5::Hash	./FTXUI/src/ftxui/dom/canvas_test.cpp	19;"	kind:function	namespace:ftxui::__anon5	signature:(const std::string s)
ftxui::__anon61::ButtonBase	./FTXUI/src/ftxui/component/button.cpp	35;"	kind:class	namespace:ftxui::__anon61	file:	inherits:ComponentBase,ButtonOption
ftxui::__anon61::ButtonBase::AnimatedColorStyle	./FTXUI/src/ftxui/component/button.cpp	62;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:()
ftxui::__anon61::ButtonBase::ButtonBase	./FTXUI/src/ftxui/component/button.cpp	37;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:(ButtonOption option)
ftxui::__anon61::ButtonBase::OnClick	./FTXUI/src/ftxui/component/button.cpp	97;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:()
ftxui::__anon61::ButtonBase::OnMouseEvent	./FTXUI/src/ftxui/component/button.cpp	119;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:(Event event)
ftxui::__anon61::ButtonBase::SetAnimationTarget	./FTXUI/src/ftxui/component/button.cpp	79;"	kind:function	class:ftxui::__anon61::ButtonBase	access:public	signature:(float target)
ftxui::__anon61::ButtonBase::animation_background_	./FTXUI/src/ftxui/component/button.cpp	143;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
ftxui::__anon61::ButtonBase::animation_foreground_	./FTXUI/src/ftxui/component/button.cpp	144;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
ftxui::__anon61::ButtonBase::animator_background_	./FTXUI/src/ftxui/component/button.cpp	145;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
ftxui::__anon61::ButtonBase::animator_foreground_	./FTXUI/src/ftxui/component/button.cpp	147;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
ftxui::__anon61::ButtonBase::box_	./FTXUI/src/ftxui/component/button.cpp	141;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
ftxui::__anon61::ButtonBase::mouse_hover_	./FTXUI/src/ftxui/component/button.cpp	140;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
ftxui::__anon61::ButtonBase::option_	./FTXUI/src/ftxui/component/button.cpp	142;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
ftxui::__anon61::DefaultTransform	./FTXUI/src/ftxui/component/button.cpp	24;"	kind:function	namespace:ftxui::__anon61	signature:(EntryState params)
ftxui::__anon62::palette16code	./FTXUI/src/ftxui/screen/color.cpp	16;"	kind:member	namespace:ftxui::__anon62	file:
ftxui::__anon63::dev_null_pixel	./FTXUI/src/ftxui/screen/image.cpp	14;"	kind:function	namespace:ftxui::__anon63	signature:()
ftxui::__anon65::InvertMap	./FTXUI/src/ftxui/screen/screen.cpp	297;"	kind:function	namespace:ftxui::__anon65	signature:(const std::map<A, B> input)
ftxui::__anon65::ShouldAttemptAutoMerge	./FTXUI/src/ftxui/screen/screen.cpp	366;"	kind:function	namespace:ftxui::__anon65	signature:(Pixel& pixel)
ftxui::__anon65::TileEncoding	./FTXUI/src/ftxui/screen/screen.cpp	128;"	kind:struct	namespace:ftxui::__anon65	file:
ftxui::__anon65::TileEncoding::down	./FTXUI/src/ftxui/screen/screen.cpp	132;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
ftxui::__anon65::TileEncoding::left	./FTXUI/src/ftxui/screen/screen.cpp	129;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
ftxui::__anon65::TileEncoding::operator <	./FTXUI/src/ftxui/screen/screen.cpp	136;"	kind:function	struct:ftxui::__anon65::TileEncoding	access:public	signature:(const TileEncoding& other) const
ftxui::__anon65::TileEncoding::right	./FTXUI/src/ftxui/screen/screen.cpp	131;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
ftxui::__anon65::TileEncoding::round	./FTXUI/src/ftxui/screen/screen.cpp	133;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
ftxui::__anon65::TileEncoding::top	./FTXUI/src/ftxui/screen/screen.cpp	130;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
ftxui::__anon65::UpdatePixelStyle	./FTXUI/src/ftxui/screen/screen.cpp	71;"	kind:function	namespace:ftxui::__anon65	signature:(const Screen* screen, std::stringstream& ss, const Pixel& prev, const Pixel& next)
ftxui::__anon65::UpgradeLeftRight	./FTXUI/src/ftxui/screen/screen.cpp	308;"	kind:function	namespace:ftxui::__anon65	signature:(std::string& left, std::string& right)
ftxui::__anon65::UpgradeTopDown	./FTXUI/src/ftxui/screen/screen.cpp	337;"	kind:function	namespace:ftxui::__anon65	signature:(std::string& top, std::string& down)
ftxui::__anon65::WindowsEmulateVT100Terminal	./FTXUI/src/ftxui/screen/screen.cpp	48;"	kind:function	namespace:ftxui::__anon65	signature:()
ftxui::__anon65::tile_encoding	./FTXUI/src/ftxui/screen/screen.cpp	153;"	kind:member	namespace:ftxui::__anon65	file:
ftxui::__anon65::tile_encoding_inverse	./FTXUI/src/ftxui/screen/screen.cpp	305;"	kind:member	namespace:ftxui::__anon65	file:
ftxui::__anon66::ComputeColorSupport	./FTXUI/src/ftxui/screen/terminal.cpp	59;"	kind:function	namespace:ftxui::__anon66	signature:()
ftxui::__anon66::Contains	./FTXUI/src/ftxui/screen/terminal.cpp	55;"	kind:function	namespace:ftxui::__anon66	signature:(const std::string& s, const char* key)
ftxui::__anon66::FallbackSize	./FTXUI/src/ftxui/screen/terminal.cpp	29;"	kind:function	namespace:ftxui::__anon66	signature:()
ftxui::__anon66::Safe	./FTXUI/src/ftxui/screen/terminal.cpp	51;"	kind:function	namespace:ftxui::__anon66	signature:(const char* c)
ftxui::__anon66::g_cached	./FTXUI/src/ftxui/screen/terminal.cpp	26;"	kind:member	namespace:ftxui::__anon66	file:
ftxui::__anon66::g_cached_supported_color	./FTXUI/src/ftxui/screen/terminal.cpp	27;"	kind:member	namespace:ftxui::__anon66	file:
ftxui::__anon67::Adapter	./FTXUI/src/ftxui/util/ref_test.cpp	12;"	kind:class	namespace:ftxui::__anon67	file:	inherits:ConstStringListRef::Adapter
ftxui::__anon67::Adapter::Adapter	./FTXUI/src/ftxui/util/ref_test.cpp	14;"	kind:function	class:ftxui::__anon67::Adapter	access:public	signature:(std::vector<std::string>& entries)
ftxui::__anon67::Adapter::entries	./FTXUI/src/ftxui/util/ref_test.cpp	19;"	kind:member	class:ftxui::__anon67::Adapter	file:	access:public
ftxui::__anon6::Reflect	./FTXUI/src/ftxui/dom/reflect.cpp	17;"	kind:class	namespace:ftxui::__anon6	file:	inherits:Node
ftxui::__anon6::Reflect::Reflect	./FTXUI/src/ftxui/dom/reflect.cpp	19;"	kind:function	class:ftxui::__anon6::Reflect	access:public	signature:(Element child, Box& box)
ftxui::__anon6::Reflect::reflected_box_	./FTXUI/src/ftxui/dom/reflect.cpp	39;"	kind:member	class:ftxui::__anon6::Reflect	file:	access:private
ftxui::__anon7::Inverted	./FTXUI/src/ftxui/dom/inverted.cpp	16;"	kind:class	namespace:ftxui::__anon7	file:	inherits:NodeDecorator
ftxui::__anon8::Separator	./FTXUI/src/ftxui/dom/separator.cpp	32;"	kind:class	namespace:ftxui::__anon8	file:	inherits:Node
ftxui::__anon8::Separator::Separator	./FTXUI/src/ftxui/dom/separator.cpp	34;"	kind:function	class:ftxui::__anon8::Separator	access:public	signature:(std::string value)
ftxui::__anon8::Separator::value_	./FTXUI/src/ftxui/dom/separator.cpp	51;"	kind:member	class:ftxui::__anon8::Separator	file:	access:public
ftxui::__anon8::SeparatorAuto	./FTXUI/src/ftxui/dom/separator.cpp	54;"	kind:class	namespace:ftxui::__anon8	file:	inherits:Node
ftxui::__anon8::SeparatorAuto::SeparatorAuto	./FTXUI/src/ftxui/dom/separator.cpp	56;"	kind:function	class:ftxui::__anon8::SeparatorAuto	access:public	signature:(BorderStyle style)
ftxui::__anon8::SeparatorAuto::style_	./FTXUI/src/ftxui/dom/separator.cpp	79;"	kind:member	class:ftxui::__anon8::SeparatorAuto	file:	access:public
ftxui::__anon8::SeparatorWithPixel	./FTXUI/src/ftxui/dom/separator.cpp	82;"	kind:class	namespace:ftxui::__anon8	file:	inherits:SeparatorAuto
ftxui::__anon8::SeparatorWithPixel::SeparatorWithPixel	./FTXUI/src/ftxui/dom/separator.cpp	84;"	kind:function	class:ftxui::__anon8::SeparatorWithPixel	access:public	signature:(Pixel pixel)
ftxui::__anon8::SeparatorWithPixel::pixel_	./FTXUI/src/ftxui/dom/separator.cpp	97;"	kind:member	class:ftxui::__anon8::SeparatorWithPixel	file:	access:private
ftxui::__anon8::charsets	./FTXUI/src/ftxui/dom/separator.cpp	23;"	kind:member	namespace:ftxui::__anon8	file:
ftxui::__anon9::Underlined	./FTXUI/src/ftxui/dom/underlined.cpp	16;"	kind:class	namespace:ftxui::__anon9	file:	inherits:NodeDecorator
ftxui::align_right	./FTXUI/include/ftxui/dom/elements.hpp	188;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::align_right	./FTXUI/src/ftxui/dom/composite_decorator.cpp	39;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::animation::Animator	./FTXUI/include/ftxui/component/animation.hpp	90;"	kind:class	namespace:ftxui::animation
ftxui::animation::Animator::Animator	./FTXUI/include/ftxui/component/animation.hpp	92;"	kind:prototype	class:ftxui::animation::Animator	access:public	signature:(float* from, float to = 0.f, Duration duration = std::chrono::milliseconds(250), easing::Function easing_function = easing::Linear, Duration delay = std::chrono::milliseconds(0))
ftxui::animation::Animator::Animator	./FTXUI/src/ftxui/component/animation.cpp	253;"	kind:function	class:ftxui::animation::Animator	signature:(float* from, float to, Duration duration, easing::Function easing_function, Duration delay)
ftxui::animation::Animator::OnAnimation	./FTXUI/include/ftxui/component/animation.hpp	98;"	kind:prototype	class:ftxui::animation::Animator	access:public	signature:(Params&)
ftxui::animation::Animator::OnAnimation	./FTXUI/src/ftxui/component/animation.cpp	267;"	kind:function	class:ftxui::animation::Animator	signature:(Params& params)
ftxui::animation::Animator::current_	./FTXUI/include/ftxui/component/animation.hpp	108;"	kind:member	class:ftxui::animation::Animator	access:private
ftxui::animation::Animator::duration_	./FTXUI/include/ftxui/component/animation.hpp	106;"	kind:member	class:ftxui::animation::Animator	access:private
ftxui::animation::Animator::easing_function_	./FTXUI/include/ftxui/component/animation.hpp	107;"	kind:member	class:ftxui::animation::Animator	access:private
ftxui::animation::Animator::from_	./FTXUI/include/ftxui/component/animation.hpp	104;"	kind:member	class:ftxui::animation::Animator	access:private
ftxui::animation::Animator::to	./FTXUI/include/ftxui/component/animation.hpp	100;"	kind:function	class:ftxui::animation::Animator	access:public	signature:() const
ftxui::animation::Animator::to_	./FTXUI/include/ftxui/component/animation.hpp	105;"	kind:member	class:ftxui::animation::Animator	access:private
ftxui::animation::Animator::value_	./FTXUI/include/ftxui/component/animation.hpp	103;"	kind:member	class:ftxui::animation::Animator	access:private
ftxui::animation::Params	./FTXUI/include/ftxui/component/animation.hpp	23;"	kind:class	namespace:ftxui::animation
ftxui::animation::Params::Params	./FTXUI/include/ftxui/component/animation.hpp	25;"	kind:function	class:ftxui::animation::Params	access:public	signature:(Duration duration)
ftxui::animation::Params::duration	./FTXUI/include/ftxui/component/animation.hpp	28;"	kind:function	class:ftxui::animation::Params	access:public	signature:() const
ftxui::animation::Params::duration_	./FTXUI/include/ftxui/component/animation.hpp	31;"	kind:member	class:ftxui::animation::Params	access:private
ftxui::animation::RequestAnimationFrame	./FTXUI/include/ftxui/component/animation.hpp	16;"	kind:prototype	namespace:ftxui::animation	signature:()
ftxui::animation::RequestAnimationFrame	./FTXUI/src/ftxui/component/screen_interactive.cpp	63;"	kind:function	namespace:ftxui::animation	signature:()
ftxui::animation::easing::BackIn	./FTXUI/include/ftxui/component/animation.hpp	80;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BackIn	./FTXUI/src/ftxui/component/animation.cpp	202;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BackInOut	./FTXUI/include/ftxui/component/animation.hpp	82;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BackInOut	./FTXUI/src/ftxui/component/animation.cpp	215;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BackOut	./FTXUI/include/ftxui/component/animation.hpp	81;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BackOut	./FTXUI/src/ftxui/component/animation.cpp	207;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BounceIn	./FTXUI/include/ftxui/component/animation.hpp	85;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BounceIn	./FTXUI/src/ftxui/component/animation.cpp	224;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BounceInOut	./FTXUI/include/ftxui/component/animation.hpp	87;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BounceInOut	./FTXUI/src/ftxui/component/animation.cpp	244;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BounceOut	./FTXUI/include/ftxui/component/animation.hpp	86;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::BounceOut	./FTXUI/src/ftxui/component/animation.cpp	228;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CircularIn	./FTXUI/include/ftxui/component/animation.hpp	65;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CircularIn	./FTXUI/src/ftxui/component/animation.cpp	132;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CircularInOut	./FTXUI/include/ftxui/component/animation.hpp	67;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CircularInOut	./FTXUI/src/ftxui/component/animation.cpp	144;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CircularOut	./FTXUI/include/ftxui/component/animation.hpp	66;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CircularOut	./FTXUI/src/ftxui/component/animation.cpp	137;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CubicIn	./FTXUI/include/ftxui/component/animation.hpp	45;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CubicIn	./FTXUI/src/ftxui/component/animation.cpp	51;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CubicInOut	./FTXUI/include/ftxui/component/animation.hpp	47;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CubicInOut	./FTXUI/src/ftxui/component/animation.cpp	64;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CubicOut	./FTXUI/include/ftxui/component/animation.hpp	46;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::CubicOut	./FTXUI/src/ftxui/component/animation.cpp	56;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ElasticIn	./FTXUI/include/ftxui/component/animation.hpp	75;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ElasticIn	./FTXUI/src/ftxui/component/animation.cpp	177;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ElasticInOut	./FTXUI/include/ftxui/component/animation.hpp	77;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ElasticInOut	./FTXUI/src/ftxui/component/animation.cpp	191;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ElasticOut	./FTXUI/include/ftxui/component/animation.hpp	76;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ElasticOut	./FTXUI/src/ftxui/component/animation.cpp	184;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ExponentialIn	./FTXUI/include/ftxui/component/animation.hpp	70;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ExponentialIn	./FTXUI/src/ftxui/component/animation.cpp	152;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ExponentialInOut	./FTXUI/include/ftxui/component/animation.hpp	72;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ExponentialInOut	./FTXUI/src/ftxui/component/animation.cpp	164;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ExponentialOut	./FTXUI/include/ftxui/component/animation.hpp	71;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::ExponentialOut	./FTXUI/src/ftxui/component/animation.cpp	157;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::Linear	./FTXUI/include/ftxui/component/animation.hpp	37;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::Linear	./FTXUI/src/ftxui/component/animation.cpp	29;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuadraticIn	./FTXUI/include/ftxui/component/animation.hpp	40;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuadraticIn	./FTXUI/src/ftxui/component/animation.cpp	34;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuadraticInOut	./FTXUI/include/ftxui/component/animation.hpp	42;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuadraticInOut	./FTXUI/src/ftxui/component/animation.cpp	46;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuadraticOut	./FTXUI/include/ftxui/component/animation.hpp	41;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuadraticOut	./FTXUI/src/ftxui/component/animation.cpp	39;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuarticIn	./FTXUI/include/ftxui/component/animation.hpp	50;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuarticIn	./FTXUI/src/ftxui/component/animation.cpp	73;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuarticInOut	./FTXUI/include/ftxui/component/animation.hpp	52;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuarticInOut	./FTXUI/src/ftxui/component/animation.cpp	86;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuarticOut	./FTXUI/include/ftxui/component/animation.hpp	51;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuarticOut	./FTXUI/src/ftxui/component/animation.cpp	78;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuinticIn	./FTXUI/include/ftxui/component/animation.hpp	55;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuinticIn	./FTXUI/src/ftxui/component/animation.cpp	95;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuinticInOut	./FTXUI/include/ftxui/component/animation.hpp	57;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuinticInOut	./FTXUI/src/ftxui/component/animation.cpp	108;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuinticOut	./FTXUI/include/ftxui/component/animation.hpp	56;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::QuinticOut	./FTXUI/src/ftxui/component/animation.cpp	100;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::SineIn	./FTXUI/include/ftxui/component/animation.hpp	60;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::SineIn	./FTXUI/src/ftxui/component/animation.cpp	117;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::SineInOut	./FTXUI/include/ftxui/component/animation.hpp	62;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::SineInOut	./FTXUI/src/ftxui/component/animation.cpp	127;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::SineOut	./FTXUI/include/ftxui/component/animation.hpp	61;"	kind:prototype	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::SineOut	./FTXUI/src/ftxui/component/animation.cpp	122;"	kind:function	namespace:ftxui::animation::easing	signature:(float p)
ftxui::animation::easing::__anon42::kPi	./FTXUI/src/ftxui/component/animation.cpp	12;"	kind:member	namespace:ftxui::animation::easing::__anon42	file:
ftxui::animation::easing::__anon42::kPi2	./FTXUI/src/ftxui/component/animation.cpp	13;"	kind:member	namespace:ftxui::animation::easing::__anon42	file:
ftxui::automerge	./FTXUI/include/ftxui/dom/elements.hpp	114;"	kind:prototype	namespace:ftxui	signature:(Element child)
ftxui::automerge	./FTXUI/src/ftxui/dom/automerge.cpp	17;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::bgcolor	./FTXUI/include/ftxui/dom/elements.hpp	105;"	kind:prototype	namespace:ftxui	signature:(Color)
ftxui::bgcolor	./FTXUI/include/ftxui/dom/elements.hpp	107;"	kind:prototype	namespace:ftxui	signature:(const LinearGradient&)
ftxui::bgcolor	./FTXUI/include/ftxui/dom/elements.hpp	109;"	kind:prototype	namespace:ftxui	signature:(Color, Element)
ftxui::bgcolor	./FTXUI/include/ftxui/dom/elements.hpp	111;"	kind:prototype	namespace:ftxui	signature:(const LinearGradient&, Element)
ftxui::bgcolor	./FTXUI/src/ftxui/dom/color.cpp	124;"	kind:function	namespace:ftxui	signature:(Color color)
ftxui::bgcolor	./FTXUI/src/ftxui/dom/color.cpp	96;"	kind:function	namespace:ftxui	signature:(Color color, Element child)
ftxui::bgcolor	./FTXUI/src/ftxui/dom/linear_gradient.cpp	267;"	kind:function	namespace:ftxui	signature:(const LinearGradient& gradient, Element child)
ftxui::bgcolor	./FTXUI/src/ftxui/dom/linear_gradient.cpp	297;"	kind:function	namespace:ftxui	signature:(const LinearGradient& gradient)
ftxui::blink	./FTXUI/include/ftxui/dom/elements.hpp	102;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::blink	./FTXUI/src/ftxui/dom/blink.cpp	33;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::bold	./FTXUI/include/ftxui/dom/elements.hpp	96;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::bold	./FTXUI/src/ftxui/dom/bold.cpp	33;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::border	./FTXUI/include/ftxui/dom/elements.hpp	71;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::border	./FTXUI/src/ftxui/dom/border.cpp	227;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::borderDashed	./FTXUI/include/ftxui/dom/elements.hpp	73;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::borderDashed	./FTXUI/src/ftxui/dom/border.cpp	300;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::borderDouble	./FTXUI/include/ftxui/dom/elements.hpp	75;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::borderDouble	./FTXUI/src/ftxui/dom/border.cpp	405;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::borderEmpty	./FTXUI/include/ftxui/dom/elements.hpp	77;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::borderEmpty	./FTXUI/src/ftxui/dom/border.cpp	475;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::borderHeavy	./FTXUI/include/ftxui/dom/elements.hpp	74;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::borderHeavy	./FTXUI/src/ftxui/dom/border.cpp	370;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::borderLight	./FTXUI/include/ftxui/dom/elements.hpp	72;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::borderLight	./FTXUI/src/ftxui/dom/border.cpp	335;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::borderRounded	./FTXUI/include/ftxui/dom/elements.hpp	76;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::borderRounded	./FTXUI/src/ftxui/dom/border.cpp	440;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::borderStyled	./FTXUI/include/ftxui/dom/elements.hpp	78;"	kind:prototype	namespace:ftxui	signature:(BorderStyle)
ftxui::borderStyled	./FTXUI/include/ftxui/dom/elements.hpp	79;"	kind:prototype	namespace:ftxui	signature:(BorderStyle, Color)
ftxui::borderStyled	./FTXUI/include/ftxui/dom/elements.hpp	80;"	kind:prototype	namespace:ftxui	signature:(Color)
ftxui::borderStyled	./FTXUI/src/ftxui/dom/border.cpp	243;"	kind:function	namespace:ftxui	signature:(BorderStyle style)
ftxui::borderStyled	./FTXUI/src/ftxui/dom/border.cpp	252;"	kind:function	namespace:ftxui	signature:(Color foreground_color)
ftxui::borderStyled	./FTXUI/src/ftxui/dom/border.cpp	262;"	kind:function	namespace:ftxui	signature:(BorderStyle style, Color foreground_color)
ftxui::borderWith	./FTXUI/include/ftxui/dom/elements.hpp	81;"	kind:prototype	namespace:ftxui	signature:(const Pixel&)
ftxui::borderWith	./FTXUI/src/ftxui/dom/border.cpp	234;"	kind:function	namespace:ftxui	signature:(const Pixel& pixel)
ftxui::box_helper::Compute	./FTXUI/src/ftxui/dom/box_helper.cpp	65;"	kind:function	namespace:ftxui::box_helper	signature:(std::vector<Element>* elements, int target_size)
ftxui::box_helper::Compute	./FTXUI/src/ftxui/dom/box_helper.hpp	22;"	kind:prototype	namespace:ftxui::box_helper	signature:(std::vector<Element>* elements, int target_size)
ftxui::box_helper::Element	./FTXUI/src/ftxui/dom/box_helper.hpp	12;"	kind:struct	namespace:ftxui::box_helper
ftxui::box_helper::Element::flex_grow	./FTXUI/src/ftxui/dom/box_helper.hpp	15;"	kind:member	struct:ftxui::box_helper::Element	access:public
ftxui::box_helper::Element::flex_shrink	./FTXUI/src/ftxui/dom/box_helper.hpp	16;"	kind:member	struct:ftxui::box_helper::Element	access:public
ftxui::box_helper::Element::min_size	./FTXUI/src/ftxui/dom/box_helper.hpp	14;"	kind:member	struct:ftxui::box_helper::Element	access:public
ftxui::box_helper::Element::size	./FTXUI/src/ftxui/dom/box_helper.hpp	19;"	kind:member	struct:ftxui::box_helper::Element	access:public
ftxui::box_helper::__anon28::ComputeGrow	./FTXUI/src/ftxui/dom/box_helper.cpp	15;"	kind:function	namespace:ftxui::box_helper::__anon28	signature:(std::vector<Element>* elements, int extra_space, int flex_grow_sum)
ftxui::box_helper::__anon28::ComputeShrinkEasy	./FTXUI/src/ftxui/dom/box_helper.cpp	30;"	kind:function	namespace:ftxui::box_helper::__anon28	signature:(std::vector<Element>* elements, int extra_space, int flex_shrink_sum)
ftxui::box_helper::__anon28::ComputeShrinkHard	./FTXUI/src/ftxui/dom/box_helper.cpp	46;"	kind:function	namespace:ftxui::box_helper::__anon28	signature:(std::vector<Element>* elements, int extra_space, int size)
ftxui::canvas	./FTXUI/include/ftxui/dom/elements.hpp	91;"	kind:prototype	namespace:ftxui	signature:(ConstRef<Canvas>)
ftxui::canvas	./FTXUI/include/ftxui/dom/elements.hpp	92;"	kind:prototype	namespace:ftxui	signature:(int width, int height, std::function<void(Canvas&)>)
ftxui::canvas	./FTXUI/include/ftxui/dom/elements.hpp	93;"	kind:prototype	namespace:ftxui	signature:(std::function<void(Canvas&)>)
ftxui::canvas	./FTXUI/src/ftxui/dom/canvas.cpp	891;"	kind:function	namespace:ftxui	signature:(ConstRef<Canvas> canvas)
ftxui::canvas	./FTXUI/src/ftxui/dom/canvas.cpp	908;"	kind:function	namespace:ftxui	signature:(int width, int height, std::function<void(Canvas&)> fn)
ftxui::canvas	./FTXUI/src/ftxui/dom/canvas.cpp	938;"	kind:function	namespace:ftxui	signature:(std::function<void(Canvas&)> fn)
ftxui::center	./FTXUI/include/ftxui/dom/elements.hpp	187;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::center	./FTXUI/src/ftxui/dom/composite_decorator.cpp	31;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::clear_under	./FTXUI/include/ftxui/dom/elements.hpp	182;"	kind:prototype	namespace:ftxui	signature:(Element element)
ftxui::clear_under	./FTXUI/src/ftxui/dom/clear_under.cpp	38;"	kind:function	namespace:ftxui	signature:(Element element)
ftxui::color	./FTXUI/include/ftxui/dom/elements.hpp	104;"	kind:prototype	namespace:ftxui	signature:(Color)
ftxui::color	./FTXUI/include/ftxui/dom/elements.hpp	106;"	kind:prototype	namespace:ftxui	signature:(const LinearGradient&)
ftxui::color	./FTXUI/include/ftxui/dom/elements.hpp	108;"	kind:prototype	namespace:ftxui	signature:(Color, Element)
ftxui::color	./FTXUI/include/ftxui/dom/elements.hpp	110;"	kind:prototype	namespace:ftxui	signature:(const LinearGradient&, Element)
ftxui::color	./FTXUI/src/ftxui/dom/color.cpp	110;"	kind:function	namespace:ftxui	signature:(Color c)
ftxui::color	./FTXUI/src/ftxui/dom/color.cpp	81;"	kind:function	namespace:ftxui	signature:(Color color, Element child)
ftxui::color	./FTXUI/src/ftxui/dom/linear_gradient.cpp	251;"	kind:function	namespace:ftxui	signature:(const LinearGradient& gradient, Element child)
ftxui::color	./FTXUI/src/ftxui/dom/linear_gradient.cpp	282;"	kind:function	namespace:ftxui	signature:(const LinearGradient& gradient)
ftxui::dbox	./FTXUI/include/ftxui/dom/elements.hpp	127;"	kind:prototype	namespace:ftxui	signature:(Elements)
ftxui::dbox	./FTXUI/src/ftxui/dom/dbox.cpp	108;"	kind:function	namespace:ftxui	signature:(Elements children_)
ftxui::dim	./FTXUI/include/ftxui/dom/elements.hpp	97;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::dim	./FTXUI/src/ftxui/dom/dim.cpp	33;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::dimx_	./FTXUI/src/ftxui/screen/image.cpp	22;"	kind:prototype	namespace:ftxui	file:	signature:(dimx)
ftxui::dimy_	./FTXUI/src/ftxui/screen/image.cpp	23;"	kind:prototype	namespace:ftxui	file:	signature:(dimy)
ftxui::emptyElement	./FTXUI/include/ftxui/dom/elements.hpp	90;"	kind:prototype	namespace:ftxui	signature:()
ftxui::emptyElement	./FTXUI/src/ftxui/dom/util.cpp	140;"	kind:function	namespace:ftxui	signature:()
ftxui::empty_	./FTXUI/src/ftxui/dom/selection.cpp	45;"	kind:function	namespace:ftxui	signature:(false)
ftxui::empty_	./FTXUI/src/ftxui/dom/selection.cpp	63;"	kind:function	namespace:ftxui	signature:(false)
ftxui::filler	./FTXUI/include/ftxui/dom/elements.hpp	150;"	kind:prototype	namespace:ftxui	signature:()
ftxui::filler	./FTXUI/src/ftxui/dom/flex.cpp	98;"	kind:function	namespace:ftxui	signature:()
ftxui::flex	./FTXUI/include/ftxui/dom/elements.hpp	137;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::flex	./FTXUI/src/ftxui/dom/flex.cpp	123;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::flex_grow	./FTXUI/include/ftxui/dom/elements.hpp	138;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::flex_grow	./FTXUI/src/ftxui/dom/flex.cpp	141;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::flex_shrink	./FTXUI/include/ftxui/dom/elements.hpp	139;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::flex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	159;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::flexbox	./FTXUI/include/ftxui/dom/elements.hpp	128;"	kind:prototype	namespace:ftxui	signature:(Elements, FlexboxConfig config = FlexboxConfig())
ftxui::flexbox	./FTXUI/src/ftxui/dom/flexbox.cpp	251;"	kind:function	namespace:ftxui	signature:(Elements children, FlexboxConfig config)
ftxui::flexbox_helper::Block	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	13;"	kind:struct	namespace:ftxui::flexbox_helper
ftxui::flexbox_helper::Block::dim_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	27;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::dim_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	28;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::flex_grow_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	17;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::flex_grow_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	18;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::flex_shrink_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	19;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::flex_shrink_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	20;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::min_size_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	15;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::min_size_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	16;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::overflow	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	29;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	25;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Block::y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	26;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
ftxui::flexbox_helper::Compute	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	369;"	kind:function	namespace:ftxui::flexbox_helper	signature:(Global& global)
ftxui::flexbox_helper::Compute	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	49;"	kind:prototype	namespace:ftxui::flexbox_helper	signature:(Global& global)
ftxui::flexbox_helper::Global	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	41;"	kind:struct	namespace:ftxui::flexbox_helper
ftxui::flexbox_helper::Global::blocks	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	42;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
ftxui::flexbox_helper::Global::config	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	44;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
ftxui::flexbox_helper::Global::lines	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	43;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
ftxui::flexbox_helper::Global::size_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	45;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
ftxui::flexbox_helper::Global::size_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	46;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
ftxui::flexbox_helper::Line	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	33;"	kind:struct	namespace:ftxui::flexbox_helper
ftxui::flexbox_helper::Line::blocks	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	34;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
ftxui::flexbox_helper::Line::dim_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	37;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
ftxui::flexbox_helper::Line::dim_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	38;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
ftxui::flexbox_helper::Line::x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	35;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
ftxui::flexbox_helper::Line::y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	36;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
ftxui::flexbox_helper::__anon14::Compute1	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	309;"	kind:prototype	namespace:ftxui::flexbox_helper::__anon14	file:	signature:(Global& global)
ftxui::flexbox_helper::__anon14::Compute1	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	313;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& global)
ftxui::flexbox_helper::__anon14::Compute2	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	310;"	kind:prototype	namespace:ftxui::flexbox_helper::__anon14	file:	signature:(Global& global)
ftxui::flexbox_helper::__anon14::Compute2	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	323;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& global)
ftxui::flexbox_helper::__anon14::Compute3	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	311;"	kind:prototype	namespace:ftxui::flexbox_helper::__anon14	file:	signature:(Global& global)
ftxui::flexbox_helper::__anon14::Compute3	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	333;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& global)
ftxui::flexbox_helper::__anon14::JustifyContent	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	259;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
ftxui::flexbox_helper::__anon14::SetX	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	97;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& global)
ftxui::flexbox_helper::__anon14::SetY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	133;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
ftxui::flexbox_helper::__anon14::SymmetryX	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	35;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(FlexboxConfig& c)
ftxui::flexbox_helper::__anon14::SymmetryX	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	77;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
ftxui::flexbox_helper::__anon14::SymmetryXY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	17;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(FlexboxConfig& c)
ftxui::flexbox_helper::__anon14::SymmetryXY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	61;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
ftxui::flexbox_helper::__anon14::SymmetryY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	48;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(FlexboxConfig& c)
ftxui::flexbox_helper::__anon14::SymmetryY	./FTXUI/src/ftxui/dom/flexbox_helper.cpp	87;"	kind:function	namespace:ftxui::flexbox_helper::__anon14	signature:(Global& g)
ftxui::focus	./FTXUI/include/ftxui/dom/elements.hpp	164;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::focus	./FTXUI/src/ftxui/dom/frame.cpp	101;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::focusCursorBar	./FTXUI/include/ftxui/dom/elements.hpp	171;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::focusCursorBar	./FTXUI/src/ftxui/dom/frame.cpp	175;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::focusCursorBarBlinking	./FTXUI/include/ftxui/dom/elements.hpp	172;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::focusCursorBarBlinking	./FTXUI/src/ftxui/dom/frame.cpp	189;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::focusCursorBlock	./FTXUI/include/ftxui/dom/elements.hpp	169;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::focusCursorBlock	./FTXUI/src/ftxui/dom/frame.cpp	147;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::focusCursorBlockBlinking	./FTXUI/include/ftxui/dom/elements.hpp	170;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::focusCursorBlockBlinking	./FTXUI/src/ftxui/dom/frame.cpp	161;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::focusCursorUnderline	./FTXUI/include/ftxui/dom/elements.hpp	173;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::focusCursorUnderline	./FTXUI/src/ftxui/dom/frame.cpp	203;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::focusCursorUnderlineBlinking	./FTXUI/include/ftxui/dom/elements.hpp	174;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::focusCursorUnderlineBlinking	./FTXUI/src/ftxui/dom/frame.cpp	217;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::focusPosition	./FTXUI/include/ftxui/dom/elements.hpp	112;"	kind:prototype	namespace:ftxui	signature:(int x, int y)
ftxui::focusPosition	./FTXUI/src/ftxui/dom/focus.cpp	69;"	kind:function	namespace:ftxui	signature:(int x, int y)
ftxui::focusPositionRelative	./FTXUI/include/ftxui/dom/elements.hpp	113;"	kind:prototype	namespace:ftxui	signature:(float x, float y)
ftxui::focusPositionRelative	./FTXUI/src/ftxui/dom/focus.cpp	31;"	kind:function	namespace:ftxui	signature:(float x, float y)
ftxui::frame	./FTXUI/include/ftxui/dom/elements.hpp	161;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::frame	./FTXUI/src/ftxui/dom/frame.cpp	118;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::ftxui::ComponentBase::Active	./FTXUI/src/ftxui/component/component.cpp	207;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
ftxui::ftxui::ComponentBase::ActiveChild	./FTXUI/src/ftxui/component/component.cpp	183;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
ftxui::ftxui::ComponentBase::Add	./FTXUI/src/ftxui/component/component.cpp	75;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(Component child)
ftxui::ftxui::ComponentBase::CaptureMouse	./FTXUI/src/ftxui/component/component.cpp	250;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(const Event& event)
ftxui::ftxui::ComponentBase::ChildAt	./FTXUI/src/ftxui/component/component.cpp	45;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(size_t i)
ftxui::ftxui::ComponentBase::ChildCount	./FTXUI/src/ftxui/component/component.cpp	52;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
ftxui::ftxui::ComponentBase::Detach	./FTXUI/src/ftxui/component/component.cpp	85;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
ftxui::ftxui::ComponentBase::DetachAllChildren	./FTXUI/src/ftxui/component/component.cpp	101;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
ftxui::ftxui::ComponentBase::Focusable	./FTXUI/src/ftxui/component/component.cpp	196;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
ftxui::ftxui::ComponentBase::Focused	./FTXUI/src/ftxui/component/component.cpp	216;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
ftxui::ftxui::ComponentBase::Index	./FTXUI/src/ftxui/component/component.cpp	58;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
ftxui::ftxui::ComponentBase::OnAnimation	./FTXUI/src/ftxui/component/component.cpp	174;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(animation::Params& params)
ftxui::ftxui::ComponentBase::OnEvent	./FTXUI/src/ftxui/component/component.cpp	161;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(Event event)
ftxui::ftxui::ComponentBase::OnRender	./FTXUI/src/ftxui/component/component.cpp	147;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
ftxui::ftxui::ComponentBase::Parent	./FTXUI/src/ftxui/component/component.cpp	39;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:() const
ftxui::ftxui::ComponentBase::Render	./FTXUI/src/ftxui/component/component.cpp	111;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
ftxui::ftxui::ComponentBase::SetActiveChild	./FTXUI/src/ftxui/component/component.cpp	227;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:([[maybe_unused]] ComponentBase* child)
ftxui::ftxui::ComponentBase::SetActiveChild	./FTXUI/src/ftxui/component/component.cpp	232;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:(Component child)
ftxui::ftxui::ComponentBase::TakeFocus	./FTXUI/src/ftxui/component/component.cpp	238;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
ftxui::ftxui::ComponentBase::~ComponentBase	./FTXUI/src/ftxui/component/component.cpp	31;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
ftxui::ftxui::__anon47::CaptureMouseImpl	./FTXUI/src/ftxui/component/component.cpp	28;"	kind:class	namespace:ftxui::ftxui::__anon47	file:	inherits:CapturedMouseInterface
ftxui::g_uniformize	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	19;"	kind:member	namespace:ftxui	file:
ftxui::gauge	./FTXUI/include/ftxui/dom/elements.hpp	65;"	kind:prototype	namespace:ftxui	signature:(float progress)
ftxui::gauge	./FTXUI/src/ftxui/dom/gauge.cpp	293;"	kind:function	namespace:ftxui	signature:(float progress)
ftxui::gaugeDirection	./FTXUI/include/ftxui/dom/elements.hpp	70;"	kind:prototype	namespace:ftxui	signature:(float progress, Direction direction)
ftxui::gaugeDirection	./FTXUI/src/ftxui/dom/gauge.cpp	169;"	kind:function	namespace:ftxui	signature:(float progress, Direction direction)
ftxui::gaugeDown	./FTXUI/include/ftxui/dom/elements.hpp	69;"	kind:prototype	namespace:ftxui	signature:(float progress)
ftxui::gaugeDown	./FTXUI/src/ftxui/dom/gauge.cpp	271;"	kind:function	namespace:ftxui	signature:(float progress)
ftxui::gaugeLeft	./FTXUI/include/ftxui/dom/elements.hpp	66;"	kind:prototype	namespace:ftxui	signature:(float progress)
ftxui::gaugeLeft	./FTXUI/src/ftxui/dom/gauge.cpp	213;"	kind:function	namespace:ftxui	signature:(float progress)
ftxui::gaugeRight	./FTXUI/include/ftxui/dom/elements.hpp	67;"	kind:prototype	namespace:ftxui	signature:(float progress)
ftxui::gaugeRight	./FTXUI/src/ftxui/dom/gauge.cpp	191;"	kind:function	namespace:ftxui	signature:(float progress)
ftxui::gaugeUp	./FTXUI/include/ftxui/dom/elements.hpp	68;"	kind:prototype	namespace:ftxui	signature:(float progress)
ftxui::gaugeUp	./FTXUI/src/ftxui/dom/gauge.cpp	242;"	kind:function	namespace:ftxui	signature:(float progress)
ftxui::graph	./FTXUI/include/ftxui/dom/elements.hpp	89;"	kind:prototype	namespace:ftxui	signature:(GraphFunction)
ftxui::graph	./FTXUI/src/ftxui/dom/graph.cpp	71;"	kind:function	namespace:ftxui	signature:(GraphFunction graph_function)
ftxui::gridbox	./FTXUI/include/ftxui/dom/elements.hpp	129;"	kind:prototype	namespace:ftxui	signature:(std::vector<Elements> lines)
ftxui::gridbox	./FTXUI/src/ftxui/dom/gridbox.cpp	173;"	kind:function	namespace:ftxui	signature:(std::vector<Elements> lines)
ftxui::hbox	./FTXUI/include/ftxui/dom/elements.hpp	125;"	kind:prototype	namespace:ftxui	signature:(Elements)
ftxui::hbox	./FTXUI/src/ftxui/dom/hbox.cpp	94;"	kind:function	namespace:ftxui	signature:(Elements children)
ftxui::hcenter	./FTXUI/include/ftxui/dom/elements.hpp	185;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::hcenter	./FTXUI/src/ftxui/dom/composite_decorator.cpp	15;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::hflow	./FTXUI/include/ftxui/dom/elements.hpp	131;"	kind:prototype	namespace:ftxui	signature:(Elements)
ftxui::hflow	./FTXUI/src/ftxui/dom/flexbox.cpp	269;"	kind:function	namespace:ftxui	signature:(Elements children)
ftxui::hscroll_indicator	./FTXUI/include/ftxui/dom/elements.hpp	178;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::hscroll_indicator	./FTXUI/src/ftxui/dom/scroll_indicator.cpp	76;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::hyperlink	./FTXUI/include/ftxui/dom/elements.hpp	115;"	kind:prototype	namespace:ftxui	signature:(std::string link)
ftxui::hyperlink	./FTXUI/include/ftxui/dom/elements.hpp	116;"	kind:prototype	namespace:ftxui	signature:(std::string link, Element child)
ftxui::hyperlink	./FTXUI/src/ftxui/dom/hyperlink.cpp	51;"	kind:function	namespace:ftxui	signature:(std::string link, Element child)
ftxui::hyperlink	./FTXUI/src/ftxui/dom/hyperlink.cpp	70;"	kind:function	namespace:ftxui	signature:(std::string link)
ftxui::inverted	./FTXUI/include/ftxui/dom/elements.hpp	99;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::inverted	./FTXUI/src/ftxui/dom/inverted.cpp	34;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::italic	./FTXUI/include/ftxui/dom/elements.hpp	98;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::italic	./FTXUI/src/ftxui/dom/italic.cpp	17;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::literals::_rgb	./FTXUI/include/ftxui/screen/color.hpp	339;"	kind:prototype	namespace:ftxui::literals	signature:(unsigned long long int combined)
ftxui::literals::_rgb	./FTXUI/src/ftxui/screen/color.cpp	289;"	kind:function	namespace:ftxui::literals	signature:(unsigned long long int combined)
ftxui::notflex	./FTXUI/include/ftxui/dom/elements.hpp	149;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::notflex	./FTXUI/src/ftxui/dom/flex.cpp	177;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::nothing	./FTXUI/include/ftxui/dom/elements.hpp	189;"	kind:prototype	namespace:ftxui	signature:(Element element)
ftxui::nothing	./FTXUI/src/ftxui/dom/util.cpp	28;"	kind:function	namespace:ftxui	signature:(Element element)
ftxui::operator |	./FTXUI/include/ftxui/component/component.hpp	34;"	kind:prototype	namespace:ftxui	signature:(Component component, ElementDecorator decorator)
ftxui::operator |	./FTXUI/include/ftxui/dom/elements.hpp	40;"	kind:prototype	namespace:ftxui	signature:(Element, Decorator)
ftxui::operator |	./FTXUI/include/ftxui/dom/elements.hpp	42;"	kind:prototype	namespace:ftxui	signature:(Elements, Decorator)
ftxui::operator |	./FTXUI/include/ftxui/dom/elements.hpp	43;"	kind:prototype	namespace:ftxui	signature:(Decorator, Decorator)
ftxui::operator |	./FTXUI/src/ftxui/component/util.cpp	12;"	kind:function	namespace:ftxui	signature:(Component component, ComponentDecorator decorator)
ftxui::operator |	./FTXUI/src/ftxui/component/util.cpp	17;"	kind:function	namespace:ftxui	signature:(Component component, ElementDecorator decorator)
ftxui::operator |	./FTXUI/src/ftxui/dom/util.cpp	40;"	kind:function	namespace:ftxui	signature:(Decorator a, Decorator b)
ftxui::operator |	./FTXUI/src/ftxui/dom/util.cpp	48;"	kind:function	namespace:ftxui	signature:(Elements elements, Decorator decorator)
ftxui::operator |	./FTXUI/src/ftxui/dom/util.cpp	70;"	kind:function	namespace:ftxui	signature:(Element element, Decorator decorator)
ftxui::operator |=	./FTXUI/include/ftxui/component/component.hpp	35;"	kind:prototype	namespace:ftxui	signature:(Component& component, ComponentDecorator decorator)
ftxui::operator |=	./FTXUI/include/ftxui/component/component.hpp	36;"	kind:prototype	namespace:ftxui	signature:(Component& component, ElementDecorator decorator)
ftxui::operator |=	./FTXUI/include/ftxui/dom/elements.hpp	41;"	kind:prototype	namespace:ftxui	signature:(Element&, Decorator)
ftxui::operator |=	./FTXUI/src/ftxui/component/util.cpp	22;"	kind:function	namespace:ftxui	signature:(Component& component, ComponentDecorator decorator)
ftxui::operator |=	./FTXUI/src/ftxui/component/util.cpp	28;"	kind:function	namespace:ftxui	signature:(Component& component, ElementDecorator decorator)
ftxui::operator |=	./FTXUI/src/ftxui/dom/util.cpp	85;"	kind:function	namespace:ftxui	signature:(Element& e, Decorator d)
ftxui::palette256	./FTXUI/src/ftxui/screen/color_info.cpp	13;"	kind:member	namespace:ftxui	file:
ftxui::paragraph	./FTXUI/include/ftxui/dom/deprecated.hpp	13;"	kind:prototype	namespace:ftxui	signature:(std::wstring text)
ftxui::paragraph	./FTXUI/include/ftxui/dom/elements.hpp	84;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
ftxui::paragraph	./FTXUI/src/ftxui/dom/paragraph.cpp	41;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
ftxui::paragraphAlignCenter	./FTXUI/include/ftxui/dom/elements.hpp	87;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
ftxui::paragraphAlignCenter	./FTXUI/src/ftxui/dom/paragraph.cpp	72;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
ftxui::paragraphAlignJustify	./FTXUI/include/ftxui/dom/elements.hpp	88;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
ftxui::paragraphAlignJustify	./FTXUI/src/ftxui/dom/paragraph.cpp	85;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
ftxui::paragraphAlignLeft	./FTXUI/include/ftxui/dom/elements.hpp	85;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
ftxui::paragraphAlignLeft	./FTXUI/src/ftxui/dom/paragraph.cpp	49;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
ftxui::paragraphAlignRight	./FTXUI/include/ftxui/dom/elements.hpp	86;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
ftxui::paragraphAlignRight	./FTXUI/src/ftxui/dom/paragraph.cpp	60;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
ftxui::parent_	./FTXUI/src/ftxui/dom/selection.cpp	62;"	kind:prototype	namespace:ftxui	file:	signature:(parent)
ftxui::pixels_	./FTXUI/src/ftxui/screen/image.cpp	24;"	kind:function	namespace:ftxui	signature:(dimy, std::vector<Pixel>(dimx))
ftxui::reflect	./FTXUI/include/ftxui/dom/elements.hpp	179;"	kind:prototype	namespace:ftxui	signature:(Box& box)
ftxui::reflect	./FTXUI/src/ftxui/dom/reflect.cpp	43;"	kind:function	namespace:ftxui	signature:(Box& box)
ftxui::select	./FTXUI/include/ftxui/dom/elements.hpp	165;"	kind:prototype	namespace:ftxui	signature:(Element e)
ftxui::select	./FTXUI/src/ftxui/dom/frame.cpp	108;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::selectionBackgroundColor	./FTXUI/include/ftxui/dom/elements.hpp	119;"	kind:prototype	namespace:ftxui	signature:(Color foreground)
ftxui::selectionBackgroundColor	./FTXUI/src/ftxui/dom/selection_style.cpp	61;"	kind:function	namespace:ftxui	signature:(Color foreground)
ftxui::selectionColor	./FTXUI/include/ftxui/dom/elements.hpp	118;"	kind:prototype	namespace:ftxui	signature:(Color foreground)
ftxui::selectionColor	./FTXUI/src/ftxui/dom/selection_style.cpp	78;"	kind:function	namespace:ftxui	signature:(Color foreground)
ftxui::selectionForegroundColor	./FTXUI/include/ftxui/dom/elements.hpp	120;"	kind:prototype	namespace:ftxui	signature:(Color foreground)
ftxui::selectionForegroundColor	./FTXUI/src/ftxui/dom/selection_style.cpp	69;"	kind:function	namespace:ftxui	signature:(Color foreground)
ftxui::selectionStyle	./FTXUI/include/ftxui/dom/elements.hpp	121;"	kind:prototype	namespace:ftxui	signature:(std::function<void(Pixel&)> style)
ftxui::selectionStyle	./FTXUI/src/ftxui/dom/selection_style.cpp	86;"	kind:function	namespace:ftxui	signature:(std::function<void(Pixel&)> style)
ftxui::selectionStyleReset	./FTXUI/include/ftxui/dom/elements.hpp	117;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::selectionStyleReset	./FTXUI/src/ftxui/dom/selection_style.cpp	55;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::separator	./FTXUI/include/ftxui/dom/elements.hpp	48;"	kind:prototype	namespace:ftxui	signature:()
ftxui::separator	./FTXUI/include/ftxui/dom/elements.hpp	55;"	kind:prototype	namespace:ftxui	signature:(Pixel)
ftxui::separator	./FTXUI/src/ftxui/dom/separator.cpp	134;"	kind:function	namespace:ftxui	signature:()
ftxui::separator	./FTXUI/src/ftxui/dom/separator.cpp	426;"	kind:function	namespace:ftxui	signature:(Pixel pixel)
ftxui::separatorCharacter	./FTXUI/include/ftxui/dom/elements.hpp	56;"	kind:prototype	namespace:ftxui	signature:(std::string)
ftxui::separatorCharacter	./FTXUI/src/ftxui/dom/separator.cpp	395;"	kind:function	namespace:ftxui	signature:(std::string value)
ftxui::separatorDashed	./FTXUI/include/ftxui/dom/elements.hpp	50;"	kind:prototype	namespace:ftxui	signature:()
ftxui::separatorDashed	./FTXUI/src/ftxui/dom/separator.cpp	246;"	kind:function	namespace:ftxui	signature:()
ftxui::separatorDouble	./FTXUI/include/ftxui/dom/elements.hpp	52;"	kind:prototype	namespace:ftxui	signature:()
ftxui::separatorDouble	./FTXUI/src/ftxui/dom/separator.cpp	320;"	kind:function	namespace:ftxui	signature:()
ftxui::separatorEmpty	./FTXUI/include/ftxui/dom/elements.hpp	53;"	kind:prototype	namespace:ftxui	signature:()
ftxui::separatorEmpty	./FTXUI/src/ftxui/dom/separator.cpp	357;"	kind:function	namespace:ftxui	signature:()
ftxui::separatorHSelector	./FTXUI/include/ftxui/dom/elements.hpp	57;"	kind:prototype	namespace:ftxui	signature:(float left, float right, Color unselected_color, Color selected_color)
ftxui::separatorHSelector	./FTXUI/src/ftxui/dom/separator.cpp	442;"	kind:function	namespace:ftxui	signature:(float left, float right, Color unselected_color, Color selected_color)
ftxui::separatorHeavy	./FTXUI/include/ftxui/dom/elements.hpp	51;"	kind:prototype	namespace:ftxui	signature:()
ftxui::separatorHeavy	./FTXUI/src/ftxui/dom/separator.cpp	283;"	kind:function	namespace:ftxui	signature:()
ftxui::separatorLight	./FTXUI/include/ftxui/dom/elements.hpp	49;"	kind:prototype	namespace:ftxui	signature:()
ftxui::separatorLight	./FTXUI/src/ftxui/dom/separator.cpp	209;"	kind:function	namespace:ftxui	signature:()
ftxui::separatorStyled	./FTXUI/include/ftxui/dom/elements.hpp	54;"	kind:prototype	namespace:ftxui	signature:(BorderStyle)
ftxui::separatorStyled	./FTXUI/src/ftxui/dom/separator.cpp	172;"	kind:function	namespace:ftxui	signature:(BorderStyle style)
ftxui::separatorVSelector	./FTXUI/include/ftxui/dom/elements.hpp	61;"	kind:prototype	namespace:ftxui	signature:(float up, float down, Color unselected_color, Color selected_color)
ftxui::separatorVSelector	./FTXUI/src/ftxui/dom/separator.cpp	512;"	kind:function	namespace:ftxui	signature:(float up, float down, Color unselected_color, Color selected_color)
ftxui::size	./FTXUI/include/ftxui/dom/elements.hpp	155;"	kind:prototype	namespace:ftxui	signature:(WidthOrHeight, Constraint, int value)
ftxui::size	./FTXUI/src/ftxui/dom/size.cpp	89;"	kind:function	namespace:ftxui	signature:(WidthOrHeight direction, Constraint constraint, int value)
ftxui::spinner	./FTXUI/include/ftxui/dom/elements.hpp	83;"	kind:prototype	namespace:ftxui	signature:(int charset_index, size_t image_index)
ftxui::spinner	./FTXUI/src/ftxui/dom/spinner.cpp	282;"	kind:function	namespace:ftxui	signature:(int charset_index, size_t image_index)
ftxui::strikethrough	./FTXUI/include/ftxui/dom/elements.hpp	103;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::strikethrough	./FTXUI/src/ftxui/dom/strikethrough.cpp	17;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::string_width	./FTXUI/include/ftxui/screen/string.hpp	19;"	kind:prototype	namespace:ftxui	signature:(const std::string&)
ftxui::string_width	./FTXUI/src/ftxui/screen/string.cpp	1330;"	kind:function	namespace:ftxui	signature:(const std::string& input)
ftxui::text	./FTXUI/include/ftxui/dom/deprecated.hpp	11;"	kind:prototype	namespace:ftxui	signature:(std::wstring text)
ftxui::text	./FTXUI/include/ftxui/dom/elements.hpp	46;"	kind:prototype	namespace:ftxui	signature:(std::string text)
ftxui::text	./FTXUI/src/ftxui/dom/text.cpp	141;"	kind:function	namespace:ftxui	signature:(std::string text)
ftxui::text	./FTXUI/src/ftxui/dom/text.cpp	160;"	kind:function	namespace:ftxui	signature:(std::wstring text)
ftxui::to_string	./FTXUI/include/ftxui/screen/string.hpp	11;"	kind:prototype	namespace:ftxui	signature:(const std::wstring& s)
ftxui::to_string	./FTXUI/src/ftxui/screen/string.cpp	1565;"	kind:function	namespace:ftxui	signature:(const std::wstring& s)
ftxui::to_wstring	./FTXUI/include/ftxui/screen/string.hpp	12;"	kind:prototype	namespace:ftxui	signature:(const std::string& s)
ftxui::to_wstring	./FTXUI/include/ftxui/screen/string.hpp	15;"	kind:function	namespace:ftxui	signature:(T s)
ftxui::underlined	./FTXUI/include/ftxui/dom/elements.hpp	100;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::underlined	./FTXUI/src/ftxui/dom/underlined.cpp	33;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::underlinedDouble	./FTXUI/include/ftxui/dom/elements.hpp	101;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::underlinedDouble	./FTXUI/src/ftxui/dom/underlined_double.cpp	17;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::unpack	./FTXUI/include/ftxui/dom/take_any_args.hpp	29;"	kind:function	namespace:ftxui	signature:(Args.... args)
ftxui::util::clamp	./FTXUI/src/ftxui/screen/util.hpp	11;"	kind:function	namespace:ftxui::util	signature:(const T& v, const T& lo, const T& hi)
ftxui::vbox	./FTXUI/include/ftxui/dom/elements.hpp	126;"	kind:prototype	namespace:ftxui	signature:(Elements)
ftxui::vbox	./FTXUI/src/ftxui/dom/vbox.cpp	96;"	kind:function	namespace:ftxui	signature:(Elements children)
ftxui::vcenter	./FTXUI/include/ftxui/dom/elements.hpp	186;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::vcenter	./FTXUI/src/ftxui/dom/composite_decorator.cpp	23;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::vflow	./FTXUI/include/ftxui/dom/elements.hpp	132;"	kind:prototype	namespace:ftxui	signature:(Elements)
ftxui::vflow	./FTXUI/src/ftxui/dom/flexbox.cpp	289;"	kind:function	namespace:ftxui	signature:(Elements children)
ftxui::vscroll_indicator	./FTXUI/include/ftxui/dom/elements.hpp	177;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::vscroll_indicator	./FTXUI/src/ftxui/dom/scroll_indicator.cpp	21;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::vtext	./FTXUI/include/ftxui/dom/deprecated.hpp	12;"	kind:prototype	namespace:ftxui	signature:(std::wstring text)
ftxui::vtext	./FTXUI/include/ftxui/dom/elements.hpp	47;"	kind:prototype	namespace:ftxui	signature:(std::string text)
ftxui::vtext	./FTXUI/src/ftxui/dom/text.cpp	190;"	kind:function	namespace:ftxui	signature:(std::string text)
ftxui::vtext	./FTXUI/src/ftxui/dom/text.cpp	220;"	kind:function	namespace:ftxui	signature:(std::wstring text)
ftxui::wchar_width	./FTXUI/include/ftxui/screen/deprecated.hpp	10;"	kind:prototype	namespace:ftxui	signature:(wchar_t)
ftxui::wchar_width	./FTXUI/src/ftxui/screen/string.cpp	1313;"	kind:function	namespace:ftxui	signature:(wchar_t ucs)
ftxui::window	./FTXUI/include/ftxui/dom/elements.hpp	82;"	kind:prototype	namespace:ftxui	signature:(Element title, Element content, BorderStyle border = ROUNDED)
ftxui::window	./FTXUI/src/ftxui/dom/border.cpp	507;"	kind:function	namespace:ftxui	signature:(Element title, Element content, BorderStyle border)
ftxui::wstring_width	./FTXUI/include/ftxui/screen/deprecated.hpp	11;"	kind:prototype	namespace:ftxui	signature:(const std::wstring&)
ftxui::wstring_width	./FTXUI/src/ftxui/screen/string.cpp	1317;"	kind:function	namespace:ftxui	signature:(const std::wstring& text)
ftxui::xflex	./FTXUI/include/ftxui/dom/elements.hpp	141;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::xflex	./FTXUI/src/ftxui/dom/flex.cpp	129;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::xflex_grow	./FTXUI/include/ftxui/dom/elements.hpp	142;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::xflex_grow	./FTXUI/src/ftxui/dom/flex.cpp	147;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::xflex_shrink	./FTXUI/include/ftxui/dom/elements.hpp	143;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::xflex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	165;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::xframe	./FTXUI/include/ftxui/dom/elements.hpp	162;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::xframe	./FTXUI/src/ftxui/dom/frame.cpp	126;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::yflex	./FTXUI/include/ftxui/dom/elements.hpp	145;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::yflex	./FTXUI/src/ftxui/dom/flex.cpp	135;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::yflex_grow	./FTXUI/include/ftxui/dom/elements.hpp	146;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::yflex_grow	./FTXUI/src/ftxui/dom/flex.cpp	153;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::yflex_shrink	./FTXUI/include/ftxui/dom/elements.hpp	147;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::yflex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	171;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui::yframe	./FTXUI/include/ftxui/dom/elements.hpp	163;"	kind:prototype	namespace:ftxui	signature:(Element)
ftxui::yframe	./FTXUI/src/ftxui/dom/frame.cpp	134;"	kind:function	namespace:ftxui	signature:(Element child)
ftxui_on_resize	./FTXUI/src/ftxui/component/screen_interactive.cpp	154;"	kind:function	signature:(int columns, int rows)
function	./FTXUI/include/ftxui/component/component_options.hpp	67;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
function_flex	./FTXUI/src/ftxui/dom/flex.cpp	44;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
function_flex_grow	./FTXUI/src/ftxui/dom/flex.cpp	18;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
function_flex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	31;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
function_not_flex	./FTXUI/src/ftxui/dom/flex.cpp	61;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
function_xflex	./FTXUI/src/ftxui/dom/flex.cpp	51;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
function_xflex_grow	./FTXUI/src/ftxui/dom/flex.cpp	23;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
function_xflex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	36;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
function_yflex	./FTXUI/src/ftxui/dom/flex.cpp	56;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
function_yflex_grow	./FTXUI/src/ftxui/dom/flex.cpp	27;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
function_yflex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	40;"	kind:function	namespace:ftxui::__anon13	signature:(Requirement& r)
g	./FTXUI/include/ftxui/component/event.hpp	73;"	kind:member	struct:ftxui::Event	access:public
g	./FTXUI/src/ftxui/component/event.cpp	335;"	kind:member	class:ftxui::Event	file:
g_active_screen	./FTXUI/src/ftxui/component/screen_interactive.cpp	73;"	kind:member	namespace:ftxui::__anon48	file:
g_bool	./FTXUI/src/ftxui/component/component_fuzzer.cpp	106;"	kind:member	namespace:__anon56	file:
g_cached	./FTXUI/src/ftxui/screen/terminal.cpp	26;"	kind:member	namespace:ftxui::__anon66	file:
g_cached_supported_color	./FTXUI/src/ftxui/screen/terminal.cpp	27;"	kind:member	namespace:ftxui::__anon66	file:
g_full_width_characters	./FTXUI/src/ftxui/screen/string.cpp	32;"	kind:member	namespace:__anon64	file:
g_int	./FTXUI/src/ftxui/component/component_fuzzer.cpp	107;"	kind:member	namespace:__anon56	file:
g_list	./FTXUI/src/ftxui/component/component_fuzzer.cpp	108;"	kind:member	namespace:__anon56	file:
g_map_block	./FTXUI/src/ftxui/dom/canvas.cpp	70;"	kind:member	namespace:ftxui::__anon34	file:
g_map_block_inversed	./FTXUI/src/ftxui/dom/canvas.cpp	76;"	kind:member	namespace:ftxui::__anon34	file:
g_map_braille	./FTXUI/src/ftxui/dom/canvas.cpp	54;"	kind:member	namespace:ftxui::__anon34	file:
g_signal_exit_count	./FTXUI/src/ftxui/component/screen_interactive.cpp	202;"	kind:member	namespace:ftxui::__anon48	file:
g_signal_resize_count	./FTXUI/src/ftxui/component/screen_interactive.cpp	205;"	kind:member	namespace:ftxui::__anon48	file:
g_signal_stop_count	./FTXUI/src/ftxui/component/screen_interactive.cpp	204;"	kind:member	namespace:ftxui::__anon48	file:
g_uniformize	./FTXUI/src/ftxui/component/terminal_input_parser.cpp	19;"	kind:member	namespace:ftxui	file:
g_word_break_intervals	./FTXUI/src/ftxui/screen/string.cpp	83;"	kind:member	namespace:__anon64	file:
gap_x	./FTXUI/include/ftxui/dom/flexbox_config.hpp	95;"	kind:member	struct:ftxui::FlexboxConfig	access:public
gap_y	./FTXUI/include/ftxui/dom/flexbox_config.hpp	96;"	kind:member	struct:ftxui::FlexboxConfig	access:public
gauge	./FTXUI/include/ftxui/dom/elements.hpp	65;"	kind:prototype	namespace:ftxui	signature:(float progress)
gauge	./FTXUI/src/ftxui/dom/gauge.cpp	293;"	kind:function	namespace:ftxui	signature:(float progress)
gaugeDirection	./FTXUI/include/ftxui/dom/elements.hpp	70;"	kind:prototype	namespace:ftxui	signature:(float progress, Direction direction)
gaugeDirection	./FTXUI/src/ftxui/dom/gauge.cpp	169;"	kind:function	namespace:ftxui	signature:(float progress, Direction direction)
gaugeDown	./FTXUI/include/ftxui/dom/elements.hpp	69;"	kind:prototype	namespace:ftxui	signature:(float progress)
gaugeDown	./FTXUI/src/ftxui/dom/gauge.cpp	271;"	kind:function	namespace:ftxui	signature:(float progress)
gaugeLeft	./FTXUI/include/ftxui/dom/elements.hpp	66;"	kind:prototype	namespace:ftxui	signature:(float progress)
gaugeLeft	./FTXUI/src/ftxui/dom/gauge.cpp	213;"	kind:function	namespace:ftxui	signature:(float progress)
gaugeRight	./FTXUI/include/ftxui/dom/elements.hpp	67;"	kind:prototype	namespace:ftxui	signature:(float progress)
gaugeRight	./FTXUI/src/ftxui/dom/gauge.cpp	191;"	kind:function	namespace:ftxui	signature:(float progress)
gaugeUp	./FTXUI/include/ftxui/dom/elements.hpp	68;"	kind:prototype	namespace:ftxui	signature:(float progress)
gaugeUp	./FTXUI/src/ftxui/dom/gauge.cpp	242;"	kind:function	namespace:ftxui	signature:(float progress)
gauge_box_	./FTXUI/src/ftxui/component/slider.cpp	208;"	kind:member	class:ftxui::__anon50::SliderBase	file:	access:private
global_	./FTXUI/src/ftxui/dom/flexbox.cpp	226;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
gradient_	./FTXUI/src/ftxui/dom/linear_gradient.cpp	175;"	kind:member	class:ftxui::__anon17::LinearGradientColor	file:	access:private
graph	./FTXUI/include/ftxui/dom/elements.hpp	89;"	kind:prototype	namespace:ftxui	signature:(GraphFunction)
graph	./FTXUI/src/ftxui/dom/graph.cpp	71;"	kind:function	namespace:ftxui	signature:(GraphFunction graph_function)
graph_function_	./FTXUI/src/ftxui/dom/graph.cpp	64;"	kind:member	class:ftxui::__anon25::Graph	file:	access:private
green	./FTXUI/include/ftxui/screen/color_info.hpp	17;"	kind:member	struct:ftxui::ColorInfo	access:public
green_	./FTXUI/include/ftxui/screen/color.hpp	330;"	kind:member	class:ftxui::Color	access:private
gridbox	./FTXUI/include/ftxui/dom/elements.hpp	129;"	kind:prototype	namespace:ftxui	signature:(std::vector<Elements> lines)
gridbox	./FTXUI/src/ftxui/dom/gridbox.cpp	173;"	kind:function	namespace:ftxui	signature:(std::vector<Elements> lines)
h	./FTXUI/include/ftxui/component/event.hpp	74;"	kind:member	struct:ftxui::Event	access:public
h	./FTXUI/src/ftxui/component/event.cpp	336;"	kind:member	class:ftxui::Event	file:
has_selection	./FTXUI/src/ftxui/dom/text.cpp	89;"	kind:member	class:ftxui::__anon21::Text	file:	access:private
hbox	./FTXUI/include/ftxui/dom/elements.hpp	125;"	kind:prototype	namespace:ftxui	signature:(Elements)
hbox	./FTXUI/src/ftxui/dom/hbox.cpp	94;"	kind:function	namespace:ftxui	signature:(Elements children)
hcenter	./FTXUI/include/ftxui/dom/elements.hpp	185;"	kind:prototype	namespace:ftxui	signature:(Element)
hcenter	./FTXUI/src/ftxui/dom/composite_decorator.cpp	15;"	kind:function	namespace:ftxui	signature:(Element child)
height	./FTXUI/include/ftxui/component/component_options.hpp	256;"	kind:member	struct:ftxui::WindowOptions	access:public
height	./FTXUI/include/ftxui/dom/canvas.hpp	30;"	kind:function	struct:ftxui::Canvas	access:public	signature:() const
height_	./FTXUI/include/ftxui/dom/canvas.hpp	141;"	kind:member	struct:ftxui::Canvas	access:private
hflow	./FTXUI/include/ftxui/dom/elements.hpp	131;"	kind:prototype	namespace:ftxui	signature:(Elements)
hflow	./FTXUI/src/ftxui/dom/flexbox.cpp	269;"	kind:function	namespace:ftxui	signature:(Elements children)
hover_down	./FTXUI/include/ftxui/component/component_options.hpp	244;"	kind:member	struct:ftxui::WindowRenderState	access:public
hover_left	./FTXUI/include/ftxui/component/component_options.hpp	241;"	kind:member	struct:ftxui::WindowRenderState	access:public
hover_right	./FTXUI/include/ftxui/component/component_options.hpp	242;"	kind:member	struct:ftxui::WindowRenderState	access:public
hover_top	./FTXUI/include/ftxui/component/component_options.hpp	243;"	kind:member	struct:ftxui::WindowRenderState	access:public
hovered	./FTXUI/include/ftxui/component/component_options.hpp	154;"	kind:member	struct:ftxui::InputState	access:public
hovered_	./FTXUI/src/ftxui/component/checkbox.cpp	81;"	kind:member	class:ftxui::__anon57::CheckboxBase	file:	access:private
hovered_	./FTXUI/src/ftxui/component/input.cpp	540;"	kind:member	class:ftxui::__anon58::InputBase	file:	access:private
hovered_	./FTXUI/src/ftxui/component/radiobox.cpp	167;"	kind:member	class:ftxui::__anon55::RadioboxBase	file:	access:private
hscroll_indicator	./FTXUI/include/ftxui/dom/elements.hpp	178;"	kind:prototype	namespace:ftxui	signature:(Element)
hscroll_indicator	./FTXUI/src/ftxui/dom/scroll_indicator.cpp	76;"	kind:function	namespace:ftxui	signature:(Element child)
hue	./FTXUI/include/ftxui/screen/color_info.hpp	19;"	kind:member	struct:ftxui::ColorInfo	access:public
hyperlink	./FTXUI/include/ftxui/dom/elements.hpp	115;"	kind:prototype	namespace:ftxui	signature:(std::string link)
hyperlink	./FTXUI/include/ftxui/dom/elements.hpp	116;"	kind:prototype	namespace:ftxui	signature:(std::string link, Element child)
hyperlink	./FTXUI/include/ftxui/screen/pixel.hpp	41;"	kind:member	struct:ftxui::Pixel	access:public
hyperlink	./FTXUI/src/ftxui/dom/hyperlink.cpp	51;"	kind:function	namespace:ftxui	signature:(std::string link, Element child)
hyperlink	./FTXUI/src/ftxui/dom/hyperlink.cpp	70;"	kind:function	namespace:ftxui	signature:(std::string link)
hyperlinks_	./FTXUI/include/ftxui/screen/screen.hpp	78;"	kind:member	class:ftxui::Screen	access:protected
i	./FTXUI/include/ftxui/component/event.hpp	75;"	kind:member	struct:ftxui::Event	access:public
i	./FTXUI/src/ftxui/component/event.cpp	337;"	kind:member	class:ftxui::Event	file:
in_render	./FTXUI/include/ftxui/component/component_base.hpp	100;"	kind:member	class:ftxui::ComponentBase	access:private
inactive	./FTXUI/include/ftxui/component/component_options.hpp	64;"	kind:member	struct:ftxui::AnimatedColorOption	access:public
increment	./FTXUI/include/ftxui/component/component_options.hpp	227;"	kind:member	struct:ftxui::SliderOption	access:public
index	./FTXUI/include/ftxui/component/component_options.hpp	28;"	kind:member	struct:ftxui::EntryState	access:public
index_	./FTXUI/include/ftxui/util/ref.hpp	195;"	kind:member	struct:ftxui::ConstStringListRef::IndexedGetter	access:public
index_16	./FTXUI/include/ftxui/screen/color_info.hpp	15;"	kind:member	struct:ftxui::ColorInfo	access:public
index_256	./FTXUI/include/ftxui/screen/color_info.hpp	14;"	kind:member	struct:ftxui::ColorInfo	access:public
inner	./FTXUI/include/ftxui/component/component_options.hpp	236;"	kind:member	struct:ftxui::WindowRenderState	access:public
inner	./FTXUI/include/ftxui/component/component_options.hpp	250;"	kind:member	struct:ftxui::WindowOptions	access:public
input	./FTXUI/include/ftxui/component/event.hpp	102;"	kind:function	struct:ftxui::Event	access:public	signature:() const
input_	./FTXUI/include/ftxui/component/event.hpp	147;"	kind:member	struct:ftxui::Event	access:private
input_dim_x_	./FTXUI/include/ftxui/dom/table.hpp	58;"	kind:member	class:ftxui::Table	access:private
input_dim_y_	./FTXUI/include/ftxui/dom/table.hpp	59;"	kind:member	class:ftxui::Table	access:private
insert	./FTXUI/include/ftxui/component/component_options.hpp	180;"	kind:member	struct:ftxui::InputOption	access:public
inverted	./FTXUI/include/ftxui/dom/elements.hpp	99;"	kind:prototype	namespace:ftxui	signature:(Element)
inverted	./FTXUI/include/ftxui/screen/pixel.hpp	32;"	kind:member	struct:ftxui::Pixel	access:public
inverted	./FTXUI/src/ftxui/dom/inverted.cpp	34;"	kind:function	namespace:ftxui	signature:(Element child)
is_character	./FTXUI/include/ftxui/component/event.hpp	104;"	kind:function	struct:ftxui::Event	access:public	signature:() const
is_cursor_position	./FTXUI/include/ftxui/component/event.hpp	111;"	kind:function	struct:ftxui::Event	access:public	signature:() const
is_cursor_shape	./FTXUI/include/ftxui/component/event.hpp	115;"	kind:function	struct:ftxui::Event	access:public	signature:() const
is_mouse	./FTXUI/include/ftxui/component/event.hpp	107;"	kind:function	struct:ftxui::Event	access:public	signature:() const
is_placeholder	./FTXUI/include/ftxui/component/component_options.hpp	156;"	kind:member	struct:ftxui::InputState	access:public
italic	./FTXUI/include/ftxui/dom/elements.hpp	98;"	kind:prototype	namespace:ftxui	signature:(Element)
italic	./FTXUI/include/ftxui/screen/pixel.hpp	31;"	kind:member	struct:ftxui::Pixel	access:public
italic	./FTXUI/src/ftxui/dom/italic.cpp	17;"	kind:function	namespace:ftxui	signature:(Element child)
iteration	./FTXUI/include/ftxui/dom/node.hpp	57;"	kind:member	struct:ftxui::Node::Status	access:public
j	./FTXUI/include/ftxui/component/event.hpp	76;"	kind:member	struct:ftxui::Event	access:public
j	./FTXUI/src/ftxui/component/event.cpp	338;"	kind:member	class:ftxui::Event	file:
justify_content	./FTXUI/include/ftxui/dom/flexbox_config.hpp	66;"	kind:member	struct:ftxui::FlexboxConfig	access:public
k	./FTXUI/include/ftxui/component/event.hpp	77;"	kind:member	struct:ftxui::Event	access:public
k	./FTXUI/src/ftxui/component/event.cpp	339;"	kind:member	class:ftxui::Event	file:
kAlternateScreen	./FTXUI/src/ftxui/component/screen_interactive.cpp	288;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kBlock	./FTXUI/include/ftxui/dom/canvas.hpp	116;"	kind:enumerator	enum:ftxui::Canvas::CellType
kBraille	./FTXUI/include/ftxui/dom/canvas.hpp	117;"	kind:enumerator	enum:ftxui::Canvas::CellType
kCell	./FTXUI/include/ftxui/dom/canvas.hpp	115;"	kind:enumerator	enum:ftxui::Canvas::CellType
kCursor	./FTXUI/src/ftxui/component/screen_interactive.cpp	275;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kCursor	./FTXUI/src/ftxui/component/screen_interactive.cpp	293;"	kind:member	class:ftxui::__anon48::DSRMode	file:	access:private
kLineWrap	./FTXUI/src/ftxui/component/screen_interactive.cpp	274;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kMouseAnyEvent	./FTXUI/src/ftxui/component/screen_interactive.cpp	282;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kMouseBtnEventMouse	./FTXUI/src/ftxui/component/screen_interactive.cpp	281;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kMouseSgrExtMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	285;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kMouseSgrPixelsMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	287;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kMouseUrxvtMode	./FTXUI/src/ftxui/component/screen_interactive.cpp	286;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kMouseUtf8	./FTXUI/src/ftxui/component/screen_interactive.cpp	284;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kMouseVt200	./FTXUI/src/ftxui/component/screen_interactive.cpp	278;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kMouseVt200Highlight	./FTXUI/src/ftxui/component/screen_interactive.cpp	279;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kMouseX10	./FTXUI/src/ftxui/component/screen_interactive.cpp	277;"	kind:member	class:ftxui::__anon48::DECMode	file:	access:private
kPi	./FTXUI/src/ftxui/component/animation.cpp	12;"	kind:member	namespace:ftxui::animation::easing::__anon42	file:
kPi2	./FTXUI/src/ftxui/component/animation.cpp	13;"	kind:member	namespace:ftxui::animation::easing::__anon42	file:
l	./FTXUI/include/ftxui/component/event.hpp	78;"	kind:member	struct:ftxui::Event	access:public
l	./FTXUI/src/ftxui/component/event.cpp	340;"	kind:member	class:ftxui::Event	file:
label	./FTXUI/include/ftxui/component/component_options.hpp	125;"	kind:member	struct:ftxui::ButtonOption	access:public
label	./FTXUI/include/ftxui/component/component_options.hpp	139;"	kind:member	struct:ftxui::CheckboxOption	access:public
label	./FTXUI/include/ftxui/component/component_options.hpp	24;"	kind:member	struct:ftxui::EntryState	access:public
label	./FTXUI/include/ftxui/component/component_options.hpp	78;"	kind:member	struct:ftxui::MenuEntryOption	access:public
label_	./FTXUI/src/ftxui/component/slider.cpp	260;"	kind:member	class:ftxui::__anon50::SliderWithLabel	file:	access:private
last	./FTXUI/src/ftxui/screen/string.cpp	28;"	kind:member	struct:__anon64::Interval	file:	access:public
last	./FTXUI/src/ftxui/screen/string.cpp	77;"	kind:member	struct:__anon64::WordBreakPropertyInterval	file:	access:public
leader_delay	./FTXUI/include/ftxui/component/component_options.hpp	43;"	kind:member	struct:ftxui::UnderlineOption	access:public
leader_duration	./FTXUI/include/ftxui/component/component_options.hpp	42;"	kind:member	struct:ftxui::UnderlineOption	access:public
leader_function	./FTXUI/include/ftxui/component/component_options.hpp	37;"	kind:member	struct:ftxui::UnderlineOption	access:public
left	./FTXUI/include/ftxui/component/component_options.hpp	253;"	kind:member	struct:ftxui::WindowOptions	access:public
left	./FTXUI/src/ftxui/screen/screen.cpp	129;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
lines	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	43;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
lines_	./FTXUI/src/ftxui/dom/gridbox.cpp	143;"	kind:member	class:ftxui::__anon16::GridBox	file:	access:public
link_	./FTXUI/src/ftxui/dom/hyperlink.cpp	32;"	kind:member	class:ftxui::__anon32::Hyperlink	file:	access:public
m	./FTXUI/include/ftxui/component/event.hpp	79;"	kind:member	struct:ftxui::Event	access:public
m	./FTXUI/src/ftxui/component/event.cpp	341;"	kind:member	class:ftxui::Event	file:
main	./FTXUI/include/ftxui/component/component_options.hpp	211;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
main_size	./FTXUI/include/ftxui/component/component_options.hpp	214;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
max	./FTXUI/include/ftxui/component/component_options.hpp	226;"	kind:member	struct:ftxui::SliderOption	access:public
meta	./FTXUI/include/ftxui/component/mouse.hpp	37;"	kind:member	struct:ftxui::Mouse	access:public
min	./FTXUI/include/ftxui/component/component_options.hpp	225;"	kind:member	struct:ftxui::SliderOption	access:public
min_size	./FTXUI/src/ftxui/dom/box_helper.hpp	14;"	kind:member	struct:ftxui::box_helper::Element	access:public
min_size_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	15;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
min_size_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	16;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
min_x	./FTXUI/include/ftxui/dom/requirement.hpp	15;"	kind:member	struct:ftxui::Requirement	access:public
min_y	./FTXUI/include/ftxui/dom/requirement.hpp	16;"	kind:member	struct:ftxui::Requirement	access:public
motion	./FTXUI/include/ftxui/component/mouse.hpp	33;"	kind:member	struct:ftxui::Mouse	access:public
mouse	./FTXUI/include/ftxui/component/event.hpp	108;"	kind:function	struct:ftxui::Event	access:public	signature:()
mouse	./FTXUI/include/ftxui/component/event.hpp	142;"	kind:member	union:ftxui::Event::__anon1	typeref:struct:ftxui::Event::__anon1::Mouse	access:public
mouse	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	46;"	kind:member	union:ftxui::TerminalInputParser::Output::__anon60	access:public
mouse_captured	./FTXUI/include/ftxui/component/screen_interactive.hpp	128;"	kind:member	class:ftxui::ScreenInteractive	access:private
mouse_hover_	./FTXUI/src/ftxui/component/button.cpp	140;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
mouse_hover_	./FTXUI/src/ftxui/component/slider.cpp	262;"	kind:member	class:ftxui::__anon50::SliderWithLabel	file:	access:private
mouse_hover_	./FTXUI/src/ftxui/component/window.cpp	272;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
multiline	./FTXUI/include/ftxui/component/component_options.hpp	179;"	kind:member	struct:ftxui::InputOption	access:public
mutex_	./FTXUI/include/ftxui/component/receiver.hpp	132;"	kind:member	class:ftxui::ReceiverImpl	access:private
n	./FTXUI/include/ftxui/component/event.hpp	80;"	kind:member	struct:ftxui::Event	access:public
n	./FTXUI/src/ftxui/component/event.cpp	342;"	kind:member	class:ftxui::Event	file:
name	./FTXUI/include/ftxui/screen/color_info.hpp	13;"	kind:member	struct:ftxui::ColorInfo	access:public
need_iteration	./FTXUI/include/ftxui/dom/node.hpp	58;"	kind:member	struct:ftxui::Node::Status	access:public
need_iteration_	./FTXUI/src/ftxui/dom/flexbox.cpp	223;"	kind:member	class:ftxui::__anon20::Flexbox	file:	access:public
node	./FTXUI/include/ftxui/dom/requirement.hpp	28;"	kind:member	struct:ftxui::Requirement::Focused	access:public
noexcept	./FTXUI/include/ftxui/util/ref.hpp	22;"	kind:member	class:ftxui::ConstRef	access:public
noexcept	./FTXUI/include/ftxui/util/ref.hpp	24;"	kind:member	class:ftxui::ConstRef	access:public
noexcept	./FTXUI/include/ftxui/util/ref.hpp	52;"	kind:member	class:ftxui::Ref	access:public
noexcept	./FTXUI/include/ftxui/util/ref.hpp	54;"	kind:member	class:ftxui::Ref	access:public
nostyle	./FTXUI/src/ftxui/dom/canvas.cpp	83;"	kind:member	namespace:ftxui::__anon34	file:
notflex	./FTXUI/include/ftxui/dom/elements.hpp	149;"	kind:prototype	namespace:ftxui	signature:(Element)
notflex	./FTXUI/src/ftxui/dom/flex.cpp	177;"	kind:function	namespace:ftxui	signature:(Element child)
nothing	./FTXUI/include/ftxui/dom/elements.hpp	189;"	kind:prototype	namespace:ftxui	signature:(Element element)
nothing	./FTXUI/src/ftxui/dom/util.cpp	28;"	kind:function	namespace:ftxui	signature:(Element element)
notifier_	./FTXUI/include/ftxui/component/receiver.hpp	134;"	kind:member	class:ftxui::ReceiverImpl	access:private
o	./FTXUI/include/ftxui/component/event.hpp	81;"	kind:member	struct:ftxui::Event	access:public
o	./FTXUI/src/ftxui/component/event.cpp	343;"	kind:member	class:ftxui::Event	file:
on_change	./FTXUI/include/ftxui/component/component_options.hpp	105;"	kind:member	struct:ftxui::MenuOption	access:public
on_change	./FTXUI/include/ftxui/component/component_options.hpp	148;"	kind:member	struct:ftxui::CheckboxOption	access:public
on_change	./FTXUI/include/ftxui/component/component_options.hpp	183;"	kind:member	struct:ftxui::InputOption	access:public
on_change	./FTXUI/include/ftxui/component/component_options.hpp	206;"	kind:member	struct:ftxui::RadioboxOption	access:public
on_change	./FTXUI/include/ftxui/component/component_options.hpp	231;"	kind:member	struct:ftxui::SliderOption	access:public
on_click	./FTXUI/include/ftxui/component/component_options.hpp	126;"	kind:member	struct:ftxui::ButtonOption	access:public
on_enter	./FTXUI/include/ftxui/component/component_options.hpp	106;"	kind:member	struct:ftxui::MenuOption	access:public
on_enter	./FTXUI/include/ftxui/component/component_options.hpp	185;"	kind:member	struct:ftxui::InputOption	access:public
on_event_	./FTXUI/src/ftxui/component/catch_event.cpp	29;"	kind:member	class:ftxui::CatchEventBase	file:	access:protected
on_exit_functions	./FTXUI/src/ftxui/component/screen_interactive.cpp	194;"	kind:member	namespace:ftxui::__anon48	file:
open	./FTXUI/include/ftxui/component/component_options.hpp	272;"	kind:member	struct:ftxui::DropdownOption	access:public
operator !=	./FTXUI/include/ftxui/component/event.hpp	99;"	kind:function	struct:ftxui::Event	access:public	signature:(const Event& other) const
operator !=	./FTXUI/include/ftxui/component/screen_interactive.hpp	148;"	kind:prototype	struct:ftxui::ScreenInteractive::SelectionData	access:public	signature:(const SelectionData& other) const
operator !=	./FTXUI/include/ftxui/screen/box.hpp	21;"	kind:prototype	struct:ftxui::Box	access:public	signature:(const Box& other) const
operator !=	./FTXUI/include/ftxui/screen/color.hpp	316;"	kind:prototype	class:ftxui::Color	access:public	signature:(const Color& rhs) const
operator !=	./FTXUI/src/ftxui/component/screen_interactive.cpp	1084;"	kind:function	class:ftxui::ScreenInteractive::SelectionData	signature:( const ScreenInteractive::SelectionData& other) const
operator !=	./FTXUI/src/ftxui/screen/box.cpp	68;"	kind:function	class:ftxui::Box	signature:(const Box& other) const
operator !=	./FTXUI/src/ftxui/screen/color.cpp	42;"	kind:function	class:ftxui::Color	signature:(const Color& rhs) const
operator ()	./FTXUI/include/ftxui/dom/canvas.hpp	134;"	kind:function	struct:ftxui::Canvas::XYHash	access:public	signature:(const XY& xy) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	177;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const std::vector<std::string>& v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	180;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const std::vector<std::string>* v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	183;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const std::vector<std::wstring>* v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	186;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const Adapter* v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	187;"	kind:function	struct:ftxui::ConstStringListRef::SizeVisitor	access:public	signature:(const std::unique_ptr<Adapter>& v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	196;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const std::vector<std::string>& v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	199;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const std::vector<std::string>* v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	202;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const std::vector<std::wstring>* v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	205;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const Adapter* v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	206;"	kind:function	struct:ftxui::ConstStringListRef::IndexedGetter	access:public	signature:(const std::unique_ptr<Adapter>& v) const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	31;"	kind:function	class:ftxui::ConstRef	access:public	signature:() const
operator ()	./FTXUI/include/ftxui/util/ref.hpp	60;"	kind:function	class:ftxui::Ref	access:public	signature:()
operator ()	./FTXUI/include/ftxui/util/ref.hpp	63;"	kind:function	class:ftxui::Ref	access:public	signature:() const
operator *	./FTXUI/include/ftxui/util/ref.hpp	32;"	kind:function	class:ftxui::ConstRef	access:public	signature:() const
operator *	./FTXUI/include/ftxui/util/ref.hpp	61;"	kind:function	class:ftxui::Ref	access:public	signature:()
operator *	./FTXUI/include/ftxui/util/ref.hpp	64;"	kind:function	class:ftxui::Ref	access:public	signature:() const
operator ->	./FTXUI/include/ftxui/util/ref.hpp	33;"	kind:function	class:ftxui::ConstRef	access:public	signature:() const
operator ->	./FTXUI/include/ftxui/util/ref.hpp	62;"	kind:function	class:ftxui::Ref	access:public	signature:()
operator ->	./FTXUI/include/ftxui/util/ref.hpp	65;"	kind:function	class:ftxui::Ref	access:public	signature:() const
operator <	./FTXUI/include/ftxui/component/event.hpp	100;"	kind:function	struct:ftxui::Event	access:public	signature:(const Event& other) const
operator <	./FTXUI/src/ftxui/screen/screen.cpp	136;"	kind:function	struct:ftxui::__anon65::TileEncoding	access:public	signature:(const TileEncoding& other) const
operator =	./FTXUI/include/ftxui/component/captured_mouse.hpp	15;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:(const CapturedMouseInterface&)
operator =	./FTXUI/include/ftxui/component/captured_mouse.hpp	16;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	signature:(CapturedMouseInterface&&)
operator =	./FTXUI/include/ftxui/component/component_base.hpp	40;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(const ComponentBase&)
operator =	./FTXUI/include/ftxui/component/component_base.hpp	41;"	kind:prototype	class:ftxui::ComponentBase	access:public	signature:(ComponentBase&&)
operator =	./FTXUI/include/ftxui/component/loop.hpp	30;"	kind:prototype	class:ftxui::Loop	access:public	signature:(Loop&&)
operator =	./FTXUI/include/ftxui/component/loop.hpp	32;"	kind:prototype	class:ftxui::Loop	access:public	signature:(const Loop&)
operator =	./FTXUI/include/ftxui/component/receiver.hpp	57;"	kind:prototype	class:ftxui::SenderImpl	access:public	signature:(const SenderImpl&)
operator =	./FTXUI/include/ftxui/component/receiver.hpp	58;"	kind:prototype	class:ftxui::SenderImpl	access:public	signature:(SenderImpl&&)
operator =	./FTXUI/include/ftxui/dom/node.hpp	29;"	kind:prototype	class:ftxui::Node	access:public	signature:(const Node&)
operator =	./FTXUI/include/ftxui/dom/node.hpp	30;"	kind:prototype	class:ftxui::Node	access:public	signature:(const Node&&)
operator =	./FTXUI/include/ftxui/util/autoreset.hpp	21;"	kind:prototype	class:ftxui::AutoReset	access:public	signature:(const AutoReset&)
operator =	./FTXUI/include/ftxui/util/autoreset.hpp	22;"	kind:prototype	class:ftxui::AutoReset	access:public	signature:(AutoReset&&)
operator =	./FTXUI/include/ftxui/util/ref.hpp	123;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:(const Adapter&)
operator =	./FTXUI/include/ftxui/util/ref.hpp	125;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	signature:(Adapter&&)
operator =	./FTXUI/include/ftxui/util/ref.hpp	139;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:(const ConstStringListRef&)
operator =	./FTXUI/include/ftxui/util/ref.hpp	140;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:(ConstStringListRef&&)
operator =	./FTXUI/include/ftxui/util/ref.hpp	28;"	kind:prototype	class:ftxui::ConstRef	access:public	signature:(const ConstRef<T>&)
operator =	./FTXUI/include/ftxui/util/ref.hpp	57;"	kind:prototype	class:ftxui::Ref	access:public	signature:(const Ref<T>&)
operator =	./FTXUI/src/ftxui/component/screen_interactive.cpp	331;"	kind:prototype	class:ftxui::__anon48::CapturedMouseImpl	file:	access:public	signature:(const CapturedMouseImpl&)
operator =	./FTXUI/src/ftxui/component/screen_interactive.cpp	332;"	kind:prototype	class:ftxui::__anon48::CapturedMouseImpl	file:	access:public	signature:(CapturedMouseImpl&&)
operator ==	./FTXUI/include/ftxui/component/event.hpp	98;"	kind:function	struct:ftxui::Event	access:public	signature:(const Event& other) const
operator ==	./FTXUI/include/ftxui/component/screen_interactive.hpp	147;"	kind:prototype	struct:ftxui::ScreenInteractive::SelectionData	access:public	signature:(const SelectionData& other) const
operator ==	./FTXUI/include/ftxui/dom/canvas.hpp	128;"	kind:function	struct:ftxui::Canvas::XY	access:public	signature:(const XY& other) const
operator ==	./FTXUI/include/ftxui/screen/box.hpp	20;"	kind:prototype	struct:ftxui::Box	access:public	signature:(const Box& other) const
operator ==	./FTXUI/include/ftxui/screen/color.hpp	315;"	kind:prototype	class:ftxui::Color	access:public	signature:(const Color& rhs) const
operator ==	./FTXUI/src/ftxui/component/screen_interactive.cpp	1072;"	kind:function	class:ftxui::ScreenInteractive::SelectionData	signature:( const ScreenInteractive::SelectionData& other) const
operator ==	./FTXUI/src/ftxui/screen/box.cpp	61;"	kind:function	class:ftxui::Box	signature:(const Box& other) const
operator ==	./FTXUI/src/ftxui/screen/color.cpp	37;"	kind:function	class:ftxui::Color	signature:(const Color& rhs) const
operator []	./FTXUI/include/ftxui/util/ref.hpp	128;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	implementation:pure virtual	signature:(size_t i) const
operator []	./FTXUI/include/ftxui/util/ref.hpp	171;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:(size_t i) const
operator |	./FTXUI/include/ftxui/component/component.hpp	34;"	kind:prototype	namespace:ftxui	signature:(Component component, ElementDecorator decorator)
operator |	./FTXUI/include/ftxui/dom/elements.hpp	40;"	kind:prototype	namespace:ftxui	signature:(Element, Decorator)
operator |	./FTXUI/include/ftxui/dom/elements.hpp	42;"	kind:prototype	namespace:ftxui	signature:(Elements, Decorator)
operator |	./FTXUI/include/ftxui/dom/elements.hpp	43;"	kind:prototype	namespace:ftxui	signature:(Decorator, Decorator)
operator |	./FTXUI/src/ftxui/component/util.cpp	12;"	kind:function	namespace:ftxui	signature:(Component component, ComponentDecorator decorator)
operator |	./FTXUI/src/ftxui/component/util.cpp	17;"	kind:function	namespace:ftxui	signature:(Component component, ElementDecorator decorator)
operator |	./FTXUI/src/ftxui/dom/util.cpp	40;"	kind:function	namespace:ftxui	signature:(Decorator a, Decorator b)
operator |	./FTXUI/src/ftxui/dom/util.cpp	48;"	kind:function	namespace:ftxui	signature:(Elements elements, Decorator decorator)
operator |	./FTXUI/src/ftxui/dom/util.cpp	70;"	kind:function	namespace:ftxui	signature:(Element element, Decorator decorator)
operator |=	./FTXUI/include/ftxui/component/component.hpp	35;"	kind:prototype	namespace:ftxui	signature:(Component& component, ComponentDecorator decorator)
operator |=	./FTXUI/include/ftxui/component/component.hpp	36;"	kind:prototype	namespace:ftxui	signature:(Component& component, ElementDecorator decorator)
operator |=	./FTXUI/include/ftxui/dom/elements.hpp	41;"	kind:prototype	namespace:ftxui	signature:(Element&, Decorator)
operator |=	./FTXUI/src/ftxui/component/util.cpp	22;"	kind:function	namespace:ftxui	signature:(Component& component, ComponentDecorator decorator)
operator |=	./FTXUI/src/ftxui/component/util.cpp	28;"	kind:function	namespace:ftxui	signature:(Component& component, ElementDecorator decorator)
operator |=	./FTXUI/src/ftxui/dom/util.cpp	85;"	kind:function	namespace:ftxui	signature:(Element& e, Decorator d)
option_	./FTXUI/src/ftxui/component/button.cpp	142;"	kind:member	class:ftxui::__anon61::ButtonBase	file:	access:private
options_	./FTXUI/src/ftxui/component/resizable_split.cpp	153;"	kind:member	class:ftxui::__anon49::ResizableSplitBase	file:	access:private
out_	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	65;"	kind:member	class:ftxui::TerminalInputParser	access:private
overflow	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	29;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
override	./FTXUI/src/ftxui/dom/node_decorator.hpp	19;"	kind:member	class:ftxui::NodeDecorator	access:public
override	./FTXUI/src/ftxui/dom/node_decorator.hpp	20;"	kind:member	class:ftxui::NodeDecorator	access:public
p	./FTXUI/include/ftxui/component/event.hpp	82;"	kind:member	struct:ftxui::Event	access:public
p	./FTXUI/src/ftxui/component/event.cpp	344;"	kind:member	class:ftxui::Event	file:
palette16code	./FTXUI/src/ftxui/screen/color.cpp	16;"	kind:member	namespace:ftxui::__anon62	file:
palette256	./FTXUI/src/ftxui/screen/color_info.cpp	13;"	kind:member	namespace:ftxui	file:
paragraph	./FTXUI/include/ftxui/dom/deprecated.hpp	13;"	kind:prototype	namespace:ftxui	signature:(std::wstring text)
paragraph	./FTXUI/include/ftxui/dom/elements.hpp	84;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
paragraph	./FTXUI/src/ftxui/dom/paragraph.cpp	41;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
paragraphAlignCenter	./FTXUI/include/ftxui/dom/elements.hpp	87;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
paragraphAlignCenter	./FTXUI/src/ftxui/dom/paragraph.cpp	72;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
paragraphAlignJustify	./FTXUI/include/ftxui/dom/elements.hpp	88;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
paragraphAlignJustify	./FTXUI/src/ftxui/dom/paragraph.cpp	85;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
paragraphAlignLeft	./FTXUI/include/ftxui/dom/elements.hpp	85;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
paragraphAlignLeft	./FTXUI/src/ftxui/dom/paragraph.cpp	49;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
paragraphAlignRight	./FTXUI/include/ftxui/dom/elements.hpp	86;"	kind:prototype	namespace:ftxui	signature:(const std::string& text)
paragraphAlignRight	./FTXUI/src/ftxui/dom/paragraph.cpp	60;"	kind:function	namespace:ftxui	signature:(const std::string& the_text)
parent_	./FTXUI/include/ftxui/component/component_base.hpp	99;"	kind:member	class:ftxui::ComponentBase	access:private
parent_	./FTXUI/include/ftxui/dom/selection.hpp	39;"	kind:member	class:ftxui::Selection	access:private
parent_	./FTXUI/src/ftxui/dom/selection.cpp	62;"	kind:prototype	namespace:ftxui	file:	signature:(parent)
parts_	./FTXUI/include/ftxui/dom/selection.hpp	41;"	kind:member	class:ftxui::Selection	access:private
password	./FTXUI/include/ftxui/component/component_options.hpp	178;"	kind:member	struct:ftxui::InputOption	access:public
pending_	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	68;"	kind:member	class:ftxui::TerminalInputParser	access:private
pixel_	./FTXUI/src/ftxui/dom/border.cpp	138;"	kind:member	class:ftxui::__anon38::BorderPixel	file:	access:private
pixel_	./FTXUI/src/ftxui/dom/separator.cpp	97;"	kind:member	class:ftxui::__anon8::SeparatorWithPixel	file:	access:private
pixels_	./FTXUI/include/ftxui/screen/image.hpp	43;"	kind:member	class:ftxui::Image	access:protected
pixels_	./FTXUI/src/ftxui/screen/image.cpp	24;"	kind:function	namespace:ftxui	signature:(dimy, std::vector<Pixel>(dimx))
placeholder	./FTXUI/include/ftxui/component/component_options.hpp	174;"	kind:member	struct:ftxui::InputOption	access:public
position	./FTXUI/include/ftxui/dom/linear_gradient.hpp	34;"	kind:member	struct:ftxui::LinearGradient::Stop	access:public
position_	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	66;"	kind:member	class:ftxui::TerminalInputParser	access:private
positions	./FTXUI/src/ftxui/dom/linear_gradient.cpp	25;"	kind:member	struct:ftxui::__anon17::LinearGradientNormalized	file:	access:public
previous_animation_time_	./FTXUI/include/ftxui/component/screen_interactive.hpp	123;"	kind:member	class:ftxui::ScreenInteractive	access:private
previous_frame_resized_	./FTXUI/include/ftxui/component/screen_interactive.hpp	129;"	kind:member	class:ftxui::ScreenInteractive	access:private
previous_value_	./FTXUI/include/ftxui/util/autoreset.hpp	27;"	kind:member	class:ftxui::AutoReset	access:private
progress_	./FTXUI/src/ftxui/dom/gauge.cpp	158;"	kind:member	class:ftxui::__anon24::Gauge	file:	access:private
property	./FTXUI/src/ftxui/screen/string.cpp	78;"	kind:member	struct:__anon64::WordBreakPropertyInterval	file:	access:public
q	./FTXUI/include/ftxui/component/event.hpp	83;"	kind:member	struct:ftxui::Event	access:public
q	./FTXUI/src/ftxui/component/event.cpp	345;"	kind:member	class:ftxui::Event	file:
queue_	./FTXUI/include/ftxui/component/receiver.hpp	133;"	kind:member	class:ftxui::ReceiverImpl	access:private
quick_exit	./FTXUI/src/ftxui/component/screen_interactive.cpp	57;"	kind:macro	file:
r	./FTXUI/include/ftxui/component/event.hpp	84;"	kind:member	struct:ftxui::Event	access:public
r	./FTXUI/src/ftxui/component/event.cpp	346;"	kind:member	class:ftxui::Event	file:
radiobox	./FTXUI/include/ftxui/component/component_options.hpp	276;"	kind:member	struct:ftxui::DropdownOption	access:public
receiver_	./FTXUI/include/ftxui/component/receiver.hpp	67;"	kind:member	class:ftxui::SenderImpl	access:private
red	./FTXUI/include/ftxui/screen/color_info.hpp	16;"	kind:member	struct:ftxui::ColorInfo	access:public
red_	./FTXUI/include/ftxui/screen/color.hpp	329;"	kind:member	class:ftxui::Color	access:private
reflect	./FTXUI/include/ftxui/dom/elements.hpp	179;"	kind:prototype	namespace:ftxui	signature:(Box& box)
reflect	./FTXUI/src/ftxui/dom/reflect.cpp	43;"	kind:function	namespace:ftxui	signature:(Box& box)
reflected_box_	./FTXUI/src/ftxui/dom/reflect.cpp	39;"	kind:member	class:ftxui::__anon6::Reflect	file:	access:private
render	./FTXUI/include/ftxui/component/component_options.hpp	264;"	kind:member	struct:ftxui::WindowOptions	access:public
requirement	./FTXUI/include/ftxui/dom/node.hpp	38;"	kind:function	class:ftxui::Node	access:public	signature:()
requirement_	./FTXUI/include/ftxui/dom/node.hpp	66;"	kind:member	class:ftxui::Node	access:protected
reset_cursor_position	./FTXUI/include/ftxui/component/screen_interactive.hpp	117;"	kind:member	class:ftxui::ScreenInteractive	access:private
resize	./FTXUI/include/ftxui/component/component_options.hpp	240;"	kind:member	struct:ftxui::WindowRenderState	access:public
resize_down	./FTXUI/include/ftxui/component/component_options.hpp	261;"	kind:member	struct:ftxui::WindowOptions	access:public
resize_down_	./FTXUI/src/ftxui/component/window.cpp	276;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
resize_down_	./FTXUI/src/ftxui/component/window.cpp	91;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
resize_down_hover_	./FTXUI/src/ftxui/component/window.cpp	281;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
resize_left	./FTXUI/include/ftxui/component/component_options.hpp	258;"	kind:member	struct:ftxui::WindowOptions	access:public
resize_left_	./FTXUI/src/ftxui/component/window.cpp	275;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
resize_left_	./FTXUI/src/ftxui/component/window.cpp	88;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
resize_left_hover_	./FTXUI/src/ftxui/component/window.cpp	280;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
resize_right	./FTXUI/include/ftxui/component/component_options.hpp	259;"	kind:member	struct:ftxui::WindowOptions	access:public
resize_right_	./FTXUI/src/ftxui/component/window.cpp	277;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
resize_right_	./FTXUI/src/ftxui/component/window.cpp	89;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
resize_right_hover_	./FTXUI/src/ftxui/component/window.cpp	282;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
resize_start_x	./FTXUI/src/ftxui/component/window.cpp	269;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
resize_start_y	./FTXUI/src/ftxui/component/window.cpp	270;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
resize_top	./FTXUI/include/ftxui/component/component_options.hpp	260;"	kind:member	struct:ftxui::WindowOptions	access:public
resize_top_	./FTXUI/src/ftxui/component/window.cpp	274;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
resize_top_	./FTXUI/src/ftxui/component/window.cpp	90;"	kind:member	class:ftxui::__anon54::ResizeDecorator	file:	access:public
resize_top_hover_	./FTXUI/src/ftxui/component/window.cpp	279;"	kind:member	class:ftxui::__anon54::WindowImpl	file:	access:private
right	./FTXUI/src/ftxui/screen/screen.cpp	131;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
rotate	./FTXUI/src/ftxui/dom/gridbox_test.cpp	18;"	kind:function	namespace:ftxui::__anon30	signature:(std::string str)
rotate	./FTXUI/src/ftxui/dom/vbox_test.cpp	18;"	kind:function	namespace:ftxui::__anon26	signature:(std::string str)
round	./FTXUI/src/ftxui/screen/screen.cpp	133;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
s	./FTXUI/include/ftxui/component/event.hpp	85;"	kind:member	struct:ftxui::Event	access:public
s	./FTXUI/src/ftxui/component/event.cpp	347;"	kind:member	class:ftxui::Event	file:
saturation	./FTXUI/include/ftxui/screen/color_info.hpp	20;"	kind:member	struct:ftxui::ColorInfo	access:public
screen_	./FTXUI/include/ftxui/component/event.hpp	122;"	kind:member	struct:ftxui::Event	access:public
screen_	./FTXUI/include/ftxui/component/loop.hpp	35;"	kind:member	class:ftxui::Loop	access:private
second_	./FTXUI/src/ftxui/component/menu.cpp	474;"	kind:member	class:ftxui::MenuBase	file:	access:protected
select	./FTXUI/include/ftxui/dom/elements.hpp	165;"	kind:prototype	namespace:ftxui	signature:(Element e)
select	./FTXUI/src/ftxui/dom/frame.cpp	108;"	kind:function	namespace:ftxui	signature:(Element child)
selected	./FTXUI/include/ftxui/component/component_options.hpp	199;"	kind:member	struct:ftxui::RadioboxOption	access:public
selected	./FTXUI/include/ftxui/component/component_options.hpp	94;"	kind:member	struct:ftxui::MenuOption	access:public
selected_	./FTXUI/src/ftxui/component/container.cpp	69;"	kind:member	class:ftxui::ContainerBase	file:	access:protected
selected_focus_	./FTXUI/src/ftxui/component/menu.cpp	466;"	kind:member	class:ftxui::MenuBase	file:	access:protected
selected_previous_	./FTXUI/src/ftxui/component/menu.cpp	465;"	kind:member	class:ftxui::MenuBase	file:	access:protected
selectionBackgroundColor	./FTXUI/include/ftxui/dom/elements.hpp	119;"	kind:prototype	namespace:ftxui	signature:(Color foreground)
selectionBackgroundColor	./FTXUI/src/ftxui/dom/selection_style.cpp	61;"	kind:function	namespace:ftxui	signature:(Color foreground)
selectionColor	./FTXUI/include/ftxui/dom/elements.hpp	118;"	kind:prototype	namespace:ftxui	signature:(Color foreground)
selectionColor	./FTXUI/src/ftxui/dom/selection_style.cpp	78;"	kind:function	namespace:ftxui	signature:(Color foreground)
selectionForegroundColor	./FTXUI/include/ftxui/dom/elements.hpp	120;"	kind:prototype	namespace:ftxui	signature:(Color foreground)
selectionForegroundColor	./FTXUI/src/ftxui/dom/selection_style.cpp	69;"	kind:function	namespace:ftxui	signature:(Color foreground)
selectionStyle	./FTXUI/include/ftxui/dom/elements.hpp	121;"	kind:prototype	namespace:ftxui	signature:(std::function<void(Pixel&)> style)
selectionStyle	./FTXUI/src/ftxui/dom/selection_style.cpp	86;"	kind:function	namespace:ftxui	signature:(std::function<void(Pixel&)> style)
selectionStyleReset	./FTXUI/include/ftxui/dom/elements.hpp	117;"	kind:prototype	namespace:ftxui	signature:(Element)
selectionStyleReset	./FTXUI/src/ftxui/dom/selection_style.cpp	55;"	kind:function	namespace:ftxui	signature:(Element child)
selection_	./FTXUI/include/ftxui/component/screen_interactive.hpp	152;"	kind:member	class:ftxui::ScreenInteractive	access:private
selection_data_	./FTXUI/include/ftxui/component/screen_interactive.hpp	150;"	kind:member	class:ftxui::ScreenInteractive	access:private
selection_data_previous_	./FTXUI/include/ftxui/component/screen_interactive.hpp	151;"	kind:member	class:ftxui::ScreenInteractive	access:private
selection_end_	./FTXUI/src/ftxui/dom/text.cpp	91;"	kind:member	class:ftxui::__anon21::Text	file:	access:private
selection_on_change_	./FTXUI/include/ftxui/component/screen_interactive.hpp	153;"	kind:member	class:ftxui::ScreenInteractive	access:private
selection_pending_	./FTXUI/include/ftxui/component/screen_interactive.hpp	140;"	kind:member	class:ftxui::ScreenInteractive	access:private
selection_start_	./FTXUI/src/ftxui/dom/text.cpp	90;"	kind:member	class:ftxui::__anon21::Text	file:	access:private
selection_style_	./FTXUI/include/ftxui/screen/screen.hpp	81;"	kind:member	class:ftxui::Screen	access:protected
selector_	./FTXUI/src/ftxui/component/container.cpp	70;"	kind:member	class:ftxui::ContainerBase	file:	access:protected
separator	./FTXUI/include/ftxui/dom/elements.hpp	48;"	kind:prototype	namespace:ftxui	signature:()
separator	./FTXUI/include/ftxui/dom/elements.hpp	55;"	kind:prototype	namespace:ftxui	signature:(Pixel)
separator	./FTXUI/src/ftxui/dom/separator.cpp	134;"	kind:function	namespace:ftxui	signature:()
separator	./FTXUI/src/ftxui/dom/separator.cpp	426;"	kind:function	namespace:ftxui	signature:(Pixel pixel)
separatorCharacter	./FTXUI/include/ftxui/dom/elements.hpp	56;"	kind:prototype	namespace:ftxui	signature:(std::string)
separatorCharacter	./FTXUI/src/ftxui/dom/separator.cpp	395;"	kind:function	namespace:ftxui	signature:(std::string value)
separatorDashed	./FTXUI/include/ftxui/dom/elements.hpp	50;"	kind:prototype	namespace:ftxui	signature:()
separatorDashed	./FTXUI/src/ftxui/dom/separator.cpp	246;"	kind:function	namespace:ftxui	signature:()
separatorDouble	./FTXUI/include/ftxui/dom/elements.hpp	52;"	kind:prototype	namespace:ftxui	signature:()
separatorDouble	./FTXUI/src/ftxui/dom/separator.cpp	320;"	kind:function	namespace:ftxui	signature:()
separatorEmpty	./FTXUI/include/ftxui/dom/elements.hpp	53;"	kind:prototype	namespace:ftxui	signature:()
separatorEmpty	./FTXUI/src/ftxui/dom/separator.cpp	357;"	kind:function	namespace:ftxui	signature:()
separatorHSelector	./FTXUI/include/ftxui/dom/elements.hpp	57;"	kind:prototype	namespace:ftxui	signature:(float left, float right, Color unselected_color, Color selected_color)
separatorHSelector	./FTXUI/src/ftxui/dom/separator.cpp	442;"	kind:function	namespace:ftxui	signature:(float left, float right, Color unselected_color, Color selected_color)
separatorHeavy	./FTXUI/include/ftxui/dom/elements.hpp	51;"	kind:prototype	namespace:ftxui	signature:()
separatorHeavy	./FTXUI/src/ftxui/dom/separator.cpp	283;"	kind:function	namespace:ftxui	signature:()
separatorLight	./FTXUI/include/ftxui/dom/elements.hpp	49;"	kind:prototype	namespace:ftxui	signature:()
separatorLight	./FTXUI/src/ftxui/dom/separator.cpp	209;"	kind:function	namespace:ftxui	signature:()
separatorStyled	./FTXUI/include/ftxui/dom/elements.hpp	54;"	kind:prototype	namespace:ftxui	signature:(BorderStyle)
separatorStyled	./FTXUI/src/ftxui/dom/separator.cpp	172;"	kind:function	namespace:ftxui	signature:(BorderStyle style)
separatorVSelector	./FTXUI/include/ftxui/dom/elements.hpp	61;"	kind:prototype	namespace:ftxui	signature:(float up, float down, Color unselected_color, Color selected_color)
separatorVSelector	./FTXUI/src/ftxui/dom/separator.cpp	512;"	kind:function	namespace:ftxui	signature:(float up, float down, Color unselected_color, Color selected_color)
separator_box_	./FTXUI/src/ftxui/component/resizable_split.cpp	155;"	kind:member	class:ftxui::__anon49::ResizableSplitBase	file:	access:private
separator_func	./FTXUI/include/ftxui/component/component_options.hpp	217;"	kind:member	struct:ftxui::ResizableSplitOption	access:public
set_cursor_position	./FTXUI/include/ftxui/component/screen_interactive.hpp	116;"	kind:member	class:ftxui::ScreenInteractive	access:private
shape	./FTXUI/include/ftxui/screen/screen.hpp	61;"	kind:member	struct:ftxui::Screen::Cursor	access:public
shape_	./FTXUI/src/ftxui/dom/frame.cpp	93;"	kind:member	class:ftxui::__anon33::FocusCursor	file:	access:private
shift	./FTXUI/include/ftxui/component/mouse.hpp	36;"	kind:member	struct:ftxui::Mouse	access:public
simple_border_charset	./FTXUI/src/ftxui/dom/border.cpp	25;"	kind:member	namespace:ftxui::__anon38	file:
size	./FTXUI/include/ftxui/dom/elements.hpp	155;"	kind:prototype	namespace:ftxui	signature:(WidthOrHeight, Constraint, int value)
size	./FTXUI/include/ftxui/util/ref.hpp	127;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	implementation:pure virtual	signature:() const
size	./FTXUI/include/ftxui/util/ref.hpp	167;"	kind:function	class:ftxui::ConstStringListRef	access:public	signature:() const
size	./FTXUI/src/ftxui/component/menu.cpp	446;"	kind:function	class:ftxui::MenuBase	access:public	signature:() const
size	./FTXUI/src/ftxui/component/radiobox.cpp	165;"	kind:function	class:ftxui::__anon55::RadioboxBase	file:	access:private	signature:() const
size	./FTXUI/src/ftxui/dom/box_helper.hpp	19;"	kind:member	struct:ftxui::box_helper::Element	access:public
size	./FTXUI/src/ftxui/dom/size.cpp	89;"	kind:function	namespace:ftxui	signature:(WidthOrHeight direction, Constraint constraint, int value)
size_x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	45;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
size_y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	46;"	kind:member	struct:ftxui::flexbox_helper::Global	access:public
spinner	./FTXUI/include/ftxui/dom/elements.hpp	83;"	kind:prototype	namespace:ftxui	signature:(int charset_index, size_t image_index)
spinner	./FTXUI/src/ftxui/dom/spinner.cpp	282;"	kind:function	namespace:ftxui	signature:(int charset_index, size_t image_index)
start_x	./FTXUI/include/ftxui/component/screen_interactive.hpp	142;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
start_x_	./FTXUI/include/ftxui/dom/selection.hpp	34;"	kind:member	class:ftxui::Selection	access:private
start_y	./FTXUI/include/ftxui/component/screen_interactive.hpp	143;"	kind:member	struct:ftxui::ScreenInteractive::SelectionData	access:public
start_y_	./FTXUI/include/ftxui/dom/selection.hpp	35;"	kind:member	class:ftxui::Selection	access:private
state	./FTXUI/include/ftxui/component/component_options.hpp	25;"	kind:member	struct:ftxui::EntryState	access:public
stencil	./FTXUI/include/ftxui/screen/image.hpp	38;"	kind:member	class:ftxui::Image	access:public
stops	./FTXUI/include/ftxui/dom/linear_gradient.hpp	36;"	kind:member	struct:ftxui::LinearGradient	access:public
storage_	./FTXUI/include/ftxui/dom/canvas.hpp	142;"	kind:member	struct:ftxui::Canvas	access:private
strikethrough	./FTXUI/include/ftxui/dom/elements.hpp	103;"	kind:prototype	namespace:ftxui	signature:(Element)
strikethrough	./FTXUI/include/ftxui/screen/pixel.hpp	35;"	kind:member	struct:ftxui::Pixel	access:public
strikethrough	./FTXUI/src/ftxui/dom/strikethrough.cpp	17;"	kind:function	namespace:ftxui	signature:(Element child)
string_width	./FTXUI/include/ftxui/screen/string.hpp	19;"	kind:prototype	namespace:ftxui	signature:(const std::string&)
string_width	./FTXUI/src/ftxui/screen/string.cpp	1330;"	kind:function	namespace:ftxui	signature:(const std::string& input)
style_	./FTXUI/src/ftxui/dom/selection_style.cpp	47;"	kind:member	class:ftxui::__anon15::SelectionStyle	file:	access:public
style_	./FTXUI/src/ftxui/dom/separator.cpp	79;"	kind:member	class:ftxui::__anon8::SeparatorAuto	file:	access:public
suspended_screen_	./FTXUI/include/ftxui/component/screen_interactive.hpp	97;"	kind:member	class:ftxui::ScreenInteractive	access:private
t	./FTXUI/include/ftxui/component/event.hpp	86;"	kind:member	struct:ftxui::Event	access:public
t	./FTXUI/src/ftxui/component/event.cpp	348;"	kind:member	class:ftxui::Event	file:
table_	./FTXUI/include/ftxui/dom/table.hpp	86;"	kind:member	class:ftxui::TableSelection	access:private
task_receiver_	./FTXUI/include/ftxui/component/screen_interactive.hpp	114;"	kind:member	class:ftxui::ScreenInteractive	access:private
task_sender_	./FTXUI/include/ftxui/component/screen_interactive.hpp	113;"	kind:member	class:ftxui::ScreenInteractive	access:private
text	./FTXUI/include/ftxui/dom/deprecated.hpp	11;"	kind:prototype	namespace:ftxui	signature:(std::wstring text)
text	./FTXUI/include/ftxui/dom/elements.hpp	46;"	kind:prototype	namespace:ftxui	signature:(std::string text)
text	./FTXUI/src/ftxui/dom/text.cpp	141;"	kind:function	namespace:ftxui	signature:(std::string text)
text	./FTXUI/src/ftxui/dom/text.cpp	160;"	kind:function	namespace:ftxui	signature:(std::wstring text)
text_	./FTXUI/src/ftxui/dom/text.cpp	120;"	kind:member	class:ftxui::__anon21::VText	file:	access:private
text_	./FTXUI/src/ftxui/dom/text.cpp	88;"	kind:member	class:ftxui::__anon21::Text	file:	access:private
tile_encoding	./FTXUI/src/ftxui/screen/screen.cpp	153;"	kind:member	namespace:ftxui::__anon65	file:
tile_encoding_inverse	./FTXUI/src/ftxui/screen/screen.cpp	305;"	kind:member	namespace:ftxui::__anon65	file:
timeout_	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	67;"	kind:member	class:ftxui::TerminalInputParser	access:private
timeout_microseconds	./FTXUI/src/ftxui/component/screen_interactive.cpp	81;"	kind:member	namespace:ftxui::__anon48	file:
timeout_milliseconds	./FTXUI/src/ftxui/component/screen_interactive.cpp	80;"	kind:member	namespace:ftxui::__anon48	file:
title	./FTXUI/include/ftxui/component/component_options.hpp	237;"	kind:member	struct:ftxui::WindowRenderState	access:public
title	./FTXUI/include/ftxui/component/component_options.hpp	251;"	kind:member	struct:ftxui::WindowOptions	access:public
to	./FTXUI/include/ftxui/component/animation.hpp	100;"	kind:function	class:ftxui::animation::Animator	access:public	signature:() const
to_	./FTXUI/include/ftxui/component/animation.hpp	105;"	kind:member	class:ftxui::animation::Animator	access:private
to_string	./FTXUI/include/ftxui/screen/string.hpp	11;"	kind:prototype	namespace:ftxui	signature:(const std::wstring& s)
to_string	./FTXUI/src/ftxui/screen/string.cpp	1565;"	kind:function	namespace:ftxui	signature:(const std::wstring& s)
to_wstring	./FTXUI/include/ftxui/screen/string.hpp	12;"	kind:prototype	namespace:ftxui	signature:(const std::string& s)
to_wstring	./FTXUI/include/ftxui/screen/string.hpp	15;"	kind:function	namespace:ftxui	signature:(T s)
top	./FTXUI/include/ftxui/component/component_options.hpp	254;"	kind:member	struct:ftxui::WindowOptions	access:public
top	./FTXUI/src/ftxui/screen/screen.cpp	130;"	kind:member	struct:ftxui::__anon65::TileEncoding	file:	access:public
track_mouse_	./FTXUI/include/ftxui/component/screen_interactive.hpp	111;"	kind:member	class:ftxui::ScreenInteractive	access:private
transform	./FTXUI/include/ftxui/component/component_options.hpp	129;"	kind:member	struct:ftxui::ButtonOption	access:public
transform	./FTXUI/include/ftxui/component/component_options.hpp	144;"	kind:member	struct:ftxui::CheckboxOption	access:public
transform	./FTXUI/include/ftxui/component/component_options.hpp	177;"	kind:member	struct:ftxui::InputOption	access:public
transform	./FTXUI/include/ftxui/component/component_options.hpp	202;"	kind:member	struct:ftxui::RadioboxOption	access:public
transform	./FTXUI/include/ftxui/component/component_options.hpp	279;"	kind:member	struct:ftxui::DropdownOption	access:public
transform	./FTXUI/include/ftxui/component/component_options.hpp	79;"	kind:member	struct:ftxui::MenuEntryOption	access:public
type	./FTXUI/include/ftxui/dom/canvas.hpp	121;"	kind:member	struct:ftxui::Canvas::Cell	access:public
type	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	44;"	kind:member	struct:ftxui::TerminalInputParser::Output	access:public
type_	./FTXUI/include/ftxui/component/event.hpp	134;"	kind:member	struct:ftxui::Event	access:private
type_	./FTXUI/include/ftxui/screen/color.hpp	328;"	kind:member	class:ftxui::Color	access:private
u	./FTXUI/include/ftxui/component/event.hpp	87;"	kind:member	struct:ftxui::Event	access:public
u	./FTXUI/src/ftxui/component/event.cpp	349;"	kind:member	class:ftxui::Event	file:
uint8_t	./FTXUI/include/ftxui/screen/color.hpp	22;"	kind:member	class:ftxui::Color	access:public
uint8_t	./FTXUI/include/ftxui/screen/color.hpp	23;"	kind:member	class:ftxui::Color	access:public
uint8_t	./FTXUI/include/ftxui/screen/color.hpp	24;"	kind:member	class:ftxui::Color	access:public
underline	./FTXUI/include/ftxui/component/component_options.hpp	97;"	kind:member	struct:ftxui::MenuOption	access:public
underlined	./FTXUI/include/ftxui/dom/elements.hpp	100;"	kind:prototype	namespace:ftxui	signature:(Element)
underlined	./FTXUI/include/ftxui/screen/pixel.hpp	33;"	kind:member	struct:ftxui::Pixel	access:public
underlined	./FTXUI/src/ftxui/dom/underlined.cpp	33;"	kind:function	namespace:ftxui	signature:(Element child)
underlinedDouble	./FTXUI/include/ftxui/dom/elements.hpp	101;"	kind:prototype	namespace:ftxui	signature:(Element)
underlinedDouble	./FTXUI/src/ftxui/dom/underlined_double.cpp	17;"	kind:function	namespace:ftxui	signature:(Element child)
underlined_double	./FTXUI/include/ftxui/screen/pixel.hpp	34;"	kind:member	struct:ftxui::Pixel	access:public
unpack	./FTXUI/include/ftxui/dom/take_any_args.hpp	29;"	kind:function	namespace:ftxui	signature:(Args.... args)
use_alternative_screen_	./FTXUI/include/ftxui/component/screen_interactive.hpp	105;"	kind:member	class:ftxui::ScreenInteractive	access:private
v	./FTXUI/include/ftxui/component/event.hpp	88;"	kind:member	struct:ftxui::Event	access:public
v	./FTXUI/src/ftxui/component/event.cpp	350;"	kind:member	class:ftxui::Event	file:
value	./FTXUI/include/ftxui/component/component_options.hpp	224;"	kind:member	struct:ftxui::SliderOption	access:public
value	./FTXUI/include/ftxui/screen/color_info.hpp	21;"	kind:member	struct:ftxui::ColorInfo	access:public
value_	./FTXUI/include/ftxui/component/animation.hpp	103;"	kind:member	class:ftxui::animation::Animator	access:private
value_	./FTXUI/src/ftxui/dom/separator.cpp	51;"	kind:member	class:ftxui::__anon8::Separator	file:	access:public
value_	./FTXUI/src/ftxui/dom/size.cpp	79;"	kind:member	class:ftxui::__anon10::Size	file:	access:private
variable_	./FTXUI/include/ftxui/util/autoreset.hpp	26;"	kind:member	class:ftxui::AutoReset	access:private
variant_	./FTXUI/include/ftxui/util/ref.hpp	211;"	kind:member	class:ftxui::ConstStringListRef	access:private
variant_	./FTXUI/include/ftxui/util/ref.hpp	36;"	kind:member	class:ftxui::ConstRef	access:private
variant_	./FTXUI/include/ftxui/util/ref.hpp	68;"	kind:member	class:ftxui::Ref	access:private
vbox	./FTXUI/include/ftxui/dom/elements.hpp	126;"	kind:prototype	namespace:ftxui	signature:(Elements)
vbox	./FTXUI/src/ftxui/dom/vbox.cpp	96;"	kind:function	namespace:ftxui	signature:(Elements children)
vcenter	./FTXUI/include/ftxui/dom/elements.hpp	186;"	kind:prototype	namespace:ftxui	signature:(Element)
vcenter	./FTXUI/src/ftxui/dom/composite_decorator.cpp	23;"	kind:function	namespace:ftxui	signature:(Element child)
vflow	./FTXUI/include/ftxui/dom/elements.hpp	132;"	kind:prototype	namespace:ftxui	signature:(Elements)
vflow	./FTXUI/src/ftxui/dom/flexbox.cpp	289;"	kind:function	namespace:ftxui	signature:(Elements children)
vscroll_indicator	./FTXUI/include/ftxui/dom/elements.hpp	177;"	kind:prototype	namespace:ftxui	signature:(Element)
vscroll_indicator	./FTXUI/src/ftxui/dom/scroll_indicator.cpp	21;"	kind:function	namespace:ftxui	signature:(Element child)
vtext	./FTXUI/include/ftxui/dom/deprecated.hpp	12;"	kind:prototype	namespace:ftxui	signature:(std::wstring text)
vtext	./FTXUI/include/ftxui/dom/elements.hpp	47;"	kind:prototype	namespace:ftxui	signature:(std::string text)
vtext	./FTXUI/src/ftxui/dom/text.cpp	190;"	kind:function	namespace:ftxui	signature:(std::string text)
vtext	./FTXUI/src/ftxui/dom/text.cpp	220;"	kind:function	namespace:ftxui	signature:(std::wstring text)
w	./FTXUI/include/ftxui/component/event.hpp	89;"	kind:member	struct:ftxui::Event	access:public
w	./FTXUI/src/ftxui/component/event.cpp	351;"	kind:member	class:ftxui::Event	file:
wchar_width	./FTXUI/include/ftxui/screen/deprecated.hpp	10;"	kind:prototype	namespace:ftxui	signature:(wchar_t)
wchar_width	./FTXUI/src/ftxui/screen/string.cpp	1313;"	kind:function	namespace:ftxui	signature:(wchar_t ucs)
width	./FTXUI/include/ftxui/component/component_options.hpp	255;"	kind:member	struct:ftxui::WindowOptions	access:public
width	./FTXUI/include/ftxui/dom/canvas.hpp	29;"	kind:function	struct:ftxui::Canvas	access:public	signature:() const
width_	./FTXUI/include/ftxui/dom/canvas.hpp	140;"	kind:member	struct:ftxui::Canvas	access:private
width_	./FTXUI/src/ftxui/dom/text.cpp	121;"	kind:member	class:ftxui::__anon21::VText	file:	access:private
window	./FTXUI/include/ftxui/dom/elements.hpp	82;"	kind:prototype	namespace:ftxui	signature:(Element title, Element content, BorderStyle border = ROUNDED)
window	./FTXUI/src/ftxui/dom/border.cpp	507;"	kind:function	namespace:ftxui	signature:(Element title, Element content, BorderStyle border)
wrap	./FTXUI/include/ftxui/dom/flexbox_config.hpp	37;"	kind:member	struct:ftxui::FlexboxConfig	access:public
wstring_width	./FTXUI/include/ftxui/screen/deprecated.hpp	11;"	kind:prototype	namespace:ftxui	signature:(const std::wstring&)
wstring_width	./FTXUI/src/ftxui/screen/string.cpp	1317;"	kind:function	namespace:ftxui	signature:(const std::wstring& text)
x	./FTXUI/include/ftxui/component/event.hpp	137;"	kind:member	struct:ftxui::Event::Cursor	access:public
x	./FTXUI/include/ftxui/component/event.hpp	90;"	kind:member	struct:ftxui::Event	access:public
x	./FTXUI/include/ftxui/component/mouse.hpp	41;"	kind:member	struct:ftxui::Mouse	access:public
x	./FTXUI/include/ftxui/dom/canvas.hpp	126;"	kind:member	struct:ftxui::Canvas::XY	access:public
x	./FTXUI/include/ftxui/screen/screen.hpp	49;"	kind:member	struct:ftxui::Screen::Cursor	access:public
x	./FTXUI/src/ftxui/component/event.cpp	352;"	kind:member	class:ftxui::Event	file:
x	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	39;"	kind:member	struct:ftxui::TerminalInputParser::CursorPosition	access:public
x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	25;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
x	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	35;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
x_	./FTXUI/include/ftxui/dom/selection.hpp	44;"	kind:member	class:ftxui::Selection	access:private
x_frame_	./FTXUI/src/ftxui/dom/frame.cpp	79;"	kind:member	class:ftxui::__anon33::Frame	file:	access:private
x_max	./FTXUI/include/ftxui/screen/box.hpp	11;"	kind:member	struct:ftxui::Box	access:public
x_max_	./FTXUI/include/ftxui/dom/table.hpp	88;"	kind:member	class:ftxui::TableSelection	access:private
x_min	./FTXUI/include/ftxui/screen/box.hpp	10;"	kind:member	struct:ftxui::Box	access:public
x_min_	./FTXUI/include/ftxui/dom/table.hpp	87;"	kind:member	class:ftxui::TableSelection	access:private
x_size	./FTXUI/src/ftxui/dom/gridbox.cpp	141;"	kind:member	class:ftxui::__anon16::GridBox	file:	access:public
xflex	./FTXUI/include/ftxui/dom/elements.hpp	141;"	kind:prototype	namespace:ftxui	signature:(Element)
xflex	./FTXUI/src/ftxui/dom/flex.cpp	129;"	kind:function	namespace:ftxui	signature:(Element child)
xflex_grow	./FTXUI/include/ftxui/dom/elements.hpp	142;"	kind:prototype	namespace:ftxui	signature:(Element)
xflex_grow	./FTXUI/src/ftxui/dom/flex.cpp	147;"	kind:function	namespace:ftxui	signature:(Element child)
xflex_shrink	./FTXUI/include/ftxui/dom/elements.hpp	143;"	kind:prototype	namespace:ftxui	signature:(Element)
xflex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	165;"	kind:function	namespace:ftxui	signature:(Element child)
xframe	./FTXUI/include/ftxui/dom/elements.hpp	162;"	kind:prototype	namespace:ftxui	signature:(Element)
xframe	./FTXUI/src/ftxui/dom/frame.cpp	126;"	kind:function	namespace:ftxui	signature:(Element child)
y	./FTXUI/include/ftxui/component/event.hpp	138;"	kind:member	struct:ftxui::Event::Cursor	access:public
y	./FTXUI/include/ftxui/component/event.hpp	91;"	kind:member	struct:ftxui::Event	access:public
y	./FTXUI/include/ftxui/component/mouse.hpp	42;"	kind:member	struct:ftxui::Mouse	access:public
y	./FTXUI/include/ftxui/dom/canvas.hpp	127;"	kind:member	struct:ftxui::Canvas::XY	access:public
y	./FTXUI/include/ftxui/screen/screen.hpp	50;"	kind:member	struct:ftxui::Screen::Cursor	access:public
y	./FTXUI/src/ftxui/component/event.cpp	353;"	kind:member	class:ftxui::Event	file:
y	./FTXUI/src/ftxui/component/terminal_input_parser.hpp	40;"	kind:member	struct:ftxui::TerminalInputParser::CursorPosition	access:public
y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	26;"	kind:member	struct:ftxui::flexbox_helper::Block	access:public
y	./FTXUI/src/ftxui/dom/flexbox_helper.hpp	36;"	kind:member	struct:ftxui::flexbox_helper::Line	access:public
y_	./FTXUI/include/ftxui/dom/selection.hpp	45;"	kind:member	class:ftxui::Selection	access:private
y_frame_	./FTXUI/src/ftxui/dom/frame.cpp	80;"	kind:member	class:ftxui::__anon33::Frame	file:	access:private
y_max	./FTXUI/include/ftxui/screen/box.hpp	13;"	kind:member	struct:ftxui::Box	access:public
y_max_	./FTXUI/include/ftxui/dom/table.hpp	90;"	kind:member	class:ftxui::TableSelection	access:private
y_min	./FTXUI/include/ftxui/screen/box.hpp	12;"	kind:member	struct:ftxui::Box	access:public
y_min_	./FTXUI/include/ftxui/dom/table.hpp	89;"	kind:member	class:ftxui::TableSelection	access:private
y_size	./FTXUI/src/ftxui/dom/gridbox.cpp	142;"	kind:member	class:ftxui::__anon16::GridBox	file:	access:public
yflex	./FTXUI/include/ftxui/dom/elements.hpp	145;"	kind:prototype	namespace:ftxui	signature:(Element)
yflex	./FTXUI/src/ftxui/dom/flex.cpp	135;"	kind:function	namespace:ftxui	signature:(Element child)
yflex_grow	./FTXUI/include/ftxui/dom/elements.hpp	146;"	kind:prototype	namespace:ftxui	signature:(Element)
yflex_grow	./FTXUI/src/ftxui/dom/flex.cpp	153;"	kind:function	namespace:ftxui	signature:(Element child)
yflex_shrink	./FTXUI/include/ftxui/dom/elements.hpp	147;"	kind:prototype	namespace:ftxui	signature:(Element)
yflex_shrink	./FTXUI/src/ftxui/dom/flex.cpp	171;"	kind:function	namespace:ftxui	signature:(Element child)
yframe	./FTXUI/include/ftxui/dom/elements.hpp	163;"	kind:prototype	namespace:ftxui	signature:(Element)
yframe	./FTXUI/src/ftxui/dom/frame.cpp	134;"	kind:function	namespace:ftxui	signature:(Element child)
z	./FTXUI/include/ftxui/component/event.hpp	92;"	kind:member	struct:ftxui::Event	access:public
z	./FTXUI/src/ftxui/component/event.cpp	354;"	kind:member	class:ftxui::Event	file:
~Adapter	./FTXUI/include/ftxui/util/ref.hpp	126;"	kind:prototype	class:ftxui::ConstStringListRef::Adapter	access:public	implementation:virtual	signature:()
~AutoReset	./FTXUI/include/ftxui/util/autoreset.hpp	23;"	kind:function	class:ftxui::AutoReset	access:public	signature:()
~CapturedMouseInterface	./FTXUI/include/ftxui/component/captured_mouse.hpp	17;"	kind:prototype	class:ftxui::CapturedMouseInterface	access:public	implementation:virtual	signature:()
~ComponentBase	./FTXUI/include/ftxui/component/component_base.hpp	34;"	kind:prototype	class:ftxui::ComponentBase	access:public	implementation:virtual	signature:()
~ComponentBase	./FTXUI/src/ftxui/component/component.cpp	31;"	kind:function	class:ftxui::ftxui::ComponentBase	signature:()
~ConstRef	./FTXUI/include/ftxui/util/ref.hpp	25;"	kind:prototype	class:ftxui::ConstRef	access:public	signature:()
~ConstStringListRef	./FTXUI/include/ftxui/util/ref.hpp	138;"	kind:prototype	class:ftxui::ConstStringListRef	access:public	signature:()
~Loop	./FTXUI/include/ftxui/component/loop.hpp	20;"	kind:prototype	class:ftxui::Loop	access:public	signature:()
~Loop	./FTXUI/src/ftxui/component/loop.cpp	26;"	kind:function	class:ftxui::Loop	signature:()
~Node	./FTXUI/include/ftxui/dom/node.hpp	32;"	kind:prototype	class:ftxui::Node	access:public	implementation:virtual	signature:()
~Node	./FTXUI/src/ftxui/dom/node.cpp	17;"	kind:prototype	class:ftxui::Node	file:	signature:()
~Ref	./FTXUI/include/ftxui/util/ref.hpp	51;"	kind:prototype	class:ftxui::Ref	access:public	signature:()
~SenderImpl	./FTXUI/include/ftxui/component/receiver.hpp	60;"	kind:function	class:ftxui::SenderImpl	access:public	signature:()
